///////////////////////////////////////////////////////////////////////////////
//
// IAR C/C++ Compiler V10.10.1.4655 for 8051              20/Nov/2021  20:16:44
// Copyright 2004-2017 IAR Systems AB.
// Standalone license - IAR Embedded Workbench for 8051
//
//    Core               =  plain
//    Code model         =  banked
//    Data model         =  large
//    Calling convention =  xdata reentrant
//    Constant location  =  data_rom
//    Dptr setup         =  1,16
//                          
//    Source file        =  
//        D:\Z-Stack Home 1.2.2a.44539\Components\stack\zcl\zcl_closures.c
//    Command line       =  
//        -f C:\Users\tatbo\AppData\Local\Temp\EWC0F1.tmp ("D:\Z-Stack Home
//        1.2.2a.44539\Components\stack\zcl\zcl_closures.c" -D SECURE=1 -D
//        HAL_KEY=FALSE -D HAL_LED=FALSE -D HAL_LCD=FALSE -D HAL_UART=FALSE -D
//        TC_LINKKEY_JOIN -D NV_INIT -D NV_RESTORE -D xHOLD_AUTO_START -D
//        ZTOOL_P1 -D MT_TASK -D MT_APP_FUNC -D MT_SYS_FUNC -D MT_ZDO_FUNC -D
//        LCD_SUPPORTED=FALSE -D MULTICAST_ENABLED=FALSE -D ZCL_READ -D
//        ZCL_WRITE -D ZCL_REPORT -D xZCL_EZMODE -D ZCL_BASIC -D ZCL_IDENTIFY
//        -D ZCL_ON_OFF -D ZCL_SCENES -D ZCL_GROUPS -D xZCL_LEVEL_CTRL -D
//        ZCL_DIAGNOSTIC -D FEATURE_SYSTEM_STATS -D ZCL_DOORLOCK -lC
//        "D:\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\ZigUP\CC2530DB\EndDeviceEB\List"
//        -lA "D:\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\ZigUP\CC2530DB\EndDeviceEB\List"
//        --diag_suppress Pe001,Pa010 -o "D:\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\ZigUP\CC2530DB\EndDeviceEB\Obj"
//        -e --debug --core=plain --dptr=16,1 --data_model=large
//        --code_model=banked --calling_convention=xdata_reentrant
//        --place_constants=data_rom --nr_virtual_regs 16 -f "D:\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\ZigUP\CC2530DB\..\..\..\Tools\CC2530DB\f8wEndev.cfg"
//        (-DCPU32MHZ -DROOT=__near_func -DMAC_CFG_TX_DATA_MAX=3
//        -DMAC_CFG_TX_MAX=6 -DMAC_CFG_RX_MAX=3) -f "D:\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\ZigUP\CC2530DB\..\..\..\Tools\CC2530DB\f8wConfig.cfg"
//        (-DZIGBEEPRO -DSECURE=1 -DZG_SECURE_DYNAMIC=0 -DREFLECTOR
//        -DDEFAULT_CHANLIST=0x00000800 -DZDAPP_CONFIG_PAN_ID=0xFFFF
//        -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MASK=0x007F
//        -DBEACON_REQUEST_DELAY=100 -DBEACON_REQ_DELAY_MASK=0x00FF
//        -DLINK_STATUS_JITTER_MASK=0x007F -DROUTE_EXPIRY_TIME=30
//        -DAPSC_ACK_WAIT_DURATION_POLLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7
//        -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3
//        -DNWK_MAX_DATA_RETRIES=2 -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9
//        -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40 -DNWK_MAX_BINDING_ENTRIES=4
//        -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01, 0x03, 0x05, 0x07,
//        0x09, 0x0B, 0x0D, 0x0F, 0x00, 0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C,
//        0x0D}" -DMAC_MAX_FRAME_SIZE=116 -DZDNWKMGR_MIN_TRANSMISSIONS=20
//        "-DCONST=const __code" -DGENERIC=__generic -DRFD_RCVC_ALWAYS_ON=FALSE
//        -DPOLL_RATE=1000 -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100
//        -DREJOIN_POLL_RATE=440 -DREJOIN_BACKOFF=900000 -DREJOIN_SCAN=900000)
//        -f "D:\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\ZigUP\CC2530DB\..\..\..\Tools\CC2530DB\f8wZCL.cfg"
//        -I "D:\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\ZigUP\CC2530DB\" -I
//        "D:\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\ZigUP\CC2530DB\..\Source\"
//        -I "D:\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\ZigUP\CC2530DB\..\..\Source\"
//        -I "D:\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\ZigUP\CC2530DB\..\..\..\ZMain\TI2530DB\"
//        -I "D:\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\ZigUP\CC2530DB\..\..\..\..\..\Components\hal\include\"
//        -I "D:\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\ZigUP\CC2530DB\..\..\..\..\..\Components\hal\target\CC2530EB\"
//        -I "D:\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\ZigUP\CC2530DB\..\..\..\..\..\Components\mac\include\"
//        -I "D:\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\ZigUP\CC2530DB\..\..\..\..\..\Components\mac\high_level\"
//        -I "D:\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\ZigUP\CC2530DB\..\..\..\..\..\Components\mac\low_level\srf04\"
//        -I "D:\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\ZigUP\CC2530DB\..\..\..\..\..\Components\mac\low_level\srf04\single_chip\"
//        -I "D:\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\ZigUP\CC2530DB\..\..\..\..\..\Components\mt\"
//        -I "D:\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\ZigUP\CC2530DB\..\..\..\..\..\Components\osal\include\"
//        -I "D:\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\ZigUP\CC2530DB\..\..\..\..\..\Components\services\saddr\"
//        -I "D:\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\ZigUP\CC2530DB\..\..\..\..\..\Components\services\sdata\"
//        -I "D:\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\ZigUP\CC2530DB\..\..\..\..\..\Components\stack\af\"
//        -I "D:\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\ZigUP\CC2530DB\..\..\..\..\..\Components\stack\nwk\"
//        -I "D:\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\ZigUP\CC2530DB\..\..\..\..\..\Components\stack\sapi\"
//        -I "D:\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\ZigUP\CC2530DB\..\..\..\..\..\Components\stack\sec\"
//        -I "D:\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\ZigUP\CC2530DB\..\..\..\..\..\Components\stack\sys\"
//        -I "D:\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\ZigUP\CC2530DB\..\..\..\..\..\Components\stack\zcl\"
//        -I "D:\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\ZigUP\CC2530DB\..\..\..\..\..\Components\stack\zdo\"
//        -I "D:\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\ZigUP\CC2530DB\..\..\..\..\..\Components\zmac\"
//        -I "D:\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\ZigUP\CC2530DB\..\..\..\..\..\Components\zmac\f8w\"
//        -Ohz --require_prototypes)
//    Locale             =  Chinese (Simplified)_China.936
//    List file          =  
//        D:\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\ZigUP\CC2530DB\EndDeviceEB\List\zcl_closures.s51
//
///////////////////////////////////////////////////////////////////////////////

        NAME zcl_closures

        RTMODEL "__SystemLibrary", "CLib"
        RTMODEL "__calling_convention", "xdata_reentrant"
        RTMODEL "__code_model", "banked"
        RTMODEL "__core", "plain"
        RTMODEL "__data_model", "large"
        RTMODEL "__dptr_size", "16"
        RTMODEL "__extended_stack", "disabled"
        RTMODEL "__location_for_constants", "data"
        RTMODEL "__number_of_dptrs", "1"
        RTMODEL "__register_banks", "*"
        RTMODEL "__rt_version", "1"

        RSEG DOVERLAY:DATA:NOROOT(0)
        RSEG IOVERLAY:IDATA:NOROOT(0)
        RSEG ISTACK:IDATA:NOROOT(0)
        RSEG PSTACK:XDATA:NOROOT(0)
        RSEG XSTACK:XDATA:NOROOT(0)

        EXTERN ?V0
        EXTERN ?V2
        EXTERN ?V3
        EXTERN ?V1
        EXTERN ?V4
        EXTERN ?V6
        EXTERN ?V7
        EXTERN ?V5
        EXTERN ?V8
        EXTERN ?V10
        EXTERN ?V11
        EXTERN ?V12
        EXTERN ?V13
        EXTERN ?V9
        EXTERN ?ALLOC_XSTACK8
        EXTERN ?BANKED_ENTER_XDATA
        EXTERN ?BANKED_LEAVE_XDATA
        EXTERN ?BDISPATCH
        EXTERN ?CALL_IND
        EXTERN ?DEALLOC_XSTACK8
        EXTERN ?L_ADD
        EXTERN ?L_MOV_TO_X
        EXTERN ?L_MOV_X
        EXTERN ?L_SHL
        EXTERN ?PUSH_XSTACK_I_ONE
        EXTERN ?PUSH_XSTACK_I_TWO
        EXTERN ?UC_SWITCH_DENSE
        EXTERN ?UL_SHR
        EXTERN ?US_SWITCH_DENSE
        EXTERN ?XSP
        EXTERN ?XSTACK_DISP0_8
        EXTERN ?XSTACK_DISP102_8
        EXTERN __INIT_XDATA_Z

        FUNCTION `??zclClosures_HdlIncoming::?relay`,0203H
        FUNCTION `??zclClosures_ProcessInDoorLock::?relay`,0203H
        FUNCTION `??zclClosures_ProcessInDoorLockCmds::?relay`,0203H
        FUNCTION ??zclClosures_ProcessInDoorLockGetHolidaySchedu,0203H
        FUNCTION `??zclClosures_ProcessInDoorLockGetLogRecordRsp:`,0203H
        FUNCTION `??zclClosures_ProcessInDoorLockGetPINCodeRsp::?`,0203H
        FUNCTION `??zclClosures_ProcessInDoorLockGetRFIDCodeRsp::`,0203H
        FUNCTION ??zclClosures_ProcessInDoorLockGetWeekDaySchedu,0203H
        FUNCTION ??zclClosures_ProcessInDoorLockGetYearDaySchedu,0203H
        FUNCTION ??zclClosures_ProcessInDoorLockOperationEventNo,0203H
        FUNCTION ??zclClosures_ProcessInDoorLockProgrammingEvent,0203H
        FUNCTION ??zclClosures_ProcessInDoorLockSetHolidaySchedu,0203H
        FUNCTION `??zclClosures_ProcessInDoorLockSetPINCode::?rel`,0203H
        FUNCTION `??zclClosures_ProcessInDoorLockSetRFIDCode::?re`,0203H
        FUNCTION ??zclClosures_ProcessInDoorLockSetWeekDaySchedu,0203H
        FUNCTION ??zclClosures_ProcessInDoorLockSetYearDaySchedu,0203H
        FUNCTION ??zclClosures_ProcessInDoorLockUnlockWithTimeou,0203H
        PUBLIC `??zclClosures_RegisterDoorLockCmdCallbacks::?re`
        FUNCTION `??zclClosures_RegisterDoorLockCmdCallbacks::?re`,0203H
        PUBLIC `??zclClosures_SendDoorLockClearAllCodesRequest:`
        FUNCTION `??zclClosures_SendDoorLockClearAllCodesRequest:`,0203H
        PUBLIC ??zclClosures_SendDoorLockGetHolidayScheduleRes
        FUNCTION ??zclClosures_SendDoorLockGetHolidayScheduleRes,0203H
        PUBLIC `??zclClosures_SendDoorLockGetLogRecordRequest::`
        FUNCTION `??zclClosures_SendDoorLockGetLogRecordRequest::`,0203H
        PUBLIC `??zclClosures_SendDoorLockGetLogRecordResponse:`
        FUNCTION `??zclClosures_SendDoorLockGetLogRecordResponse:`,0203H
        PUBLIC `??zclClosures_SendDoorLockGetPINCodeResponse::?`
        FUNCTION `??zclClosures_SendDoorLockGetPINCodeResponse::?`,0203H
        PUBLIC `??zclClosures_SendDoorLockGetRFIDCodeResponse::`
        FUNCTION `??zclClosures_SendDoorLockGetRFIDCodeResponse::`,0203H
        PUBLIC ??zclClosures_SendDoorLockGetUserStatusResponse
        FUNCTION ??zclClosures_SendDoorLockGetUserStatusResponse,0203H
        PUBLIC `??zclClosures_SendDoorLockGetUserTypeResponse::`
        FUNCTION `??zclClosures_SendDoorLockGetUserTypeResponse::`,0203H
        PUBLIC ??zclClosures_SendDoorLockGetWeekDayScheduleRes
        FUNCTION ??zclClosures_SendDoorLockGetWeekDayScheduleRes,0203H
        PUBLIC ??zclClosures_SendDoorLockGetYearDayScheduleRes
        FUNCTION ??zclClosures_SendDoorLockGetYearDayScheduleRes,0203H
        PUBLIC ??zclClosures_SendDoorLockHolidayScheduleReques
        FUNCTION ??zclClosures_SendDoorLockHolidayScheduleReques,0203H
        PUBLIC ??zclClosures_SendDoorLockOperationEventNotific
        FUNCTION ??zclClosures_SendDoorLockOperationEventNotific,0203H
        PUBLIC ??zclClosures_SendDoorLockProgrammingEventNotif
        FUNCTION ??zclClosures_SendDoorLockProgrammingEventNotif,0203H
        PUBLIC `??zclClosures_SendDoorLockRequest::?relay`
        FUNCTION `??zclClosures_SendDoorLockRequest::?relay`,0203H
        PUBLIC `??zclClosures_SendDoorLockScheduleRequest::?rel`
        FUNCTION `??zclClosures_SendDoorLockScheduleRequest::?rel`,0203H
        PUBLIC ??zclClosures_SendDoorLockSetHolidayScheduleReq
        FUNCTION ??zclClosures_SendDoorLockSetHolidayScheduleReq,0203H
        PUBLIC `??zclClosures_SendDoorLockSetPINCodeRequest::?r`
        FUNCTION `??zclClosures_SendDoorLockSetPINCodeRequest::?r`,0203H
        PUBLIC `??zclClosures_SendDoorLockSetRFIDCodeRequest::?`
        FUNCTION `??zclClosures_SendDoorLockSetRFIDCodeRequest::?`,0203H
        PUBLIC `??zclClosures_SendDoorLockSetUserStatusRequest:`
        FUNCTION `??zclClosures_SendDoorLockSetUserStatusRequest:`,0203H
        PUBLIC `??zclClosures_SendDoorLockSetUserTypeRequest::?`
        FUNCTION `??zclClosures_SendDoorLockSetUserTypeRequest::?`,0203H
        PUBLIC ??zclClosures_SendDoorLockSetWeekDayScheduleReq
        FUNCTION ??zclClosures_SendDoorLockSetWeekDayScheduleReq,0203H
        PUBLIC ??zclClosures_SendDoorLockSetYearDayScheduleReq
        FUNCTION ??zclClosures_SendDoorLockSetYearDayScheduleReq,0203H
        PUBLIC `??zclClosures_SendDoorLockStatusResponse::?rela`
        FUNCTION `??zclClosures_SendDoorLockStatusResponse::?rela`,0203H
        PUBLIC `??zclClosures_SendDoorLockUnlockTimeoutRequest:`
        FUNCTION `??zclClosures_SendDoorLockUnlockTimeoutRequest:`,0203H
        PUBLIC `??zclClosures_SendDoorLockUserIDRequest::?relay`
        FUNCTION `??zclClosures_SendDoorLockUserIDRequest::?relay`,0203H
        FUNCTION zclClosures_HdlIncoming,0a1603H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        FUNCTION zclClosures_ProcessInDoorLock,0a1203H
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 15, STACK
        FUNCTION zclClosures_ProcessInDoorLockCmds,0a1203H
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 16, STACK
        FUNCTION zclClosures_ProcessInDoorLockGetHolidayScheduleRsp,080203H
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 27, STACK
        FUNCTION zclClosures_ProcessInDoorLockGetLogRecordRsp,0a1203H
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 35, STACK
        FUNCTION zclClosures_ProcessInDoorLockGetPINCodeRsp,0a1203H
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 22, STACK
        FUNCTION zclClosures_ProcessInDoorLockGetRFIDCodeRsp,0a1203H
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 22, STACK
        FUNCTION zclClosures_ProcessInDoorLockGetWeekDayScheduleRsp,080203H
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 21, STACK
        FUNCTION zclClosures_ProcessInDoorLockGetYearDayScheduleRsp,080203H
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 28, STACK
        FUNCTION zclClosures_ProcessInDoorLockOperationEventNotification,0a1203H
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 33, STACK
        FUNCTION zclClosures_ProcessInDoorLockProgrammingEventNotification,0a1203H
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 35, STACK
        FUNCTION zclClosures_ProcessInDoorLockSetHolidaySchedule,080203H
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 26, STACK
        FUNCTION zclClosures_ProcessInDoorLockSetPINCode,0a1203H
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 22, STACK
        FUNCTION zclClosures_ProcessInDoorLockSetRFIDCode,0a1203H
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 22, STACK
        FUNCTION zclClosures_ProcessInDoorLockSetWeekDaySchedule,080203H
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 20, STACK
        FUNCTION zclClosures_ProcessInDoorLockSetYearDaySchedule,080203H
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 27, STACK
        FUNCTION zclClosures_ProcessInDoorLockUnlockWithTimeout,0a1203H
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 20, STACK
        PUBLIC zclClosures_RegisterDoorLockCmdCallbacks
        FUNCTION zclClosures_RegisterDoorLockCmdCallbacks,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 14, STACK
        PUBLIC zclClosures_SendDoorLockClearAllCodesRequest
        FUNCTION zclClosures_SendDoorLockClearAllCodesRequest,0a1203H
        ARGFRAME XSTACK, 1, STACK
        LOCFRAME XSTACK, 23, STACK
        PUBLIC zclClosures_SendDoorLockGetHolidayScheduleResponse
        FUNCTION zclClosures_SendDoorLockGetHolidayScheduleResponse,0a1203H
        ARGFRAME XSTACK, 2, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 36, STACK
        PUBLIC zclClosures_SendDoorLockGetLogRecordRequest
        FUNCTION zclClosures_SendDoorLockGetLogRecordRequest,0a1203H
        ARGFRAME XSTACK, 2, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 23, STACK
        PUBLIC zclClosures_SendDoorLockGetLogRecordResponse
        FUNCTION zclClosures_SendDoorLockGetLogRecordResponse,0a1203H
        ARGFRAME XSTACK, 2, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 34, STACK
        PUBLIC zclClosures_SendDoorLockGetPINCodeResponse
        FUNCTION zclClosures_SendDoorLockGetPINCodeResponse,0a1203H
        ARGFRAME XSTACK, 2, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 32, STACK
        PUBLIC zclClosures_SendDoorLockGetRFIDCodeResponse
        FUNCTION zclClosures_SendDoorLockGetRFIDCodeResponse,0a1203H
        ARGFRAME XSTACK, 2, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 32, STACK
        PUBLIC zclClosures_SendDoorLockGetUserStatusResponse
        FUNCTION zclClosures_SendDoorLockGetUserStatusResponse,0a1203H
        ARGFRAME XSTACK, 3, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 24, STACK
        PUBLIC zclClosures_SendDoorLockGetUserTypeResponse
        FUNCTION zclClosures_SendDoorLockGetUserTypeResponse,0a1203H
        ARGFRAME XSTACK, 3, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 24, STACK
        PUBLIC zclClosures_SendDoorLockGetWeekDayScheduleResponse
        FUNCTION zclClosures_SendDoorLockGetWeekDayScheduleResponse,0a1203H
        ARGFRAME XSTACK, 2, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 30, STACK
        PUBLIC zclClosures_SendDoorLockGetYearDayScheduleResponse
        FUNCTION zclClosures_SendDoorLockGetYearDayScheduleResponse,0a1203H
        ARGFRAME XSTACK, 2, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 37, STACK
        PUBLIC zclClosures_SendDoorLockHolidayScheduleRequest
        FUNCTION zclClosures_SendDoorLockHolidayScheduleRequest,0a1203H
        ARGFRAME XSTACK, 2, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 24, STACK
        PUBLIC zclClosures_SendDoorLockOperationEventNotification
        FUNCTION zclClosures_SendDoorLockOperationEventNotification,0a1203H
        ARGFRAME XSTACK, 2, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 33, STACK
        PUBLIC zclClosures_SendDoorLockProgrammingEventNotification
        FUNCTION zclClosures_SendDoorLockProgrammingEventNotification,0a1203H
        ARGFRAME XSTACK, 2, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 33, STACK
        PUBLIC zclClosures_SendDoorLockRequest
        FUNCTION zclClosures_SendDoorLockRequest,0a1203H
        ARGFRAME XSTACK, 3, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 31, STACK
        PUBLIC zclClosures_SendDoorLockScheduleRequest
        FUNCTION zclClosures_SendDoorLockScheduleRequest,0a1203H
        ARGFRAME XSTACK, 4, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 26, STACK
        PUBLIC zclClosures_SendDoorLockSetHolidayScheduleRequest
        FUNCTION zclClosures_SendDoorLockSetHolidayScheduleRequest,0a1203H
        ARGFRAME XSTACK, 10, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 38, STACK
        PUBLIC zclClosures_SendDoorLockSetPINCodeRequest
        FUNCTION zclClosures_SendDoorLockSetPINCodeRequest,0a1203H
        ARGFRAME XSTACK, 2, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 32, STACK
        PUBLIC zclClosures_SendDoorLockSetRFIDCodeRequest
        FUNCTION zclClosures_SendDoorLockSetRFIDCodeRequest,0a1203H
        ARGFRAME XSTACK, 2, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 32, STACK
        PUBLIC zclClosures_SendDoorLockSetUserStatusRequest
        FUNCTION zclClosures_SendDoorLockSetUserStatusRequest,0a1203H
        ARGFRAME XSTACK, 3, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 24, STACK
        PUBLIC zclClosures_SendDoorLockSetUserTypeRequest
        FUNCTION zclClosures_SendDoorLockSetUserTypeRequest,0a1203H
        ARGFRAME XSTACK, 3, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 24, STACK
        PUBLIC zclClosures_SendDoorLockSetWeekDayScheduleRequest
        FUNCTION zclClosures_SendDoorLockSetWeekDayScheduleRequest,0a1203H
        ARGFRAME XSTACK, 8, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 31, STACK
        PUBLIC zclClosures_SendDoorLockSetYearDayScheduleRequest
        FUNCTION zclClosures_SendDoorLockSetYearDayScheduleRequest,0a1203H
        ARGFRAME XSTACK, 11, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 39, STACK
        PUBLIC zclClosures_SendDoorLockStatusResponse
        FUNCTION zclClosures_SendDoorLockStatusResponse,0a1203H
        ARGFRAME XSTACK, 2, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 24, STACK
        PUBLIC zclClosures_SendDoorLockUnlockTimeoutRequest
        FUNCTION zclClosures_SendDoorLockUnlockTimeoutRequest,0a1203H
        ARGFRAME XSTACK, 2, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 31, STACK
        PUBLIC zclClosures_SendDoorLockUserIDRequest
        FUNCTION zclClosures_SendDoorLockUserIDRequest,0a1203H
        ARGFRAME XSTACK, 3, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 25, STACK
        
          CFI Names cfiNames0
          CFI StackFrame CFA_SP SP IDATA
          CFI StackFrame CFA_PSP16 PSP16 XDATA
          CFI StackFrame CFA_XSP16 XSP16 XDATA
          CFI StaticOverlayFrame CFA_IOVERLAY IOVERLAY
          CFI StaticOverlayFrame CFA_DOVERLAY DOVERLAY
          CFI Resource `PSW.CY`:1, `B.BR0`:1, `B.BR1`:1, `B.BR2`:1, `B.BR3`:1
          CFI Resource `B.BR4`:1, `B.BR5`:1, `B.BR6`:1, `B.BR7`:1, `VB.BR8`:1
          CFI Resource `VB.BR9`:1, `VB.BR10`:1, `VB.BR11`:1, `VB.BR12`:1
          CFI Resource `VB.BR13`:1, `VB.BR14`:1, `VB.BR15`:1, VB:8, B:8, A:8
          CFI Resource PSW:8, DPL0:8, DPH0:8, R0:8, R1:8, R2:8, R3:8, R4:8, R5:8
          CFI Resource R6:8, R7:8, V0:8, V1:8, V2:8, V3:8, V4:8, V5:8, V6:8, V7:8
          CFI Resource V8:8, V9:8, V10:8, V11:8, V12:8, V13:8, V14:8, V15:8, SP:8
          CFI Resource PSPH:8, PSPL:8, PSP16:16, XSPH:8, XSPL:8, XSP16:16
          CFI VirtualResource ?RET:24
          CFI Resource ?BRET_EXT:8
          CFI VirtualResource ?RET_HIGH:8, ?RET_LOW:8
          CFI ResourceParts PSP16 PSPH, PSPL
          CFI ResourceParts XSP16 XSPH, XSPL
          CFI ResourceParts ?RET ?BRET_EXT, ?RET_HIGH, ?RET_LOW
          CFI EndNames cfiNames0
        
          CFI Common cfiCommon0 Using cfiNames0
          CFI CodeAlign 1
          CFI DataAlign -1
          CFI ReturnAddress ?RET CODE
          CFI CFA_DOVERLAY Used
          CFI CFA_IOVERLAY Used
          CFI CFA_SP SP+-3
          CFI CFA_PSP16 PSP16+0
          CFI CFA_XSP16 XSP16+0
          CFI `PSW.CY` SameValue
          CFI `B.BR0` SameValue
          CFI `B.BR1` SameValue
          CFI `B.BR2` SameValue
          CFI `B.BR3` SameValue
          CFI `B.BR4` SameValue
          CFI `B.BR5` SameValue
          CFI `B.BR6` SameValue
          CFI `B.BR7` SameValue
          CFI `VB.BR8` SameValue
          CFI `VB.BR9` SameValue
          CFI `VB.BR10` SameValue
          CFI `VB.BR11` SameValue
          CFI `VB.BR12` SameValue
          CFI `VB.BR13` SameValue
          CFI `VB.BR14` SameValue
          CFI `VB.BR15` SameValue
          CFI VB SameValue
          CFI B Undefined
          CFI A Undefined
          CFI PSW SameValue
          CFI DPL0 SameValue
          CFI DPH0 SameValue
          CFI R0 Undefined
          CFI R1 Undefined
          CFI R2 Undefined
          CFI R3 Undefined
          CFI R4 Undefined
          CFI R5 Undefined
          CFI R6 SameValue
          CFI R7 SameValue
          CFI V0 SameValue
          CFI V1 SameValue
          CFI V2 SameValue
          CFI V3 SameValue
          CFI V4 SameValue
          CFI V5 SameValue
          CFI V6 SameValue
          CFI V7 SameValue
          CFI V8 SameValue
          CFI V9 SameValue
          CFI V10 SameValue
          CFI V11 SameValue
          CFI V12 SameValue
          CFI V13 SameValue
          CFI V14 SameValue
          CFI V15 SameValue
          CFI PSPH Undefined
          CFI PSPL Undefined
          CFI XSPH Undefined
          CFI XSPL Undefined
          CFI ?RET Concat
          CFI ?BRET_EXT Frame(CFA_SP, 3)
          CFI ?RET_HIGH Frame(CFA_SP, 2)
          CFI ?RET_LOW Frame(CFA_SP, 1)
          CFI EndCommon cfiCommon0
        
        
          CFI Common cfiCommon1 Using cfiNames0
          CFI CodeAlign 1
          CFI DataAlign -1
          CFI ReturnAddress ?RET CODE
          CFI CFA_DOVERLAY Used
          CFI CFA_IOVERLAY Used
          CFI CFA_SP SP+-2
          CFI CFA_PSP16 PSP16+0
          CFI CFA_XSP16 XSP16+0
          CFI `PSW.CY` SameValue
          CFI `B.BR0` SameValue
          CFI `B.BR1` SameValue
          CFI `B.BR2` SameValue
          CFI `B.BR3` SameValue
          CFI `B.BR4` SameValue
          CFI `B.BR5` SameValue
          CFI `B.BR6` SameValue
          CFI `B.BR7` SameValue
          CFI `VB.BR8` SameValue
          CFI `VB.BR9` SameValue
          CFI `VB.BR10` SameValue
          CFI `VB.BR11` SameValue
          CFI `VB.BR12` SameValue
          CFI `VB.BR13` SameValue
          CFI `VB.BR14` SameValue
          CFI `VB.BR15` SameValue
          CFI VB SameValue
          CFI B SameValue
          CFI A SameValue
          CFI PSW SameValue
          CFI DPL0 SameValue
          CFI DPH0 SameValue
          CFI R0 SameValue
          CFI R1 SameValue
          CFI R2 SameValue
          CFI R3 SameValue
          CFI R4 SameValue
          CFI R5 SameValue
          CFI R6 SameValue
          CFI R7 SameValue
          CFI V0 SameValue
          CFI V1 SameValue
          CFI V2 SameValue
          CFI V3 SameValue
          CFI V4 SameValue
          CFI V5 SameValue
          CFI V6 SameValue
          CFI V7 SameValue
          CFI V8 SameValue
          CFI V9 SameValue
          CFI V10 SameValue
          CFI V11 SameValue
          CFI V12 SameValue
          CFI V13 SameValue
          CFI V14 SameValue
          CFI V15 SameValue
          CFI PSPH Undefined
          CFI PSPL Undefined
          CFI XSPH Undefined
          CFI XSPL Undefined
          CFI ?RET Concat
          CFI ?BRET_EXT SameValue
          CFI ?RET_HIGH Frame(CFA_SP, 2)
          CFI ?RET_LOW Frame(CFA_SP, 1)
          CFI EndCommon cfiCommon1
        
osal_mem_alloc      SYMBOL "osal_mem_alloc"
`??osal_mem_alloc::?relay` SYMBOL "?relay", osal_mem_alloc
osal_mem_free       SYMBOL "osal_mem_free"
`??osal_mem_free::?relay` SYMBOL "?relay", osal_mem_free
zcl_SendCommand     SYMBOL "zcl_SendCommand"
`??zcl_SendCommand::?relay` SYMBOL "?relay", zcl_SendCommand
zcl_registerPlugin  SYMBOL "zcl_registerPlugin"
`??zcl_registerPlugin::?relay` SYMBOL "?relay", zcl_registerPlugin
zclClosures_RegisterDoorLockCmdCallbacks SYMBOL "zclClosures_RegisterDoorLockCmdCallbacks"
`??zclClosures_RegisterDoorLockCmdCallbacks::?re` SYMBOL "?relay", zclClosures_RegisterDoorLockCmdCallbacks
zclClosures_SendDoorLockClearAllCodesRequest SYMBOL "zclClosures_SendDoorLockClearAllCodesRequest"
`??zclClosures_SendDoorLockClearAllCodesRequest:` SYMBOL "?relay", zclClosures_SendDoorLockClearAllCodesRequest
zclClosures_SendDoorLockGetHolidayScheduleResponse SYMBOL "zclClosures_SendDoorLockGetHolidayScheduleResponse"
??zclClosures_SendDoorLockGetHolidayScheduleRes SYMBOL "?relay", zclClosures_SendDoorLockGetHolidayScheduleResponse
zclClosures_SendDoorLockGetLogRecordRequest SYMBOL "zclClosures_SendDoorLockGetLogRecordRequest"
`??zclClosures_SendDoorLockGetLogRecordRequest::` SYMBOL "?relay", zclClosures_SendDoorLockGetLogRecordRequest
zclClosures_SendDoorLockGetLogRecordResponse SYMBOL "zclClosures_SendDoorLockGetLogRecordResponse"
`??zclClosures_SendDoorLockGetLogRecordResponse:` SYMBOL "?relay", zclClosures_SendDoorLockGetLogRecordResponse
zclClosures_SendDoorLockGetPINCodeResponse SYMBOL "zclClosures_SendDoorLockGetPINCodeResponse"
`??zclClosures_SendDoorLockGetPINCodeResponse::?` SYMBOL "?relay", zclClosures_SendDoorLockGetPINCodeResponse
zclClosures_SendDoorLockGetRFIDCodeResponse SYMBOL "zclClosures_SendDoorLockGetRFIDCodeResponse"
`??zclClosures_SendDoorLockGetRFIDCodeResponse::` SYMBOL "?relay", zclClosures_SendDoorLockGetRFIDCodeResponse
zclClosures_SendDoorLockGetUserStatusResponse SYMBOL "zclClosures_SendDoorLockGetUserStatusResponse"
??zclClosures_SendDoorLockGetUserStatusResponse SYMBOL "?relay", zclClosures_SendDoorLockGetUserStatusResponse
zclClosures_SendDoorLockGetUserTypeResponse SYMBOL "zclClosures_SendDoorLockGetUserTypeResponse"
`??zclClosures_SendDoorLockGetUserTypeResponse::` SYMBOL "?relay", zclClosures_SendDoorLockGetUserTypeResponse
zclClosures_SendDoorLockGetWeekDayScheduleResponse SYMBOL "zclClosures_SendDoorLockGetWeekDayScheduleResponse"
??zclClosures_SendDoorLockGetWeekDayScheduleRes SYMBOL "?relay", zclClosures_SendDoorLockGetWeekDayScheduleResponse
zclClosures_SendDoorLockGetYearDayScheduleResponse SYMBOL "zclClosures_SendDoorLockGetYearDayScheduleResponse"
??zclClosures_SendDoorLockGetYearDayScheduleRes SYMBOL "?relay", zclClosures_SendDoorLockGetYearDayScheduleResponse
zclClosures_SendDoorLockHolidayScheduleRequest SYMBOL "zclClosures_SendDoorLockHolidayScheduleRequest"
??zclClosures_SendDoorLockHolidayScheduleReques SYMBOL "?relay", zclClosures_SendDoorLockHolidayScheduleRequest
zclClosures_SendDoorLockOperationEventNotification SYMBOL "zclClosures_SendDoorLockOperationEventNotification"
??zclClosures_SendDoorLockOperationEventNotific SYMBOL "?relay", zclClosures_SendDoorLockOperationEventNotification
zclClosures_SendDoorLockProgrammingEventNotification SYMBOL "zclClosures_SendDoorLockProgrammingEventNotification"
??zclClosures_SendDoorLockProgrammingEventNotif SYMBOL "?relay", zclClosures_SendDoorLockProgrammingEventNotification
zclClosures_SendDoorLockRequest SYMBOL "zclClosures_SendDoorLockRequest"
`??zclClosures_SendDoorLockRequest::?relay` SYMBOL "?relay", zclClosures_SendDoorLockRequest
zclClosures_SendDoorLockScheduleRequest SYMBOL "zclClosures_SendDoorLockScheduleRequest"
`??zclClosures_SendDoorLockScheduleRequest::?rel` SYMBOL "?relay", zclClosures_SendDoorLockScheduleRequest
zclClosures_SendDoorLockSetHolidayScheduleRequest SYMBOL "zclClosures_SendDoorLockSetHolidayScheduleRequest"
??zclClosures_SendDoorLockSetHolidayScheduleReq SYMBOL "?relay", zclClosures_SendDoorLockSetHolidayScheduleRequest
zclClosures_SendDoorLockSetPINCodeRequest SYMBOL "zclClosures_SendDoorLockSetPINCodeRequest"
`??zclClosures_SendDoorLockSetPINCodeRequest::?r` SYMBOL "?relay", zclClosures_SendDoorLockSetPINCodeRequest
zclClosures_SendDoorLockSetRFIDCodeRequest SYMBOL "zclClosures_SendDoorLockSetRFIDCodeRequest"
`??zclClosures_SendDoorLockSetRFIDCodeRequest::?` SYMBOL "?relay", zclClosures_SendDoorLockSetRFIDCodeRequest
zclClosures_SendDoorLockSetUserStatusRequest SYMBOL "zclClosures_SendDoorLockSetUserStatusRequest"
`??zclClosures_SendDoorLockSetUserStatusRequest:` SYMBOL "?relay", zclClosures_SendDoorLockSetUserStatusRequest
zclClosures_SendDoorLockSetUserTypeRequest SYMBOL "zclClosures_SendDoorLockSetUserTypeRequest"
`??zclClosures_SendDoorLockSetUserTypeRequest::?` SYMBOL "?relay", zclClosures_SendDoorLockSetUserTypeRequest
zclClosures_SendDoorLockSetWeekDayScheduleRequest SYMBOL "zclClosures_SendDoorLockSetWeekDayScheduleRequest"
??zclClosures_SendDoorLockSetWeekDayScheduleReq SYMBOL "?relay", zclClosures_SendDoorLockSetWeekDayScheduleRequest
zclClosures_SendDoorLockSetYearDayScheduleRequest SYMBOL "zclClosures_SendDoorLockSetYearDayScheduleRequest"
??zclClosures_SendDoorLockSetYearDayScheduleReq SYMBOL "?relay", zclClosures_SendDoorLockSetYearDayScheduleRequest
zclClosures_SendDoorLockStatusResponse SYMBOL "zclClosures_SendDoorLockStatusResponse"
`??zclClosures_SendDoorLockStatusResponse::?rela` SYMBOL "?relay", zclClosures_SendDoorLockStatusResponse
zclClosures_SendDoorLockUnlockTimeoutRequest SYMBOL "zclClosures_SendDoorLockUnlockTimeoutRequest"
`??zclClosures_SendDoorLockUnlockTimeoutRequest:` SYMBOL "?relay", zclClosures_SendDoorLockUnlockTimeoutRequest
zclClosures_SendDoorLockUserIDRequest SYMBOL "zclClosures_SendDoorLockUserIDRequest"
`??zclClosures_SendDoorLockUserIDRequest::?relay` SYMBOL "?relay", zclClosures_SendDoorLockUserIDRequest

        EXTERN `??osal_mem_alloc::?relay`
        FUNCTION `??osal_mem_alloc::?relay`,00H
        EXTERN `??osal_mem_free::?relay`
        FUNCTION `??osal_mem_free::?relay`,00H
        EXTERN `??zcl_SendCommand::?relay`
        FUNCTION `??zcl_SendCommand::?relay`,00H
        EXTERN `??zcl_registerPlugin::?relay`
        FUNCTION `??zcl_registerPlugin::?relay`,00H
        EXTERN osal_mem_alloc
        FUNCTION osal_mem_alloc,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 35, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_mem_free
        FUNCTION osal_mem_free,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 35, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN zcl_SendCommand
        FUNCTION zcl_SendCommand,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 39, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN zcl_registerPlugin
        FUNCTION zcl_registerPlugin,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC

// D:\Z-Stack Home 1.2.2a.44539\Components\stack\zcl\zcl_closures.c
//    1 /**************************************************************************************************
//    2   Filename:       zcl_closures.c
//    3   Revised:        $Date: 2013-10-16 16:38:58 -0700 (Wed, 16 Oct 2013) $
//    4   Revision:       $Revision: 35701 $
//    5 
//    6   Description:    Zigbee Cluster Library - Closures.
//    7 
//    8 
//    9   Copyright 2006-2013 Texas Instruments Incorporated. All rights reserved.
//   10 
//   11   IMPORTANT: Your use of this Software is limited to those specific rights
//   12   granted under the terms of a software license agreement between the user
//   13   who downloaded the software, his/her employer (which must be your employer)
//   14   and Texas Instruments Incorporated (the "License").  You may not use this
//   15   Software unless you agree to abide by the terms of the License. The License
//   16   limits your use, and you acknowledge, that the Software may not be modified,
//   17   copied or distributed unless embedded on a Texas Instruments microcontroller
//   18   or used solely and exclusively in conjunction with a Texas Instruments radio
//   19   frequency transceiver, which is integrated into your product.  Other than for
//   20   the foregoing purpose, you may not use, reproduce, copy, prepare derivative
//   21   works of, modify, distribute, perform, display or sell this Software and/or
//   22   its documentation for any purpose.
//   23 
//   24   YOU FURTHER ACKNOWLEDGE AND AGREE THAT THE SOFTWARE AND DOCUMENTATION ARE
//   25   PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED,
//   26   INCLUDING WITHOUT LIMITATION, ANY WARRANTY OF MERCHANTABILITY, TITLE,
//   27   NON-INFRINGEMENT AND FITNESS FOR A PARTICULAR PURPOSE. IN NO EVENT SHALL
//   28   TEXAS INSTRUMENTS OR ITS LICENSORS BE LIABLE OR OBLIGATED UNDER CONTRACT,
//   29   NEGLIGENCE, STRICT LIABILITY, CONTRIBUTION, BREACH OF WARRANTY, OR OTHER
//   30   LEGAL EQUITABLE THEORY ANY DIRECT OR INDIRECT DAMAGES OR EXPENSES
//   31   INCLUDING BUT NOT LIMITED TO ANY INCIDENTAL, SPECIAL, INDIRECT, PUNITIVE
//   32   OR CONSEQUENTIAL DAMAGES, LOST PROFITS OR LOST DATA, COST OF PROCUREMENT
//   33   OF SUBSTITUTE GOODS, TECHNOLOGY, SERVICES, OR ANY CLAIMS BY THIRD PARTIES
//   34   (INCLUDING BUT NOT LIMITED TO ANY DEFENSE THEREOF), OR OTHER SIMILAR COSTS.
//   35 
//   36   Should you have any questions regarding your right to use this Software,
//   37   contact Texas Instruments Incorporated at www.TI.com.
//   38 **************************************************************************************************/
//   39 
//   40 
//   41 /*********************************************************************
//   42  * INCLUDES
//   43  */
//   44 #include "zcl.h"
//   45 #include "zcl_general.h"
//   46 #include "zcl_closures.h"
//   47 
//   48 #if defined ( INTER_PAN )
//   49   #include "stub_aps.h"
//   50 #endif
//   51 
//   52 /*********************************************************************
//   53  * MACROS
//   54  */
//   55 
//   56 /*********************************************************************
//   57  * CONSTANTS
//   58  */
//   59 
//   60 /*********************************************************************
//   61  * TYPEDEFS
//   62  */
//   63 #ifdef ZCL_DOORLOCK
//   64 typedef struct zclClosuresDoorLockCBRec
//   65 {
//   66   struct zclClosuresDoorLockCBRec     *next;
//   67   uint8                                endpoint; // Used to link it into the endpoint descriptor
//   68   zclClosures_DoorLockAppCallbacks_t  *CBs;     // Pointer to Callback function
//   69 } zclClosuresDoorLockCBRec_t;
//   70 #endif
//   71 
//   72 #ifdef ZCL_WINDOWCOVERING
//   73 typedef struct zclClosuresWindowCoveringCBRec
//   74 {
//   75   struct zclClosuresWindowCoveringCBRec     *next;
//   76   uint8                                     endpoint; // Used to link it into the endpoint descriptor
//   77   zclClosures_WindowCoveringAppCallbacks_t  *CBs;     // Pointer to Callback function
//   78 } zclClosuresWindowCoveringCBRec_t;
//   79 #endif
//   80 
//   81 /*********************************************************************
//   82  * GLOBAL VARIABLES
//   83  */
//   84 
//   85 /*********************************************************************
//   86  * GLOBAL FUNCTIONS
//   87  */
//   88 
//   89 /*********************************************************************
//   90  * LOCAL VARIABLES
//   91  */
//   92 #ifdef ZCL_DOORLOCK

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA16
//   93 static zclClosuresDoorLockCBRec_t *zclClosuresDoorLockCBs = (zclClosuresDoorLockCBRec_t *)NULL;
zclClosuresDoorLockCBs:
        DS 2
        REQUIRE __INIT_XDATA_Z
//   94 #endif
//   95 
//   96 #ifdef ZCL_WINDOWCOVERING
//   97 static zclClosuresWindowCoveringCBRec_t *zclClosuresWindowCoveringCBs = (zclClosuresWindowCoveringCBRec_t *)NULL;
//   98 #endif
//   99 
//  100 #ifdef ZCL_DOORLOCK

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//  101 static uint8 zclDoorLockPluginRegisted = FALSE;
zclDoorLockPluginRegisted:
        DS 1
        REQUIRE __INIT_XDATA_Z
//  102 #endif
//  103 
//  104 #ifdef ZCL_WINDOWCOVERING
//  105 static uint8 zclWindowCoveringPluginRegisted = FALSE;
//  106 #endif
//  107 
//  108 /*********************************************************************
//  109  * LOCAL FUNCTIONS
//  110  */
//  111 #if defined(ZCL_DOORLOCK) || defined(ZCL_WINDOWCOVERING)
//  112 static ZStatus_t zclClosures_HdlIncoming( zclIncoming_t *pInMsg );
//  113 static ZStatus_t zclClosures_HdlInSpecificCommands( zclIncoming_t *pInMsg );
//  114 #endif
//  115 
//  116 #ifdef ZCL_DOORLOCK
//  117 static zclClosures_DoorLockAppCallbacks_t *zclClosures_FindDoorLockCallbacks( uint8 endpoint );
//  118 static ZStatus_t zclClosures_ProcessInDoorLockCmds( zclIncoming_t *pInMsg,
//  119                                                     zclClosures_DoorLockAppCallbacks_t *pCBs );
//  120 static ZStatus_t zclClosures_ProcessInDoorLock( zclIncoming_t *pInMsg,
//  121                                                 zclClosures_DoorLockAppCallbacks_t *pCBs );
//  122 static ZStatus_t zclClosures_ProcessInDoorLockUnlockWithTimeout( zclIncoming_t *pInMsg,
//  123                                                                  zclClosures_DoorLockAppCallbacks_t *pCBs );
//  124 static ZStatus_t zclClosures_ProcessInDoorLockGetLogRecord( zclIncoming_t *pInMsg,
//  125                                                             zclClosures_DoorLockAppCallbacks_t *pCBs );
//  126 static ZStatus_t zclClosures_ProcessInDoorLockSetPINCode( zclIncoming_t *pInMsg,
//  127                                                           zclClosures_DoorLockAppCallbacks_t *pCBs );
//  128 static ZStatus_t zclClosures_ProcessInDoorLockGetPINCode( zclIncoming_t *pInMsg,
//  129                                                           zclClosures_DoorLockAppCallbacks_t *pCBs );
//  130 static ZStatus_t zclClosures_ProcessInDoorLockClearPINCode( zclIncoming_t *pInMsg,
//  131                                                             zclClosures_DoorLockAppCallbacks_t *pCBs );
//  132 static ZStatus_t zclClosures_ProcessInDoorLockClearAllPINCodes( zclIncoming_t *pInMsg,
//  133                                                                 zclClosures_DoorLockAppCallbacks_t *pCBs );
//  134 static ZStatus_t zclClosures_ProcessInDoorLockSetUserStatus( zclIncoming_t *pInMsg,
//  135                                                              zclClosures_DoorLockAppCallbacks_t *pCBs );
//  136 static ZStatus_t zclClosures_ProcessInDoorLockGetUserStatus( zclIncoming_t *pInMsg,
//  137                                                              zclClosures_DoorLockAppCallbacks_t *pCBs );
//  138 static ZStatus_t zclClosures_ProcessInDoorLockSetWeekDaySchedule( zclIncoming_t *pInMsg,
//  139                                                                   zclClosures_DoorLockAppCallbacks_t *pCBs );
//  140 static ZStatus_t zclClosures_ProcessInDoorLockGetWeekDaySchedule( zclIncoming_t *pInMsg,
//  141                                                                   zclClosures_DoorLockAppCallbacks_t *pCBs );
//  142 static ZStatus_t zclClosures_ProcessInDoorLockClearWeekDaySchedule( zclIncoming_t *pInMsg,
//  143                                                                     zclClosures_DoorLockAppCallbacks_t *pCBs );
//  144 static ZStatus_t zclClosures_ProcessInDoorLockSetYearDaySchedule( zclIncoming_t *pInMsg,
//  145                                                                   zclClosures_DoorLockAppCallbacks_t *pCBs );
//  146 static ZStatus_t zclClosures_ProcessInDoorLockGetYearDaySchedule( zclIncoming_t *pInMsg,
//  147                                                                   zclClosures_DoorLockAppCallbacks_t *pCBs );
//  148 static ZStatus_t zclClosures_ProcessInDoorLockClearYearDaySchedule( zclIncoming_t *pInMsg,
//  149                                                                     zclClosures_DoorLockAppCallbacks_t *pCBs );
//  150 static ZStatus_t zclClosures_ProcessInDoorLockSetHolidaySchedule( zclIncoming_t *pInMsg,
//  151                                                                   zclClosures_DoorLockAppCallbacks_t *pCBs );
//  152 static ZStatus_t zclClosures_ProcessInDoorLockGetHolidaySchedule( zclIncoming_t *pInMsg,
//  153                                                                   zclClosures_DoorLockAppCallbacks_t *pCBs );
//  154 static ZStatus_t zclClosures_ProcessInDoorLockClearHolidaySchedule( zclIncoming_t *pInMsg,
//  155                                                                     zclClosures_DoorLockAppCallbacks_t *pCBs );
//  156 static ZStatus_t zclClosures_ProcessInDoorLockSetUserType( zclIncoming_t *pInMsg,
//  157                                                            zclClosures_DoorLockAppCallbacks_t *pCBs );
//  158 static ZStatus_t zclClosures_ProcessInDoorLockGetUserType( zclIncoming_t *pInMsg,
//  159                                                            zclClosures_DoorLockAppCallbacks_t *pCBs );
//  160 static ZStatus_t zclClosures_ProcessInDoorLockSetRFIDCode( zclIncoming_t *pInMsg,
//  161                                                            zclClosures_DoorLockAppCallbacks_t *pCBs );
//  162 static ZStatus_t zclClosures_ProcessInDoorLockGetRFIDCode( zclIncoming_t *pInMsg,
//  163                                                            zclClosures_DoorLockAppCallbacks_t *pCBs );
//  164 static ZStatus_t zclClosures_ProcessInDoorLockClearRFIDCode( zclIncoming_t *pInMsg,
//  165                                                              zclClosures_DoorLockAppCallbacks_t *pCBs );
//  166 static ZStatus_t zclClosures_ProcessInDoorLockClearAllRFIDCodes( zclIncoming_t *pInMsg,
//  167                                                                  zclClosures_DoorLockAppCallbacks_t *pCBs );
//  168 static ZStatus_t zclClosures_ProcessInDoorLockUnlockWithTimeoutRsp( zclIncoming_t *pInMsg,
//  169                                                                     zclClosures_DoorLockAppCallbacks_t *pCBs );
//  170 static ZStatus_t zclClosures_ProcessInDoorLockGetLogRecordRsp( zclIncoming_t *pInMsg,
//  171                                                                zclClosures_DoorLockAppCallbacks_t *pCBs );
//  172 static ZStatus_t zclClosures_ProcessInDoorLockSetPINCodeRsp( zclIncoming_t *pInMsg,
//  173                                                              zclClosures_DoorLockAppCallbacks_t *pCBs );
//  174 static ZStatus_t zclClosures_ProcessInDoorLockGetPINCodeRsp( zclIncoming_t *pInMsg,
//  175                                                              zclClosures_DoorLockAppCallbacks_t *pCBs );
//  176 static ZStatus_t zclClosures_ProcessInDoorLockClearPINCodeRsp( zclIncoming_t *pInMsg,
//  177                                                                zclClosures_DoorLockAppCallbacks_t *pCBs );
//  178 static ZStatus_t zclClosures_ProcessInDoorLockClearAllPINCodesRsp( zclIncoming_t *pInMsg,
//  179                                                                    zclClosures_DoorLockAppCallbacks_t *pCBs );
//  180 static ZStatus_t zclClosures_ProcessInDoorLockSetUserStatusRsp( zclIncoming_t *pInMsg,
//  181                                                                 zclClosures_DoorLockAppCallbacks_t *pCBs );
//  182 static ZStatus_t zclClosures_ProcessInDoorLockGetUserStatusRsp( zclIncoming_t *pInMsg,
//  183                                                                 zclClosures_DoorLockAppCallbacks_t *pCBs );
//  184 static ZStatus_t zclClosures_ProcessInDoorLockSetWeekDayScheduleRsp( zclIncoming_t *pInMsg,
//  185                                                                      zclClosures_DoorLockAppCallbacks_t *pCBs );
//  186 static ZStatus_t zclClosures_ProcessInDoorLockGetWeekDayScheduleRsp( zclIncoming_t *pInMsg,
//  187                                                                      zclClosures_DoorLockAppCallbacks_t *pCBs );
//  188 static ZStatus_t zclClosures_ProcessInDoorLockClearWeekDayScheduleRsp( zclIncoming_t *pInMsg,
//  189                                                                        zclClosures_DoorLockAppCallbacks_t *pCBs );
//  190 static ZStatus_t zclClosures_ProcessInDoorLockSetYearDayScheduleRsp( zclIncoming_t *pInMsg,
//  191                                                                      zclClosures_DoorLockAppCallbacks_t *pCBs );
//  192 static ZStatus_t zclClosures_ProcessInDoorLockGetYearDayScheduleRsp( zclIncoming_t *pInMsg,
//  193                                                                      zclClosures_DoorLockAppCallbacks_t *pCBs );
//  194 static ZStatus_t zclClosures_ProcessInDoorLockClearYearDayScheduleRsp( zclIncoming_t *pInMsg,
//  195                                                                        zclClosures_DoorLockAppCallbacks_t *pCBs );
//  196 static ZStatus_t zclClosures_ProcessInDoorLockSetHolidayScheduleRsp( zclIncoming_t *pInMsg,
//  197                                                                      zclClosures_DoorLockAppCallbacks_t *pCBs );
//  198 static ZStatus_t zclClosures_ProcessInDoorLockGetHolidayScheduleRsp( zclIncoming_t *pInMsg,
//  199                                                                      zclClosures_DoorLockAppCallbacks_t *pCBs );
//  200 static ZStatus_t zclClosures_ProcessInDoorLockClearHolidayScheduleRsp( zclIncoming_t *pInMsg,
//  201                                                                        zclClosures_DoorLockAppCallbacks_t *pCBs );
//  202 static ZStatus_t zclClosures_ProcessInDoorLockSetUserTypeRsp( zclIncoming_t *pInMsg,
//  203                                                               zclClosures_DoorLockAppCallbacks_t *pCBs );
//  204 static ZStatus_t zclClosures_ProcessInDoorLockGetUserTypeRsp( zclIncoming_t *pInMsg,
//  205                                                               zclClosures_DoorLockAppCallbacks_t *pCBs );
//  206 static ZStatus_t zclClosures_ProcessInDoorLockSetRFIDCodeRsp( zclIncoming_t *pInMsg,
//  207                                                               zclClosures_DoorLockAppCallbacks_t *pCBs );
//  208 static ZStatus_t zclClosures_ProcessInDoorLockGetRFIDCodeRsp( zclIncoming_t *pInMsg,
//  209                                                               zclClosures_DoorLockAppCallbacks_t *pCBs );
//  210 static ZStatus_t zclClosures_ProcessInDoorLockClearRFIDCodeRsp( zclIncoming_t *pInMsg,
//  211                                                                 zclClosures_DoorLockAppCallbacks_t *pCBs );
//  212 static ZStatus_t zclClosures_ProcessInDoorLockClearAllRFIDCodesRsp( zclIncoming_t *pInMsg,
//  213                                                                     zclClosures_DoorLockAppCallbacks_t *pCBs );
//  214 static ZStatus_t zclClosures_ProcessInDoorLockOperationEventNotification( zclIncoming_t *pInMsg,
//  215                                                                           zclClosures_DoorLockAppCallbacks_t *pCBs );
//  216 static ZStatus_t zclClosures_ProcessInDoorLockProgrammingEventNotification( zclIncoming_t *pInMsg,
//  217                                                                             zclClosures_DoorLockAppCallbacks_t *pCBs );
//  218 #endif //ZCL_DOORLOCK
//  219 
//  220 #ifdef ZCL_WINDOWCOVERING
//  221 static zclClosures_WindowCoveringAppCallbacks_t *zclClosures_FindWCCallbacks( uint8 endpoint );
//  222 static ZStatus_t zclClosures_ProcessInWindowCovering( zclIncoming_t *pInMsg,
//  223                                                       zclClosures_WindowCoveringAppCallbacks_t *pCBs );
//  224 #endif //ZCL_WINDOWCOVERING
//  225 
//  226 #ifdef ZCL_DOORLOCK
//  227 /*********************************************************************
//  228  * @fn      zclClosures_RegisterDoorLockCmdCallbacks
//  229  *
//  230  * @brief   Register an applications DoorLock command callbacks
//  231  *
//  232  * @param   endpoint - application's endpoint
//  233  * @param   callbacks - pointer to the callback record.
//  234  *
//  235  * @return  ZMemError if not able to allocate
//  236  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  237 ZStatus_t zclClosures_RegisterDoorLockCmdCallbacks( uint8 endpoint, zclClosures_DoorLockAppCallbacks_t *callbacks )
zclClosures_RegisterDoorLockCmdCallbacks:
          CFI Block cfiBlock0 Using cfiCommon0
          CFI Function zclClosures_RegisterDoorLockCmdCallbacks
        CODE
//  238 {
        FUNCALL zclClosures_RegisterDoorLockCmdCallbacks, zcl_registerPlugin
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclClosures_RegisterDoorLockCmdCallbacks, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V2
        REQUIRE ?V3
        MOV       A,#-0xc
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 0
        MOV       ?V0,R1
        MOV       A,R2
        MOV       R6,A
        MOV       A,R3
        MOV       R7,A
//  239   zclClosuresDoorLockCBRec_t *pNewItem;
//  240   zclClosuresDoorLockCBRec_t *pLoop;
//  241 
//  242   // Register as a ZCL Plugin
//  243   if ( !zclDoorLockPluginRegisted )
        MOV       DPTR,#zclDoorLockPluginRegisted
        MOVX      A,@DPTR
        JNZ       ??zclClosures_RegisterDoorLockCmdCallbacks_0
//  244   {
//  245     zcl_registerPlugin( ZCL_CLUSTER_ID_CLOSURES_DOOR_LOCK,
//  246                         ZCL_CLUSTER_ID_CLOSURES_DOOR_LOCK,
//  247                         zclClosures_HdlIncoming );
        ; Setup parameters for call to function zcl_registerPlugin
        MOV       ?V2,#`??zclClosures_HdlIncoming::?relay` & 0xff
        MOV       ?V3,#(`??zclClosures_HdlIncoming::?relay` >> 8) & 0xff
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 14)
        MOV       R4,#0x1
        MOV       R5,#0x1
        MOV       R2,#0x1
        MOV       R3,#0x1
        LCALL     `??zcl_registerPlugin::?relay`; Banked call to: zcl_registerPlugin
        MOV       A,#0x2
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 12)
//  248     zclDoorLockPluginRegisted = TRUE;
        MOV       DPTR,#zclDoorLockPluginRegisted
        MOV       A,#0x1
        MOVX      @DPTR,A
//  249   }
//  250 
//  251   // Fill in the new profile list
//  252   pNewItem = zcl_mem_alloc( sizeof( zclClosuresDoorLockCBRec_t ) );
??zclClosures_RegisterDoorLockCmdCallbacks_0:
        ; Setup parameters for call to function osal_mem_alloc
        MOV       R2,#0x5
        MOV       R3,#0x0
        LCALL     `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV       ?V2,R2
        MOV       ?V3,R3
        MOV       R0,?V2
        MOV       R1,?V3
//  253   if ( pNewItem == NULL )
        MOV       A,R0
        ORL       A,R1
        JNZ       ??zclClosures_RegisterDoorLockCmdCallbacks_1
//  254   {
//  255     return ( ZMemError );
        MOV       R1,#0x10
        SJMP      ??zclClosures_RegisterDoorLockCmdCallbacks_2
//  256   }
//  257 
//  258   pNewItem->next = (zclClosuresDoorLockCBRec_t *)NULL;
??zclClosures_RegisterDoorLockCmdCallbacks_1:
        MOV       DPL,R0
        MOV       DPH,R1
        CLR       A
        MOVX      @DPTR,A
        INC       DPTR
        LCALL     ?Subroutine67 & 0xFFFF
//  259   pNewItem->endpoint = endpoint;
??CrossCallReturnLabel_156:
        MOV       A,?V0
        LCALL     ?Subroutine67 & 0xFFFF
//  260   pNewItem->CBs = callbacks;
??CrossCallReturnLabel_157:
        INC       DPTR
        MOV       A,R6
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,R7
        MOVX      @DPTR,A
//  261 
//  262   // Find spot in list
//  263   if ( zclClosuresDoorLockCBs == NULL )
        MOV       DPTR,#zclClosuresDoorLockCBs
        LCALL     ?Subroutine37 & 0xFFFF
??CrossCallReturnLabel_83:
        MOV       A,R2
        ORL       A,R3
        MOV       DPTR,#zclClosuresDoorLockCBs
        JZ        ??zclClosures_RegisterDoorLockCmdCallbacks_3
//  264   {
//  265     zclClosuresDoorLockCBs = pNewItem;
//  266   }
//  267   else
//  268   {
//  269     // Look for end of list
//  270     pLoop = zclClosuresDoorLockCBs;
        LCALL     ?Subroutine99 & 0xFFFF
??CrossCallReturnLabel_348:
        SJMP      ??zclClosures_RegisterDoorLockCmdCallbacks_4
//  271     while ( pLoop->next != NULL )
//  272     {
//  273       pLoop = pLoop->next;
??zclClosures_RegisterDoorLockCmdCallbacks_5:
        MOV       A,R2
        MOV       R4,A
        MOV       A,R3
??zclClosures_RegisterDoorLockCmdCallbacks_4:
        MOV       R5,A
//  274     }
        MOV       DPL,R4
        MOV       DPH,R5
        LCALL     ?Subroutine37 & 0xFFFF
??CrossCallReturnLabel_84:
        MOV       A,R2
        ORL       A,R3
        JNZ       ??zclClosures_RegisterDoorLockCmdCallbacks_5
//  275 
//  276     // Put new item at end of list
//  277     pLoop->next = pNewItem;
        MOV       DPL,R4
        MOV       DPH,R5
??zclClosures_RegisterDoorLockCmdCallbacks_3:
        MOV       A,R0
//  278   }
        LCALL     ??Subroutine129_0 & 0xFFFF
//  279   return ( ZSuccess );
??CrossCallReturnLabel_283:
        MOV       R1,#0x0
??zclClosures_RegisterDoorLockCmdCallbacks_2:
        LJMP      ??Subroutine164_0 & 0xFFFF
//  280 }
          CFI EndBlock cfiBlock0
//  281 
//  282 /*********************************************************************
//  283  * @fn      zclClosures_FindDoorLockCallbacks
//  284  *
//  285  * @brief   Find the DoorLock callbacks for an endpoint
//  286  *
//  287  * @param   endpoint
//  288  *
//  289  * @return  pointer to the callbacks
//  290  */
//  291 static zclClosures_DoorLockAppCallbacks_t *zclClosures_FindDoorLockCallbacks( uint8 endpoint )
//  292 {
//  293   zclClosuresDoorLockCBRec_t *pCBs;
//  294 
//  295   pCBs = zclClosuresDoorLockCBs;
//  296   while ( pCBs )
//  297   {
//  298     if ( pCBs->endpoint == endpoint )
//  299     {
//  300       return ( pCBs->CBs );
//  301     }
//  302     pCBs = pCBs->next;
//  303   }
//  304   return ( (zclClosures_DoorLockAppCallbacks_t *)NULL );
//  305 }
//  306 #endif // ZCL_DOORLOCK
//  307 
//  308 #ifdef ZCL_WINDOWCOVERING
//  309 /*********************************************************************
//  310  * @fn      zclClosures_RegisterWindowCoveringCmdCallbacks
//  311  *
//  312  * @brief   Register an applications Window Covering command callbacks
//  313  *
//  314  * @param   endpoint - application's endpoint
//  315  * @param   callbacks - pointer to the callback record.
//  316  *
//  317  * @return  ZMemError if not able to allocate
//  318  */
//  319 ZStatus_t zclClosures_RegisterWindowCoveringCmdCallbacks( uint8 endpoint, zclClosures_WindowCoveringAppCallbacks_t *callbacks )
//  320 {
//  321   zclClosuresWindowCoveringCBRec_t *pNewItem;
//  322   zclClosuresWindowCoveringCBRec_t *pLoop;
//  323 
//  324   // Register as a ZCL Plugin
//  325   if ( !zclWindowCoveringPluginRegisted )
//  326   {
//  327     zcl_registerPlugin( ZCL_CLUSTER_ID_CLOSURES_WINDOW_COVERING,
//  328                         ZCL_CLUSTER_ID_CLOSURES_WINDOW_COVERING,
//  329                         zclClosures_HdlIncoming );
//  330     zclWindowCoveringPluginRegisted = TRUE;
//  331   }
//  332 
//  333   // Fill in the new profile list
//  334   pNewItem = zcl_mem_alloc( sizeof( zclClosuresWindowCoveringCBRec_t ) );
//  335   if ( pNewItem == NULL )
//  336   {
//  337     return ( ZMemError );
//  338   }
//  339 
//  340   pNewItem->next = (zclClosuresWindowCoveringCBRec_t *)NULL;
//  341   pNewItem->endpoint = endpoint;
//  342   pNewItem->CBs = callbacks;
//  343 
//  344   // Find spot in list
//  345   if ( zclClosuresWindowCoveringCBs == NULL )
//  346   {
//  347     zclClosuresWindowCoveringCBs = pNewItem;
//  348   }
//  349   else
//  350   {
//  351     // Look for end of list
//  352     pLoop = zclClosuresWindowCoveringCBs;
//  353     while ( pLoop->next != NULL )
//  354     {
//  355       pLoop = pLoop->next;
//  356     }
//  357 
//  358     // Put new item at end of list
//  359     pLoop->next = pNewItem;
//  360   }
//  361   return ( ZSuccess );
//  362 }
//  363 
//  364 /*********************************************************************
//  365  * @fn      zclClosures_FindWCCallbacks
//  366  *
//  367  * @brief   Find the Window Covering callbacks for an endpoint
//  368  *
//  369  * @param   endpoint
//  370  *
//  371  * @return  pointer to the callbacks
//  372  */
//  373 static zclClosures_WindowCoveringAppCallbacks_t *zclClosures_FindWCCallbacks( uint8 endpoint )
//  374 {
//  375   zclClosuresWindowCoveringCBRec_t *pCBs;
//  376 
//  377   pCBs = zclClosuresWindowCoveringCBs;
//  378   while ( pCBs )
//  379   {
//  380     if ( pCBs->endpoint == endpoint )
//  381     {
//  382       return ( pCBs->CBs );
//  383     }
//  384     pCBs = pCBs->next;
//  385   }
//  386   return ( (zclClosures_WindowCoveringAppCallbacks_t *)NULL );
//  387 }
//  388 #endif // ZCL_WINDOWCOVERING
//  389 
//  390 #if defined(ZCL_DOORLOCK) || defined(ZCL_WINDOWCOVERING)
//  391 /*********************************************************************
//  392  * @fn      zclClosures_HdlIncoming
//  393  *
//  394  * @brief   Callback from ZCL to process incoming Commands specific
//  395  *          to this cluster library or Profile commands for attributes
//  396  *          that aren't in the attribute list
//  397  *
//  398  * @param   pInMsg - pointer to the incoming message
//  399  * @param   logicalClusterID
//  400  *
//  401  * @return  ZStatus_t
//  402  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  403 static ZStatus_t zclClosures_HdlIncoming( zclIncoming_t *pInMsg )
zclClosures_HdlIncoming:
          CFI Block cfiBlock1 Using cfiCommon0
          CFI Function zclClosures_HdlIncoming
        CODE
//  404 {
        FUNCALL zclClosures_HdlIncoming, zclClosures_ProcessInDoorLockCmds
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V2
        REQUIRE ?V3
        MOV       A,#-0xc
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 0
//  405   ZStatus_t stat = ZSuccess;
//  406 
//  407 #if defined ( INTER_PAN )
//  408   if ( StubAPS_InterPan( pInMsg->msg->srcAddr.panId, pInMsg->msg->srcAddr.endPoint ) )
//  409     return ( stat ); // Cluster not supported thru Inter-PAN
//  410 #endif
//  411   if ( zcl_ClusterCmd( pInMsg->hdr.fc.type ) )
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R0,A
        ANL       A,#0x3
        XRL       A,#0x1
        JNZ       ??zclClosures_HdlIncoming_0
//  412   {
//  413     // Is this a manufacturer specific command?
//  414     if ( pInMsg->hdr.fc.manuSpecific == 0 )
        MOV       A,R0
        ANL       A,#0x4
        JNZ       ??zclClosures_HdlIncoming_0
//  415     {
//  416       stat = zclClosures_HdlInSpecificCommands( pInMsg );
        MOV       DPL,R2
        MOV       DPH,R3
        LCALL     ?Subroutine97 & 0xFFFF
//  417     }
//  418     else
//  419     {
//  420       // We don't support any manufacturer specific command.
//  421       stat = ZFailure;
//  422     }
//  423   }
??CrossCallReturnLabel_223:
        ADD       A,#0x14
        MOV       DPL,A
        CLR       A
        ADDC      A,R7
        MOV       DPH,A
        MOVX      A,@DPTR
        MOV       R4,A
        MOV       DPTR,#zclClosuresDoorLockCBs
??zclClosures_HdlIncoming_1:
        LCALL     ??Subroutine144_0 & 0xFFFF
??CrossCallReturnLabel_315:
        JZ        ??zclClosures_HdlIncoming_0
        MOV       DPL,R0
        MOV       DPH,R1
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        XRL       A,R4
        MOV       DPL,R0
        MOV       DPH,R1
        JNZ       ??zclClosures_HdlIncoming_1
        INC       DPTR
        INC       DPTR
        INC       DPTR
        LCALL     ??Subroutine128_0 & 0xFFFF
??CrossCallReturnLabel_276:
        JNZ       ??zclClosures_HdlIncoming_2
??zclClosures_HdlIncoming_0:
        MOV       R1,#0x1
        SJMP      ??zclClosures_HdlIncoming_3
??zclClosures_HdlIncoming_2:
        MOV       DPL,R6
        MOV       DPH,R7
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        MOV       ?V2,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       ?V3,A
        MOV       R0,#?V2
        LCALL     ?US_SWITCH_DENSE
`?<Jumptable for zclClosures_HdlIncoming>_0`:
        DATA
        DATA16
        DATA
        DATA16
        DW        257
        DATA
        DATA8
        DATA
        DATA8
        DB        1
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_HdlIncoming_4
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_HdlIncoming_5
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_HdlIncoming_6
        CODE
??zclClosures_HdlIncoming_5:
        ; Setup parameters for call to function zclClosures_ProcessInDoorLockCmds
        LCALL     `??zclClosures_ProcessInDoorLockCmds::?relay`; Banked call to: zclClosures_ProcessInDoorLockCmds
        MOV       A,R1
        MOV       ?V0,A
        SJMP      ??zclClosures_HdlIncoming_6
??zclClosures_HdlIncoming_4:
        MOV       ?V0,#0x1
??zclClosures_HdlIncoming_6:
        MOV       R1,?V0
//  424   else
//  425   {
//  426     // Handle all the normal (Read, Write...) commands -- should never get here
//  427     stat = ZFailure;
//  428   }
//  429   return ( stat );
??zclClosures_HdlIncoming_3:
        LJMP      ??Subroutine164_0 & 0xFFFF
//  430 }
          CFI EndBlock cfiBlock1
//  431 
//  432 /*********************************************************************
//  433  * @fn      zclClosures_HdlInSpecificCommands
//  434  *
//  435  * @brief   Callback from ZCL to process incoming Commands specific
//  436  *          to this cluster library
//  437 
//  438  * @param   pInMsg - pointer to the incoming message
//  439  *
//  440  * @return  ZStatus_t
//  441  */
//  442 static ZStatus_t zclClosures_HdlInSpecificCommands( zclIncoming_t *pInMsg )
//  443 {
//  444   ZStatus_t stat;
//  445 #ifdef ZCL_DOORLOCK
//  446   zclClosures_DoorLockAppCallbacks_t *pDLCBs;
//  447 #endif
//  448 
//  449 #ifdef ZCL_WINDOWCOVERING
//  450   zclClosures_WindowCoveringAppCallbacks_t *pWCCBs;
//  451 #endif
//  452 
//  453 #ifdef ZCL_DOORLOCK
//  454   // make sure endpoint exists
//  455   pDLCBs = zclClosures_FindDoorLockCallbacks( pInMsg->msg->endPoint );
//  456   if ( pDLCBs == NULL )
//  457   {
//  458     return ( ZFailure );
//  459   }
//  460 #endif
//  461 
//  462 #ifdef ZCL_WINDOWCOVERING
//  463   // make sure endpoint exists
//  464   pWCCBs = zclClosures_FindWCCallbacks( pInMsg->msg->endPoint );
//  465   if ( pWCCBs == NULL )
//  466   {
//  467     return ( ZFailure );
//  468   }
//  469 #endif
//  470 
//  471   switch ( pInMsg->msg->clusterId )
//  472   {
//  473     case ZCL_CLUSTER_ID_CLOSURES_DOOR_LOCK:
//  474 #ifdef ZCL_DOORLOCK
//  475       stat = zclClosures_ProcessInDoorLockCmds( pInMsg, pDLCBs );
//  476 #endif //ZCL_DOORLOCK
//  477       break;
//  478 
//  479     case ZCL_CLUSTER_ID_CLOSURES_WINDOW_COVERING:
//  480 #ifdef ZCL_WINDOWCOVERING
//  481       stat = zclClosures_ProcessInWindowCovering( pInMsg, pWCCBs );
//  482 #endif //ZCL_WINDOWCOVERING
//  483       break;
//  484 
//  485     default:
//  486       stat = ZFailure;
//  487       break;
//  488   }
//  489 
//  490   return ( stat );
//  491 }
//  492 #endif // defined(ZCL_DOORLOCK) || defined(ZCL_WINDOWCOVERING)
//  493 
//  494 #ifdef ZCL_DOORLOCK
//  495 /*********************************************************************
//  496  * @fn      zclClosures_ProcessInDoorLockCmds
//  497  *
//  498  * @brief   Process in the received DoorLock Command.
//  499  *
//  500  * @param   pInMsg - pointer to the incoming message
//  501  * @param   pCBs - pointer to the Application callback functions
//  502  *
//  503  * @return  ZStatus_t
//  504  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  505 static ZStatus_t zclClosures_ProcessInDoorLockCmds( zclIncoming_t *pInMsg,
zclClosures_ProcessInDoorLockCmds:
          CFI Block cfiBlock2 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockCmds
        CODE
//  506                                                     zclClosures_DoorLockAppCallbacks_t *pCBs )
//  507 {
        FUNCALL zclClosures_ProcessInDoorLockCmds, zclClosures_ProcessInDoorLock
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclClosures_ProcessInDoorLockCmds, zclClosures_ProcessInDoorLockUnlockWithTimeout
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclClosures_ProcessInDoorLockCmds, zclClosures_ProcessInDoorLockSetPINCode
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclClosures_ProcessInDoorLockCmds, zclClosures_ProcessInDoorLockSetWeekDaySchedule
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclClosures_ProcessInDoorLockCmds, zclClosures_ProcessInDoorLockSetYearDaySchedule
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclClosures_ProcessInDoorLockCmds, zclClosures_ProcessInDoorLockSetHolidaySchedule
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclClosures_ProcessInDoorLockCmds, zclClosures_ProcessInDoorLockSetRFIDCode
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclClosures_ProcessInDoorLockCmds, zclClosures_ProcessInDoorLock
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclClosures_ProcessInDoorLockCmds, zclClosures_ProcessInDoorLockGetLogRecordRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclClosures_ProcessInDoorLockCmds, zclClosures_ProcessInDoorLockGetPINCodeRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclClosures_ProcessInDoorLockCmds, zclClosures_ProcessInDoorLockGetWeekDayScheduleRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclClosures_ProcessInDoorLockCmds, zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclClosures_ProcessInDoorLockCmds, zclClosures_ProcessInDoorLockGetHolidayScheduleRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclClosures_ProcessInDoorLockCmds, zclClosures_ProcessInDoorLockGetRFIDCodeRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclClosures_ProcessInDoorLockCmds, zclClosures_ProcessInDoorLockOperationEventNotification
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclClosures_ProcessInDoorLockCmds, zclClosures_ProcessInDoorLockProgrammingEventNotification
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV       A,#-0xa
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 6
        MOV       A,#-0x6
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 16)
//  508   ZStatus_t stat;
//  509 
//  510   // Client-to-Server
//  511   if ( zcl_ServerCmd( pInMsg->hdr.fc.direction ) )
        MOV       A,R2
        ADD       A,#0x8
        MOV       R0,A
        CLR       A
        ADDC      A,R3
        MOV       R1,A
        MOV       ?V0,R0
        MOV       ?V1,R1
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        ANL       A,#0x8
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        JZ        $+5
        LJMP      ??zclClosures_ProcessInDoorLockCmds_0 & 0xFFFF
//  512   {
//  513     switch(pInMsg->hdr.commandID)
        MOVX      A,@DPTR
        LCALL     ?UC_SWITCH_DENSE
`?<Jumptable for zclClosures_ProcessInDoorLockC_0`:
        DATA
        DATA8
        DATA
        DATA8
        DB        0
        DATA
        DATA8
        DATA
        DATA8
        DB        25
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_1
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_2
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_2
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_2
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_3
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_4
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_5
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_6
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_7
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_8
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_9
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_10
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_11
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_12
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_13
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_14
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_15
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_16
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_17
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_18
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_19
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_20
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_21
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_22
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_23
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_24
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_25
        CODE
//  514     {
//  515       case COMMAND_CLOSURES_LOCK_DOOR:
//  516       case COMMAND_CLOSURES_UNLOCK_DOOR:
//  517       case COMMAND_CLOSURES_TOGGLE_DOOR:
//  518         stat = zclClosures_ProcessInDoorLock( pInMsg, pCBs );
//  519         break;
//  520 
//  521       case COMMAND_CLOSURES_UNLOCK_WITH_TIMEOUT:
//  522         stat = zclClosures_ProcessInDoorLockUnlockWithTimeout( pInMsg, pCBs );
??zclClosures_ProcessInDoorLockCmds_3:
        ; Setup parameters for call to function zclClosures_ProcessInDoorLockUnlockWithTimeout
        LCALL     ??zclClosures_ProcessInDoorLockUnlockWithTimeou; Banked call to: zclClosures_ProcessInDoorLockUnlockWithTimeout
        LJMP      ??zclClosures_ProcessInDoorLockCmds_26 & 0xFFFF
//  523         break;
//  524 
//  525       case COMMAND_CLOSURES_GET_LOG_RECORD:
//  526         stat = zclClosures_ProcessInDoorLockGetLogRecord( pInMsg, pCBs );
??zclClosures_ProcessInDoorLockCmds_4:
        MOV       DPL,R4
        MOV       DPH,R5
        SJMP      ??zclClosures_ProcessInDoorLockCmds_27
//  527         break;
//  528 
//  529       case COMMAND_CLOSURES_SET_PIN_CODE:
//  530         stat = zclClosures_ProcessInDoorLockSetPINCode( pInMsg, pCBs );
??zclClosures_ProcessInDoorLockCmds_5:
        ; Setup parameters for call to function zclClosures_ProcessInDoorLockSetPINCode
        LCALL     `??zclClosures_ProcessInDoorLockSetPINCode::?rel`; Banked call to: zclClosures_ProcessInDoorLockSetPINCode
        LJMP      ??zclClosures_ProcessInDoorLockCmds_26 & 0xFFFF
//  531         break;
//  532 
//  533       case COMMAND_CLOSURES_GET_PIN_CODE:
//  534         stat = zclClosures_ProcessInDoorLockGetPINCode( pInMsg, pCBs );
??zclClosures_ProcessInDoorLockCmds_6:
        MOV       DPL,R4
        MOV       DPH,R5
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
??zclClosures_ProcessInDoorLockCmds_27:
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        LJMP      ??zclClosures_ProcessInDoorLockCmds_28 & 0xFFFF
//  535         break;
//  536 
//  537       case COMMAND_CLOSURES_CLEAR_PIN_CODE:
//  538         stat = zclClosures_ProcessInDoorLockClearPINCode( pInMsg, pCBs );
??zclClosures_ProcessInDoorLockCmds_7:
        MOV       A,R4
        ADD       A,#0xc
        LJMP      ??zclClosures_ProcessInDoorLockCmds_29 & 0xFFFF
//  539         break;
//  540 
//  541       case COMMAND_CLOSURES_CLEAR_ALL_PIN_CODES:
//  542         stat = zclClosures_ProcessInDoorLockClearAllPINCodes( pInMsg, pCBs );
??zclClosures_ProcessInDoorLockCmds_8:
        MOV       A,R4
        ADD       A,#0xe
        LJMP      ??zclClosures_ProcessInDoorLockCmds_30 & 0xFFFF
//  543         break;
//  544 
//  545       case COMMAND_CLOSURES_SET_USER_STATUS:
//  546         stat = zclClosures_ProcessInDoorLockSetUserStatus( pInMsg, pCBs );
??zclClosures_ProcessInDoorLockCmds_9:
        MOV       A,R4
        ADD       A,#0x10
        LJMP      ??zclClosures_ProcessInDoorLockCmds_31 & 0xFFFF
//  547         break;
//  548 
//  549       case COMMAND_CLOSURES_GET_USER_STATUS:
//  550         stat = zclClosures_ProcessInDoorLockGetUserStatus( pInMsg, pCBs );
??zclClosures_ProcessInDoorLockCmds_10:
        MOV       A,R4
        ADD       A,#0x12
        LJMP      ??zclClosures_ProcessInDoorLockCmds_29 & 0xFFFF
//  551         break;
//  552 
//  553       case COMMAND_CLOSURES_SET_WEEK_DAY_SCHEDULE:
//  554         stat = zclClosures_ProcessInDoorLockSetWeekDaySchedule( pInMsg, pCBs );
??zclClosures_ProcessInDoorLockCmds_11:
        ; Setup parameters for call to function zclClosures_ProcessInDoorLockSetWeekDaySchedule
        LCALL     ??zclClosures_ProcessInDoorLockSetWeekDaySchedu; Banked call to: zclClosures_ProcessInDoorLockSetWeekDaySchedule
        LJMP      ??zclClosures_ProcessInDoorLockCmds_26 & 0xFFFF
//  555         break;
//  556 
//  557       case COMMAND_CLOSURES_GET_WEEK_DAY_SCHEDULE:
//  558         stat = zclClosures_ProcessInDoorLockGetWeekDaySchedule( pInMsg, pCBs );
??zclClosures_ProcessInDoorLockCmds_12:
        MOV       A,R4
        ADD       A,#0x16
        SJMP      ??zclClosures_ProcessInDoorLockCmds_32
//  559         break;
//  560 
//  561       case COMMAND_CLOSURES_CLEAR_WEEK_DAY_SCHEDULE:
//  562         stat = zclClosures_ProcessInDoorLockClearWeekDaySchedule( pInMsg, pCBs );
??zclClosures_ProcessInDoorLockCmds_13:
        MOV       A,R4
        ADD       A,#0x18
        SJMP      ??zclClosures_ProcessInDoorLockCmds_32
//  563         break;
//  564 
//  565       case COMMAND_CLOSURES_SET_YEAR_DAY_SCHEDULE:
//  566         stat = zclClosures_ProcessInDoorLockSetYearDaySchedule( pInMsg, pCBs );
??zclClosures_ProcessInDoorLockCmds_14:
        ; Setup parameters for call to function zclClosures_ProcessInDoorLockSetYearDaySchedule
        LCALL     ??zclClosures_ProcessInDoorLockSetYearDaySchedu; Banked call to: zclClosures_ProcessInDoorLockSetYearDaySchedule
        LJMP      ??zclClosures_ProcessInDoorLockCmds_26 & 0xFFFF
//  567         break;
//  568 
//  569       case COMMAND_CLOSURES_GET_YEAR_DAY_SCHEDULE:
//  570         stat = zclClosures_ProcessInDoorLockGetYearDaySchedule( pInMsg, pCBs );
??zclClosures_ProcessInDoorLockCmds_15:
        MOV       A,R4
        ADD       A,#0x1c
??zclClosures_ProcessInDoorLockCmds_32:
        LCALL     ?Subroutine25 & 0xFFFF
??CrossCallReturnLabel_277:
        JNZ       ??zclClosures_ProcessInDoorLockCmds_33
        LJMP      ??zclClosures_ProcessInDoorLockCmds_1 & 0xFFFF
//  571         break;
//  572 
//  573       case COMMAND_CLOSURES_CLEAR_YEAR_DAY_SCHEDULE:
//  574         stat = zclClosures_ProcessInDoorLockClearYearDaySchedule( pInMsg, pCBs );
??zclClosures_ProcessInDoorLockCmds_16:
        MOV       A,R4
        ADD       A,#0x1e
        LCALL     ?Subroutine25 & 0xFFFF
??CrossCallReturnLabel_278:
        JZ        ??zclClosures_ProcessInDoorLockCmds_34
??zclClosures_ProcessInDoorLockCmds_33:
        LCALL     ?Subroutine53 & 0xFFFF
??CrossCallReturnLabel_123:
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        LCALL     ?Subroutine79 & 0xFFFF
??CrossCallReturnLabel_187:
        LCALL     ??Subroutine146_0 & 0xFFFF
??CrossCallReturnLabel_345:
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R6,A
        MOV       DPL,R4
        MOV       DPH,R5
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R5,A
        MOV       A,R6
        MOV       R4,A
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP0_8
        MOV       A,R4
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,R5
        MOVX      @DPTR,A
        ; Setup parameters for indirect call
        MOV       R4,?XSP + 0
        MOV       R5,?XSP + 1
        SJMP      ??zclClosures_ProcessInDoorLockCmds_35
??zclClosures_ProcessInDoorLockCmds_34:
        LJMP      ??zclClosures_ProcessInDoorLockCmds_1 & 0xFFFF
//  575         break;
//  576 
//  577       case COMMAND_CLOSURES_SET_HOLIDAY_SCHEDULE:
//  578         stat = zclClosures_ProcessInDoorLockSetHolidaySchedule( pInMsg, pCBs );
??zclClosures_ProcessInDoorLockCmds_17:
        ; Setup parameters for call to function zclClosures_ProcessInDoorLockSetHolidaySchedule
        LCALL     ??zclClosures_ProcessInDoorLockSetHolidaySchedu; Banked call to: zclClosures_ProcessInDoorLockSetHolidaySchedule
        LJMP      ??zclClosures_ProcessInDoorLockCmds_26 & 0xFFFF
//  579         break;
//  580 
//  581       case COMMAND_CLOSURES_GET_HOLIDAY_SCHEDULE:
//  582         stat = zclClosures_ProcessInDoorLockGetHolidaySchedule( pInMsg, pCBs );
??zclClosures_ProcessInDoorLockCmds_18:
        MOV       A,R4
        ADD       A,#0x22
        LCALL     ?Subroutine25 & 0xFFFF
??CrossCallReturnLabel_279:
        JNZ       ??zclClosures_ProcessInDoorLockCmds_36
        LJMP      ??zclClosures_ProcessInDoorLockCmds_1 & 0xFFFF
//  583         break;
//  584 
//  585       case COMMAND_CLOSURES_CLEAR_HOLIDAY_SCHEDULE:
//  586         stat = zclClosures_ProcessInDoorLockClearHolidaySchedule( pInMsg, pCBs );
??zclClosures_ProcessInDoorLockCmds_19:
        MOV       A,R4
        ADD       A,#0x24
        LCALL     ?Subroutine25 & 0xFFFF
??CrossCallReturnLabel_280:
        JZ        ??zclClosures_ProcessInDoorLockCmds_37
??zclClosures_ProcessInDoorLockCmds_36:
        LCALL     ?Subroutine53 & 0xFFFF
??CrossCallReturnLabel_124:
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
        ; Setup parameters for indirect call
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP102_8
??zclClosures_ProcessInDoorLockCmds_35:
        MOV       DPL,R0
        MOV       DPH,R1
        LJMP      ??CrossCallReturnLabel_167 & 0xFFFF
??zclClosures_ProcessInDoorLockCmds_37:
        LJMP      ??zclClosures_ProcessInDoorLockCmds_1 & 0xFFFF
//  587         break;
//  588 
//  589       case COMMAND_CLOSURES_SET_USER_TYPE:
//  590         stat = zclClosures_ProcessInDoorLockSetUserType( pInMsg, pCBs );
??zclClosures_ProcessInDoorLockCmds_20:
        MOV       A,R4
        ADD       A,#0x26
        LJMP      ??zclClosures_ProcessInDoorLockCmds_31 & 0xFFFF
//  591         break;
//  592 
//  593       case COMMAND_CLOSURES_GET_USER_TYPE:
//  594         stat = zclClosures_ProcessInDoorLockGetUserType( pInMsg, pCBs );
??zclClosures_ProcessInDoorLockCmds_21:
        MOV       A,R4
        ADD       A,#0x28
        SJMP      ??zclClosures_ProcessInDoorLockCmds_29
//  595         break;
//  596 
//  597       case COMMAND_CLOSURES_SET_RFID_CODE:
//  598         stat = zclClosures_ProcessInDoorLockSetRFIDCode( pInMsg, pCBs );
??zclClosures_ProcessInDoorLockCmds_22:
        ; Setup parameters for call to function zclClosures_ProcessInDoorLockSetRFIDCode
        LCALL     `??zclClosures_ProcessInDoorLockSetRFIDCode::?re`; Banked call to: zclClosures_ProcessInDoorLockSetRFIDCode
        LJMP      ??zclClosures_ProcessInDoorLockCmds_26 & 0xFFFF
//  599         break;
//  600 
//  601       case COMMAND_CLOSURES_GET_RFID_CODE:
//  602         stat = zclClosures_ProcessInDoorLockGetRFIDCode( pInMsg, pCBs );
??zclClosures_ProcessInDoorLockCmds_23:
        MOV       A,R4
        ADD       A,#0x2c
??zclClosures_ProcessInDoorLockCmds_29:
        MOV       DPL,A
        CLR       A
        ADDC      A,R5
        MOV       DPH,A
??zclClosures_ProcessInDoorLockCmds_28:
        LCALL     ?Subroutine50 & 0xFFFF
??CrossCallReturnLabel_116:
        JNZ       ??zclClosures_ProcessInDoorLockCmds_38
        LJMP      ??zclClosures_ProcessInDoorLockCmds_1 & 0xFFFF
//  603         break;
//  604 
//  605       case COMMAND_CLOSURES_CLEAR_RFID_CODE:
//  606         stat = zclClosures_ProcessInDoorLockClearRFIDCode( pInMsg, pCBs );
??zclClosures_ProcessInDoorLockCmds_24:
        MOV       A,R4
        ADD       A,#0x2e
        MOV       DPL,A
        CLR       A
        ADDC      A,R5
        MOV       DPH,A
        LCALL     ?Subroutine50 & 0xFFFF
??CrossCallReturnLabel_117:
        JZ        ??zclClosures_ProcessInDoorLockCmds_39
??zclClosures_ProcessInDoorLockCmds_38:
        LCALL     ?Subroutine34 & 0xFFFF
??CrossCallReturnLabel_266:
        MOV       R4,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R1,A
        MOV       A,R4
        MOV       R0,A
        MOV       A,#0x3
        LCALL     ?XSTACK_DISP0_8
        MOV       A,R0
        LCALL     ??Subroutine129_0 & 0xFFFF
??CrossCallReturnLabel_284:
        ; Setup parameters for indirect call
        MOV       A,#0x3
        LCALL     ?XSTACK_DISP102_8
        MOV       DPL,R6
        MOV       DPH,R7
        LJMP      ??CrossCallReturnLabel_96 & 0xFFFF
??zclClosures_ProcessInDoorLockCmds_39:
        LJMP      ??zclClosures_ProcessInDoorLockCmds_1 & 0xFFFF
//  607         break;
//  608 
//  609       case COMMAND_CLOSURES_CLEAR_ALL_RFID_CODES:
//  610         stat = zclClosures_ProcessInDoorLockClearAllRFIDCodes( pInMsg, pCBs );
??zclClosures_ProcessInDoorLockCmds_25:
        MOV       A,R4
        ADD       A,#0x30
??zclClosures_ProcessInDoorLockCmds_30:
        MOV       DPL,A
        CLR       A
        ADDC      A,R5
        MOV       DPH,A
//  611         break;
//  612 
//  613       default:
//  614         // Unknown command
//  615         stat = ZFailure;
//  616         break;
//  617     }
//  618   }
        LCALL     ?Subroutine54 & 0xFFFF
??CrossCallReturnLabel_125:
        MOV       A,DPL
        ORL       A,DPH
        JZ        $+5
        LJMP      ??CrossCallReturnLabel_96 & 0xFFFF
        ; Setup parameters for indirect call
        LJMP      ??zclClosures_ProcessInDoorLockCmds_1 & 0xFFFF
//  619   // Server-to-Client
//  620   else
//  621   {
//  622     switch(pInMsg->hdr.commandID)
??zclClosures_ProcessInDoorLockCmds_0:
        MOVX      A,@DPTR
        LCALL     ?UC_SWITCH_DENSE
`?<Jumptable for zclClosures_ProcessInDoorLockC_1`:
        DATA
        DATA8
        DATA
        DATA8
        DB        0
        DATA
        DATA8
        DATA
        DATA8
        DB        33
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_1
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_2
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_2
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_2
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_40
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_41
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_42
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_43
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_44
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_45
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_46
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_47
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_48
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_49
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_50
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_51
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_52
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_53
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_54
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_55
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_56
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_57
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_58
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_59
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_60
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_61
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_62
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_1
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_1
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_1
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_1
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_1
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_1
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_63
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_64
        CODE
//  623     {
//  624       case COMMAND_CLOSURES_LOCK_DOOR_RSP:
//  625       case COMMAND_CLOSURES_UNLOCK_DOOR_RSP:
//  626       case COMMAND_CLOSURES_TOGGLE_DOOR_RSP:
//  627         stat = zclClosures_ProcessInDoorLock( pInMsg, pCBs );
??zclClosures_ProcessInDoorLockCmds_2:
        ; Setup parameters for call to function zclClosures_ProcessInDoorLock
        LCALL     `??zclClosures_ProcessInDoorLock::?relay`; Banked call to: zclClosures_ProcessInDoorLock
        LJMP      ??zclClosures_ProcessInDoorLockCmds_26 & 0xFFFF
//  628         break;
//  629 
//  630       case COMMAND_CLOSURES_UNLOCK_WITH_TIMEOUT_RSP:
//  631         stat = zclClosures_ProcessInDoorLockUnlockWithTimeoutRsp( pInMsg, pCBs );
??zclClosures_ProcessInDoorLockCmds_40:
        MOV       A,R4
        ADD       A,#0x32
        SJMP      ??zclClosures_ProcessInDoorLockCmds_65
//  632         break;
//  633 
//  634       case COMMAND_CLOSURES_GET_LOG_RECORD_RSP:
//  635         stat = zclClosures_ProcessInDoorLockGetLogRecordRsp( pInMsg, pCBs );
??zclClosures_ProcessInDoorLockCmds_41:
        ; Setup parameters for call to function zclClosures_ProcessInDoorLockGetLogRecordRsp
        LCALL     `??zclClosures_ProcessInDoorLockGetLogRecordRsp:`; Banked call to: zclClosures_ProcessInDoorLockGetLogRecordRsp
        LJMP      ??zclClosures_ProcessInDoorLockCmds_26 & 0xFFFF
//  636         break;
//  637 
//  638       case COMMAND_CLOSURES_SET_PIN_CODE_RSP:
//  639         stat = zclClosures_ProcessInDoorLockSetPINCodeRsp( pInMsg, pCBs );
??zclClosures_ProcessInDoorLockCmds_42:
        MOV       A,R4
        ADD       A,#0x36
        SJMP      ??zclClosures_ProcessInDoorLockCmds_65
//  640         break;
//  641 
//  642       case COMMAND_CLOSURES_GET_PIN_CODE_RSP:
//  643         stat = zclClosures_ProcessInDoorLockGetPINCodeRsp( pInMsg, pCBs );
??zclClosures_ProcessInDoorLockCmds_43:
        ; Setup parameters for call to function zclClosures_ProcessInDoorLockGetPINCodeRsp
        LCALL     `??zclClosures_ProcessInDoorLockGetPINCodeRsp::?`; Banked call to: zclClosures_ProcessInDoorLockGetPINCodeRsp
        LJMP      ??zclClosures_ProcessInDoorLockCmds_26 & 0xFFFF
//  644         break;
//  645 
//  646       case COMMAND_CLOSURES_CLEAR_PIN_CODE_RSP:
//  647         stat = zclClosures_ProcessInDoorLockClearPINCodeRsp( pInMsg, pCBs );
??zclClosures_ProcessInDoorLockCmds_44:
        MOV       A,R4
        ADD       A,#0x3a
        SJMP      ??zclClosures_ProcessInDoorLockCmds_65
//  648         break;
//  649 
//  650       case COMMAND_CLOSURES_CLEAR_ALL_PIN_CODES_RSP:
//  651         stat = zclClosures_ProcessInDoorLockClearAllPINCodesRsp( pInMsg, pCBs );
??zclClosures_ProcessInDoorLockCmds_45:
        MOV       A,R4
        ADD       A,#0x3c
        SJMP      ??zclClosures_ProcessInDoorLockCmds_65
//  652         break;
//  653 
//  654       case COMMAND_CLOSURES_SET_USER_STATUS_RSP:
//  655         stat = zclClosures_ProcessInDoorLockSetUserStatusRsp( pInMsg, pCBs );
??zclClosures_ProcessInDoorLockCmds_46:
        MOV       A,R4
        ADD       A,#0x3e
        SJMP      ??zclClosures_ProcessInDoorLockCmds_65
//  656         break;
//  657 
//  658       case COMMAND_CLOSURES_GET_USER_STATUS_RSP:
//  659         stat = zclClosures_ProcessInDoorLockGetUserStatusRsp( pInMsg, pCBs );
??zclClosures_ProcessInDoorLockCmds_47:
        MOV       A,R4
        ADD       A,#0x40
??zclClosures_ProcessInDoorLockCmds_31:
        LCALL     ?Subroutine85 & 0xFFFF
??CrossCallReturnLabel_201:
        LCALL     ??Subroutine144_0 & 0xFFFF
??CrossCallReturnLabel_316:
        JNZ       ??zclClosures_ProcessInDoorLockCmds_66
        LJMP      ??zclClosures_ProcessInDoorLockCmds_1 & 0xFFFF
//  660         break;
//  661 
//  662       case COMMAND_CLOSURES_SET_WEEK_DAY_SCHEDULE_RSP:
//  663         stat = zclClosures_ProcessInDoorLockSetWeekDayScheduleRsp( pInMsg, pCBs );
??zclClosures_ProcessInDoorLockCmds_48:
        MOV       A,R4
        ADD       A,#0x42
        SJMP      ??zclClosures_ProcessInDoorLockCmds_65
//  664         break;
//  665 
//  666       case COMMAND_CLOSURES_GET_WEEK_DAY_SCHEDULE_RSP:
//  667         stat = zclClosures_ProcessInDoorLockGetWeekDayScheduleRsp( pInMsg, pCBs );
??zclClosures_ProcessInDoorLockCmds_49:
        ; Setup parameters for call to function zclClosures_ProcessInDoorLockGetWeekDayScheduleRsp
        LCALL     ??zclClosures_ProcessInDoorLockGetWeekDaySchedu; Banked call to: zclClosures_ProcessInDoorLockGetWeekDayScheduleRsp
        LJMP      ??zclClosures_ProcessInDoorLockCmds_26 & 0xFFFF
//  668         break;
//  669 
//  670       case COMMAND_CLOSURES_CLEAR_WEEK_DAY_SCHEDULE_RSP:
//  671         stat = zclClosures_ProcessInDoorLockClearWeekDayScheduleRsp( pInMsg, pCBs );
??zclClosures_ProcessInDoorLockCmds_50:
        MOV       A,R4
        ADD       A,#0x46
        SJMP      ??zclClosures_ProcessInDoorLockCmds_65
//  672         break;
//  673 
//  674       case COMMAND_CLOSURES_SET_YEAR_DAY_SCHEDULE_RSP:
//  675         stat = zclClosures_ProcessInDoorLockSetYearDayScheduleRsp( pInMsg, pCBs );
??zclClosures_ProcessInDoorLockCmds_51:
        MOV       A,R4
        ADD       A,#0x48
        SJMP      ??zclClosures_ProcessInDoorLockCmds_65
//  676         break;
//  677 
//  678       case COMMAND_CLOSURES_GET_YEAR_DAY_SCHEDULE_RSP:
//  679         stat = zclClosures_ProcessInDoorLockGetYearDayScheduleRsp( pInMsg, pCBs );
??zclClosures_ProcessInDoorLockCmds_52:
        ; Setup parameters for call to function zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
        LCALL     ??zclClosures_ProcessInDoorLockGetYearDaySchedu; Banked call to: zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
        LJMP      ??zclClosures_ProcessInDoorLockCmds_26 & 0xFFFF
//  680         break;
//  681 
//  682       case COMMAND_CLOSURES_CLEAR_YEAR_DAY_SCHEDULE_RSP:
//  683         stat = zclClosures_ProcessInDoorLockClearYearDayScheduleRsp( pInMsg, pCBs );
??zclClosures_ProcessInDoorLockCmds_53:
        MOV       A,R4
        ADD       A,#0x4c
        SJMP      ??zclClosures_ProcessInDoorLockCmds_65
//  684         break;
//  685 
//  686       case COMMAND_CLOSURES_SET_HOLIDAY_SCHEDULE_RSP:
//  687         stat = zclClosures_ProcessInDoorLockSetHolidayScheduleRsp( pInMsg, pCBs );
??zclClosures_ProcessInDoorLockCmds_54:
        MOV       A,R4
        ADD       A,#0x4e
        SJMP      ??zclClosures_ProcessInDoorLockCmds_65
//  688         break;
//  689 
//  690       case COMMAND_CLOSURES_GET_HOLIDAY_SCHEDULE_RSP:
//  691         stat = zclClosures_ProcessInDoorLockGetHolidayScheduleRsp( pInMsg, pCBs );
??zclClosures_ProcessInDoorLockCmds_55:
        ; Setup parameters for call to function zclClosures_ProcessInDoorLockGetHolidayScheduleRsp
        LCALL     ??zclClosures_ProcessInDoorLockGetHolidaySchedu; Banked call to: zclClosures_ProcessInDoorLockGetHolidayScheduleRsp
        SJMP      ??zclClosures_ProcessInDoorLockCmds_26
//  692         break;
//  693 
//  694       case COMMAND_CLOSURES_CLEAR_HOLIDAY_SCHEDULE_RSP:
//  695         stat = zclClosures_ProcessInDoorLockClearHolidayScheduleRsp( pInMsg, pCBs );
??zclClosures_ProcessInDoorLockCmds_56:
        MOV       A,R4
        ADD       A,#0x52
        SJMP      ??zclClosures_ProcessInDoorLockCmds_65
//  696         break;
//  697 
//  698       case COMMAND_CLOSURES_SET_USER_TYPE_RSP:
//  699         stat = zclClosures_ProcessInDoorLockSetUserTypeRsp( pInMsg, pCBs );
??zclClosures_ProcessInDoorLockCmds_57:
        MOV       A,R4
        ADD       A,#0x54
??zclClosures_ProcessInDoorLockCmds_65:
        LCALL     ?Subroutine26 & 0xFFFF
??CrossCallReturnLabel_273:
        JNZ       ??zclClosures_ProcessInDoorLockCmds_67
        ; Setup parameters for indirect call
        SJMP      ??zclClosures_ProcessInDoorLockCmds_1
//  700         break;
//  701 
//  702       case COMMAND_CLOSURES_GET_USER_TYPE_RSP:
//  703         stat = zclClosures_ProcessInDoorLockGetUserTypeRsp( pInMsg, pCBs );
??zclClosures_ProcessInDoorLockCmds_58:
        MOV       A,R4
        ADD       A,#0x56
        LCALL     ?Subroutine85 & 0xFFFF
??CrossCallReturnLabel_202:
        LCALL     ??Subroutine144_0 & 0xFFFF
??CrossCallReturnLabel_317:
        JZ        ??zclClosures_ProcessInDoorLockCmds_1
??zclClosures_ProcessInDoorLockCmds_66:
        LCALL     ?Subroutine34 & 0xFFFF
??CrossCallReturnLabel_267:
        MOV       ?V0,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R5,A
        MOV       A,?V0
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,R5
        LCALL     ?Subroutine67 & 0xFFFF
??CrossCallReturnLabel_158:
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        LCALL     ?Subroutine72 & 0xFFFF
??CrossCallReturnLabel_167:
        LCALL     ??Subroutine152_0 & 0xFFFF
??CrossCallReturnLabel_362:
        SJMP      ??CrossCallReturnLabel_96
//  704         break;
//  705 
//  706       case COMMAND_CLOSURES_SET_RFID_CODE_RSP:
//  707         stat = zclClosures_ProcessInDoorLockSetRFIDCodeRsp( pInMsg, pCBs );
??zclClosures_ProcessInDoorLockCmds_59:
        MOV       A,R4
        ADD       A,#0x58
        LCALL     ?Subroutine26 & 0xFFFF
??CrossCallReturnLabel_274:
        JZ        ??zclClosures_ProcessInDoorLockCmds_1
        ; Setup parameters for indirect call
        SJMP      ??zclClosures_ProcessInDoorLockCmds_67
//  708         break;
//  709 
//  710       case COMMAND_CLOSURES_GET_RFID_CODE_RSP:
//  711         stat = zclClosures_ProcessInDoorLockGetRFIDCodeRsp( pInMsg, pCBs );
??zclClosures_ProcessInDoorLockCmds_60:
        ; Setup parameters for call to function zclClosures_ProcessInDoorLockGetRFIDCodeRsp
        LCALL     `??zclClosures_ProcessInDoorLockGetRFIDCodeRsp::`; Banked call to: zclClosures_ProcessInDoorLockGetRFIDCodeRsp
        SJMP      ??zclClosures_ProcessInDoorLockCmds_26
//  712         break;
//  713 
//  714       case COMMAND_CLOSURES_CLEAR_RFID_CODE_RSP:
//  715         stat = zclClosures_ProcessInDoorLockClearRFIDCodeRsp( pInMsg, pCBs );
??zclClosures_ProcessInDoorLockCmds_61:
        MOV       A,R4
        ADD       A,#0x5c
        SJMP      ??zclClosures_ProcessInDoorLockCmds_68
//  716         break;
//  717 
//  718       case COMMAND_CLOSURES_CLEAR_ALL_RFID_CODES_RSP:
//  719         stat = zclClosures_ProcessInDoorLockClearAllRFIDCodesRsp( pInMsg, pCBs );
??zclClosures_ProcessInDoorLockCmds_62:
        MOV       A,R4
        ADD       A,#0x5e
??zclClosures_ProcessInDoorLockCmds_68:
        LCALL     ?Subroutine26 & 0xFFFF
??CrossCallReturnLabel_275:
        JZ        ??zclClosures_ProcessInDoorLockCmds_1
        ; Setup parameters for indirect call
??zclClosures_ProcessInDoorLockCmds_67:
        MOV       DPL,?V0
        MOV       DPH,?V1
        LCALL     ?Subroutine40 & 0xFFFF
??CrossCallReturnLabel_96:
        LCALL     ?CALL_IND
        SJMP      ??zclClosures_ProcessInDoorLockCmds_26
//  720         break;
//  721 
//  722       case COMMAND_CLOSURES_OPERATION_EVENT_NOTIFICATION:
//  723         stat = zclClosures_ProcessInDoorLockOperationEventNotification( pInMsg, pCBs );
??zclClosures_ProcessInDoorLockCmds_63:
        ; Setup parameters for call to function zclClosures_ProcessInDoorLockOperationEventNotification
        LCALL     ??zclClosures_ProcessInDoorLockOperationEventNo; Banked call to: zclClosures_ProcessInDoorLockOperationEventNotification
        SJMP      ??zclClosures_ProcessInDoorLockCmds_26
//  724         break;
//  725 
//  726       case COMMAND_CLOSURES_PROGRAMMING_EVENT_NOTIFICATION:
//  727         stat = zclClosures_ProcessInDoorLockProgrammingEventNotification( pInMsg, pCBs );
??zclClosures_ProcessInDoorLockCmds_64:
        ; Setup parameters for call to function zclClosures_ProcessInDoorLockProgrammingEventNotification
        LCALL     ??zclClosures_ProcessInDoorLockProgrammingEvent; Banked call to: zclClosures_ProcessInDoorLockProgrammingEventNotification
??zclClosures_ProcessInDoorLockCmds_26:
        MOV       A,R1
        MOV       R1,A
//  728         break;
        SJMP      ??zclClosures_ProcessInDoorLockCmds_69
//  729 
//  730       default:
//  731         // Unknown command
//  732         stat = ZFailure;
??zclClosures_ProcessInDoorLockCmds_1:
        MOV       R1,#0x1
//  733         break;
//  734     }
//  735   }
//  736 
//  737   return ( stat );
??zclClosures_ProcessInDoorLockCmds_69:
        MOV       A,#0x6
        LJMP      ??Subroutine174_0 & 0xFFFF
//  738 }
          CFI EndBlock cfiBlock2

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine85:
          CFI Block cfiCond3 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockCmds
          CFI Conditional ??CrossCallReturnLabel_201
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond4 Using cfiCommon0
          CFI (cfiCond4) Function zclClosures_ProcessInDoorLockCmds
          CFI (cfiCond4) Conditional ??CrossCallReturnLabel_202
          CFI (cfiCond4) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond4) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond4) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond4) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond4) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond4) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond4) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond4) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond4) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond4) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond4) CFA_SP SP+-2
          CFI (cfiCond4) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker5 Using cfiCommon1
          CFI (cfiPicker5) NoFunction
          CFI (cfiPicker5) Picker
        MOV       R0,A
        CLR       A
        ADDC      A,R5
        MOV       R1,A
        MOV       A,R0
        MOV       R6,A
        MOV       A,R1
        MOV       R7,A
        MOV       DPL,R6
        MOV       DPH,R7
        RET
          CFI EndBlock cfiCond3
          CFI EndBlock cfiCond4
          CFI EndBlock cfiPicker5

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine67:
          CFI Block cfiCond6 Using cfiCommon0
          CFI Function zclClosures_RegisterDoorLockCmdCallbacks
          CFI Conditional ??CrossCallReturnLabel_156
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond7 Using cfiCommon0
          CFI (cfiCond7) Function zclClosures_RegisterDoorLockCmdCallbacks
          CFI (cfiCond7) Conditional ??CrossCallReturnLabel_157
          CFI (cfiCond7) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond7) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond7) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond7) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond7) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond7) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond7) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond7) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond7) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond7) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond7) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond7) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond7) CFA_SP SP+-2
          CFI (cfiCond7) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond8 Using cfiCommon0
          CFI (cfiCond8) Function zclClosures_ProcessInDoorLockCmds
          CFI (cfiCond8) Conditional ??CrossCallReturnLabel_158
          CFI (cfiCond8) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond8) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond8) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond8) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond8) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond8) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond8) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond8) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond8) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond8) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond8) CFA_SP SP+-2
          CFI (cfiCond8) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker9 Using cfiCommon1
          CFI (cfiPicker9) NoFunction
          CFI (cfiPicker9) Picker
        LCALL     ??Subroutine145_0 & 0xFFFF
??CrossCallReturnLabel_341:
        RET
          CFI EndBlock cfiCond6
          CFI EndBlock cfiCond7
          CFI EndBlock cfiCond8
          CFI EndBlock cfiPicker9

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine53:
          CFI Block cfiCond10 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockCmds
          CFI Conditional ??CrossCallReturnLabel_123
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond11 Using cfiCommon0
          CFI (cfiCond11) Function zclClosures_ProcessInDoorLockCmds
          CFI (cfiCond11) Conditional ??CrossCallReturnLabel_124
          CFI (cfiCond11) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond11) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond11) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond11) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond11) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond11) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond11) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond11) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond11) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond11) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond11) CFA_SP SP+-2
          CFI (cfiCond11) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker12 Using cfiCommon1
          CFI (cfiPicker12) NoFunction
          CFI (cfiPicker12) Picker
        MOV       DPL,?V0
        MOV       DPH,?V1
        LCALL     ?Subroutine99 & 0xFFFF
??CrossCallReturnLabel_351:
        MOV       DPH,A
        MOV       DPL,R4
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond10
          CFI EndBlock cfiCond11
          CFI EndBlock cfiPicker12

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine50:
          CFI Block cfiCond13 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockCmds
          CFI Conditional ??CrossCallReturnLabel_116
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond14 Using cfiCommon0
          CFI (cfiCond14) Function zclClosures_ProcessInDoorLockCmds
          CFI (cfiCond14) Conditional ??CrossCallReturnLabel_117
          CFI (cfiCond14) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond14) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond14) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond14) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond14) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond14) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond14) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond14) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond14) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond14) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond14) CFA_SP SP+-2
          CFI (cfiCond14) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker15 Using cfiCommon1
          CFI (cfiPicker15) NoFunction
          CFI (cfiPicker15) Picker
        LCALL     ?Subroutine97 & 0xFFFF
??CrossCallReturnLabel_224:
        ORL       A,R7
        RET
          CFI EndBlock cfiCond13
          CFI EndBlock cfiCond14
          CFI EndBlock cfiPicker15

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine97:
          CFI Block cfiCond16 Using cfiCommon0
          CFI Function zclClosures_HdlIncoming
          CFI Conditional ??CrossCallReturnLabel_223
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond17 Using cfiCommon0
          CFI (cfiCond17) Function zclClosures_ProcessInDoorLockCmds
          CFI (cfiCond17) Conditional ??CrossCallReturnLabel_224, ??CrossCallReturnLabel_116
          CFI (cfiCond17) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond17) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond17) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond17) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond17) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond17) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond17) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond17) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond17) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond17) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond17) CFA_SP SP+-4
          CFI (cfiCond17) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond18 Using cfiCommon0
          CFI (cfiCond18) Function zclClosures_ProcessInDoorLockCmds
          CFI (cfiCond18) Conditional ??CrossCallReturnLabel_224, ??CrossCallReturnLabel_117
          CFI (cfiCond18) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond18) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond18) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond18) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond18) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond18) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond18) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond18) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond18) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond18) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond18) CFA_SP SP+-4
          CFI (cfiCond18) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker19 Using cfiCommon1
          CFI (cfiPicker19) NoFunction
          CFI (cfiPicker19) Picker
        LCALL     ?Subroutine117 & 0xFFFF
??CrossCallReturnLabel_336:
        MOV       A,R0
        MOV       R6,A
        MOV       A,R1
        MOV       R7,A
        MOV       A,R6
        RET
          CFI EndBlock cfiCond16
          CFI EndBlock cfiCond17
          CFI EndBlock cfiCond18
          CFI EndBlock cfiPicker19

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine34:
          CFI Block cfiCond20 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockCmds
          CFI Conditional ??CrossCallReturnLabel_266
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond21 Using cfiCommon0
          CFI (cfiCond21) Function zclClosures_ProcessInDoorLockCmds
          CFI (cfiCond21) Conditional ??CrossCallReturnLabel_267
          CFI (cfiCond21) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond21) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond21) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond21) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond21) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond21) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond21) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond21) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond21) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond21) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond21) CFA_SP SP+-2
          CFI (cfiCond21) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker22 Using cfiCommon1
          CFI (cfiPicker22) NoFunction
          CFI (cfiPicker22) Picker
        MOV       DPL,?V0
        MOV       DPH,?V1
          CFI EndBlock cfiCond20
          CFI EndBlock cfiCond21
          CFI EndBlock cfiPicker22
        REQUIRE ??Subroutine125_0
        ; // Fall through to label ??Subroutine125_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine125_0:
          CFI Block cfiCond23 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockUnlockWithTimeout
          CFI Conditional ??CrossCallReturnLabel_265
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond24 Using cfiCommon0
          CFI (cfiCond24) Function zclClosures_ProcessInDoorLockCmds
          CFI (cfiCond24) Conditional ??CrossCallReturnLabel_266
          CFI (cfiCond24) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond24) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond24) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond24) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond24) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond24) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond24) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond24) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond24) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond24) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond24) CFA_SP SP+-2
          CFI (cfiCond24) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond25 Using cfiCommon0
          CFI (cfiCond25) Function zclClosures_ProcessInDoorLockCmds
          CFI (cfiCond25) Conditional ??CrossCallReturnLabel_267
          CFI (cfiCond25) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond25) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond25) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond25) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond25) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond25) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond25) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond25) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond25) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond25) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond25) CFA_SP SP+-2
          CFI (cfiCond25) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker26 Using cfiCommon1
          CFI (cfiPicker26) NoFunction
          CFI (cfiPicker26) Picker
        LCALL     ?Subroutine92 & 0xFFFF
??CrossCallReturnLabel_271:
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond23
          CFI EndBlock cfiCond24
          CFI EndBlock cfiCond25
          CFI EndBlock cfiPicker26

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine26:
          CFI Block cfiCond27 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockCmds
          CFI Conditional ??CrossCallReturnLabel_273
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond28 Using cfiCommon0
          CFI (cfiCond28) Function zclClosures_ProcessInDoorLockCmds
          CFI (cfiCond28) Conditional ??CrossCallReturnLabel_274
          CFI (cfiCond28) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond28) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond28) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond28) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond28) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond28) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond28) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond28) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond28) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond28) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond28) CFA_SP SP+-2
          CFI (cfiCond28) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond29 Using cfiCommon0
          CFI (cfiCond29) Function zclClosures_ProcessInDoorLockCmds
          CFI (cfiCond29) Conditional ??CrossCallReturnLabel_275
          CFI (cfiCond29) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond29) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond29) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond29) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond29) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond29) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond29) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond29) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond29) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond29) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond29) CFA_SP SP+-2
          CFI (cfiCond29) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker30 Using cfiCommon1
          CFI (cfiPicker30) NoFunction
          CFI (cfiPicker30) Picker
        MOV       DPL,A
        CLR       A
        ADDC      A,R5
        MOV       DPH,A
          CFI EndBlock cfiCond27
          CFI EndBlock cfiCond28
          CFI EndBlock cfiCond29
          CFI EndBlock cfiPicker30
        REQUIRE ??Subroutine126_0
        ; // Fall through to label ??Subroutine126_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine126_0:
          CFI Block cfiCond31 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLock
          CFI Conditional ??CrossCallReturnLabel_272
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond32 Using cfiCommon0
          CFI (cfiCond32) Function zclClosures_ProcessInDoorLockCmds
          CFI (cfiCond32) Conditional ??CrossCallReturnLabel_273
          CFI (cfiCond32) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond32) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond32) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond32) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond32) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond32) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond32) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond32) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond32) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond32) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond32) CFA_SP SP+-2
          CFI (cfiCond32) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond33 Using cfiCommon0
          CFI (cfiCond33) Function zclClosures_ProcessInDoorLockCmds
          CFI (cfiCond33) Conditional ??CrossCallReturnLabel_274
          CFI (cfiCond33) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond33) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond33) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond33) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond33) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond33) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond33) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond33) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond33) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond33) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond33) CFA_SP SP+-2
          CFI (cfiCond33) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond34 Using cfiCommon0
          CFI (cfiCond34) Function zclClosures_ProcessInDoorLockCmds
          CFI (cfiCond34) Conditional ??CrossCallReturnLabel_275
          CFI (cfiCond34) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond34) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond34) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond34) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond34) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond34) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond34) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond34) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond34) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond34) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond34) CFA_SP SP+-2
          CFI (cfiCond34) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker35 Using cfiCommon1
          CFI (cfiPicker35) NoFunction
          CFI (cfiPicker35) Picker
        LCALL     ?Subroutine100 & 0xFFFF
??CrossCallReturnLabel_333:
        MOV       R4,A
        MOV       A,R1
        MOV       R5,A
        MOV       A,R4
        ORL       A,R5
        RET
          CFI EndBlock cfiCond31
          CFI EndBlock cfiCond32
          CFI EndBlock cfiCond33
          CFI EndBlock cfiCond34
          CFI EndBlock cfiPicker35
//  739 
//  740 /*********************************************************************
//  741  * @fn      zclClosures_ProcessInDoorLock
//  742  *
//  743  * @brief   Process in the received Door Lock cmds
//  744  *
//  745  * @param   pInMsg - pointer to the incoming message
//  746  * @param   pCBs - pointer to the application callbacks
//  747  *
//  748  * @return  ZStatus_t
//  749  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  750 static ZStatus_t zclClosures_ProcessInDoorLock( zclIncoming_t *pInMsg,
zclClosures_ProcessInDoorLock:
          CFI Block cfiBlock36 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLock
        CODE
//  751                                                 zclClosures_DoorLockAppCallbacks_t *pCBs )
//  752 {
        FUNCALL zclClosures_ProcessInDoorLock, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclClosures_ProcessInDoorLock, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        MOV       A,#-0xd
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 13)
        ; Saved register size: 13
        ; Auto size: 2
        MOV       A,#-0x2
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 15)
        MOV       A,R2
        MOV       R6,A
        MOV       A,R3
        MOV       R7,A
        MOV       ?V0,R4
        MOV       ?V1,R5
//  753   ZStatus_t status;
//  754 
//  755   // Client-to-Server
//  756   if ( zcl_ServerCmd( pInMsg->hdr.fc.direction ) )
        LCALL     ?Subroutine81 & 0xFFFF
??CrossCallReturnLabel_190:
        MOV       DPL,R6
        MOV       DPH,R7
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        ANL       A,#0x8
        MOV       DPL,R6
        MOV       DPH,R7
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        JNZ       ??zclClosures_ProcessInDoorLock_0
//  757   {
//  758     switch(pInMsg->hdr.commandID)
        MOVX      A,@DPTR
        JZ        ??zclClosures_ProcessInDoorLock_1
        DEC       A
        JZ        ??zclClosures_ProcessInDoorLock_1
        DEC       A
        JZ        $+5
        LJMP      ??zclClosures_ProcessInDoorLock_2 & 0xFFFF
//  759     {
//  760       case COMMAND_CLOSURES_LOCK_DOOR:
//  761       case COMMAND_CLOSURES_UNLOCK_DOOR:
//  762       case COMMAND_CLOSURES_TOGGLE_DOOR:
//  763         if ( pCBs->pfnDoorLock )
??zclClosures_ProcessInDoorLock_1:
        MOV       DPL,R4
        MOV       DPH,R5
        LCALL     ??Subroutine144_0 & 0xFFFF
??CrossCallReturnLabel_318:
        JNZ       $+5
        LJMP      ??zclClosures_ProcessInDoorLock_2 & 0xFFFF
//  764         {
//  765           uint8 i;
//  766           uint8 calculatedArrayLen;
//  767           zclDoorLock_t cmd;
//  768 
//  769           // first octet of PIN/RFID Code variable string identifies its length
//  770           calculatedArrayLen = pInMsg->pData[0] + 1; // add first byte of string
        MOV       DPL,?V2
        MOV       DPH,?V3
        LCALL     ??Subroutine162_0 & 0xFFFF
??CrossCallReturnLabel_403:
        MOV       ?V4,A
//  771 
//  772           cmd.pPinRfidCode = zcl_mem_alloc( calculatedArrayLen );
        ; Setup parameters for call to function osal_mem_alloc
        MOV       R2,A
        MOV       R3,#0x0
        LCALL     `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOV       A,R2
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,R3
        MOVX      @DPTR,A
//  773 
//  774           if ( !cmd.pPinRfidCode )
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        LCALL     ??Subroutine144_0 & 0xFFFF
??CrossCallReturnLabel_319:
        JNZ       ??zclClosures_ProcessInDoorLock_3
//  775           {
//  776             return ( ZMemError );  // no memory
        MOV       R1,#0x10
        SJMP      ??zclClosures_ProcessInDoorLock_4
//  777           }
//  778 
//  779           for ( i = 0; i < calculatedArrayLen; i++ )
??zclClosures_ProcessInDoorLock_3:
        MOV       R2,#0x0
        SJMP      ??zclClosures_ProcessInDoorLock_5
//  780           {
//  781             cmd.pPinRfidCode[i] = pInMsg->pData[i];
??zclClosures_ProcessInDoorLock_6:
        MOV       A,R2
        MOV       R0,A
        MOV       DPL,?V2
        MOV       DPH,?V3
        LCALL     ?Subroutine49 & 0xFFFF
//  782           }
??CrossCallReturnLabel_114:
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        LCALL     ?Subroutine95 & 0xFFFF
??CrossCallReturnLabel_221:
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
        INC       R2
??zclClosures_ProcessInDoorLock_5:
        MOV       A,R2
        CLR       C
        SUBB      A,?V4
        JC        ??zclClosures_ProcessInDoorLock_6
//  783 
//  784           status = ( pCBs->pfnDoorLock( pInMsg, &cmd ) );
        ; Setup parameters for indirect call
        LCALL     ?Subroutine48 & 0xFFFF
??CrossCallReturnLabel_374:
        LCALL     ?CALL_IND
        MOV       A,R1
        MOV       R6,A
//  785           zcl_mem_free( cmd.pPinRfidCode );
        ; Setup parameters for call to function osal_mem_free
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        LCALL     ?Subroutine37 & 0xFFFF
??CrossCallReturnLabel_85:
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
//  786           return status;
        MOV       A,R6
        MOV       R1,A
        SJMP      ??zclClosures_ProcessInDoorLock_4
//  787         }
//  788 
//  789         return ( ZCL_STATUS_FAILURE );
//  790         break;
//  791 
//  792       default:
//  793         return ( ZFailure );   // Error ignore the command
//  794     }
//  795   }
//  796   // Server-to-Client
//  797   else
//  798   {
//  799     switch(pInMsg->hdr.commandID)
??zclClosures_ProcessInDoorLock_0:
        MOVX      A,@DPTR
        JZ        ??zclClosures_ProcessInDoorLock_7
        DEC       A
        JZ        ??zclClosures_ProcessInDoorLock_7
        DEC       A
        JNZ       ??zclClosures_ProcessInDoorLock_2
//  800     {
//  801       case COMMAND_CLOSURES_LOCK_DOOR_RSP:
//  802       case COMMAND_CLOSURES_UNLOCK_DOOR_RSP:
//  803       case COMMAND_CLOSURES_TOGGLE_DOOR_RSP:
//  804         if ( pCBs->pfnDoorLockRsp )
??zclClosures_ProcessInDoorLock_7:
        MOV       DPL,R4
        MOV       DPH,R5
        INC       DPTR
        INC       DPTR
        LCALL     ??Subroutine126_0 & 0xFFFF
??CrossCallReturnLabel_272:
        JZ        ??zclClosures_ProcessInDoorLock_2
//  805         {
//  806           return ( pCBs->pfnDoorLockRsp( pInMsg, pInMsg->pData[0] ) );
        ; Setup parameters for indirect call
        MOV       DPL,?V2
        MOV       DPH,?V3
        LCALL     ?Subroutine40 & 0xFFFF
//  807         }
??CrossCallReturnLabel_97:
        LCALL     ?CALL_IND
        SJMP      ??zclClosures_ProcessInDoorLock_4
//  808 
//  809         return ( ZCL_STATUS_FAILURE );
//  810         break;
//  811 
//  812       default:
//  813         return ( ZFailure );   // Error ignore the command
??zclClosures_ProcessInDoorLock_2:
        MOV       R1,#0x1
??zclClosures_ProcessInDoorLock_4:
        MOV       A,#0x2
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 13)
        MOV       R7,#0x5
        LJMP      ?BANKED_LEAVE_XDATA
//  814     }
//  815   }
//  816 }
          CFI EndBlock cfiBlock36

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine40:
          CFI Block cfiCond37 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockCmds
          CFI Conditional ??CrossCallReturnLabel_96
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond38 Using cfiCommon0
          CFI (cfiCond38) Function zclClosures_ProcessInDoorLock
          CFI (cfiCond38) Conditional ??CrossCallReturnLabel_97
          CFI (cfiCond38) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond38) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond38) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond38) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond38) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond38) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond38) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond38) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond38) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond38) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond38) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond38) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond38) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond38) CFA_SP SP+-2
          CFI (cfiCond38) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiPicker39 Using cfiCommon1
          CFI (cfiPicker39) NoFunction
          CFI (cfiPicker39) Picker
        LCALL     ?Subroutine101 & 0xFFFF
??CrossCallReturnLabel_226:
        MOV       R1,A
        MOV       DPL,R4
        MOV       DPH,R5
        RET
          CFI EndBlock cfiCond37
          CFI EndBlock cfiCond38
          CFI EndBlock cfiPicker39
//  817 
//  818 /*********************************************************************
//  819  * @fn      zclClosures_ProcessInDoorLockUnlockWithTimeout
//  820  *
//  821  * @brief   Process in the received Unlock With Timeout cmd
//  822  *
//  823  * @param   pInMsg - pointer to the incoming message
//  824  * @param   pCBs - pointer to the application callbacks
//  825  *
//  826  * @return  ZStatus_t
//  827  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  828 static ZStatus_t zclClosures_ProcessInDoorLockUnlockWithTimeout( zclIncoming_t *pInMsg,
zclClosures_ProcessInDoorLockUnlockWithTimeout:
          CFI Block cfiBlock40 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockUnlockWithTimeout
        CODE
//  829                                                                  zclClosures_DoorLockAppCallbacks_t *pCBs )
//  830 {
        FUNCALL zclClosures_ProcessInDoorLockUnlockWithTimeout, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclClosures_ProcessInDoorLockUnlockWithTimeout, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V6
        REQUIRE ?V7
        MOV       A,#-0x10
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 4
        MOV       A,#-0x4
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 20)
        MOV       A,R2
        MOV       R6,A
        MOV       A,R3
        MOV       R7,A
//  831   ZStatus_t status;
//  832 
//  833   if ( pCBs->pfnDoorLockUnlockWithTimeout )
        MOV       A,R4
        ADD       A,#0x4
        LCALL     ?Subroutine17 & 0xFFFF
??CrossCallReturnLabel_327:
        JZ        ??zclClosures_ProcessInDoorLockUnlockWithTimeou_1
//  834   {
//  835     uint8 i;
//  836     uint8 offset;
//  837     uint8 calculatedArrayLen;
//  838     zclDoorLockUnlockTimeout_t cmd;
//  839 
//  840     // first octet of PIN/RFID Code variable string identifies its length
//  841     calculatedArrayLen = pInMsg->pData[2] + 1;  // add first byte of string
        LCALL     ?Subroutine81 & 0xFFFF
??CrossCallReturnLabel_191:
        MOV       DPL,R0
        MOV       DPH,A
        LCALL     ??Subroutine152_0 & 0xFFFF
??CrossCallReturnLabel_363:
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        INC       A
        MOV       ?V4,A
//  842 
//  843     cmd.pPinRfidCode = zcl_mem_alloc( calculatedArrayLen );
        ; Setup parameters for call to function osal_mem_alloc
        MOV       R2,A
        MOV       R3,#0x0
        LCALL     `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV       ?V6,R2
        MOV       ?V7,R3
        MOV       R0,?V6
        MOV       R1,?V7
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine61 & 0xFFFF
//  844     if ( !cmd.pPinRfidCode )
??CrossCallReturnLabel_140:
        JNZ       ??zclClosures_ProcessInDoorLockUnlockWithTimeou_2
//  845     {
//  846       return ( ZMemError );  // no memory
        MOV       R1,#0x10
        SJMP      ??zclClosures_ProcessInDoorLockUnlockWithTimeou_3
//  847     }
//  848 
//  849     cmd.timeout = BUILD_UINT16( pInMsg->pData[0], pInMsg->pData[1] );
??zclClosures_ProcessInDoorLockUnlockWithTimeou_2:
        MOV       DPL,?V2
        MOV       DPH,?V3
        LCALL     ??Subroutine125_0 & 0xFFFF
??CrossCallReturnLabel_265:
        MOV       R2,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R1,A
        MOV       A,R2
        LCALL     ?Subroutine77 & 0xFFFF
//  850     offset = 2;
??CrossCallReturnLabel_287:
        MOV       R1,#0x2
//  851     for ( i = 0; i < calculatedArrayLen; i++ )
        MOV       R0,#0x0
        SJMP      ??zclClosures_ProcessInDoorLockUnlockWithTimeou_4
//  852     {
//  853       cmd.pPinRfidCode[i] = pInMsg->pData[offset++];
??zclClosures_ProcessInDoorLockUnlockWithTimeou_5:
        MOV       A,R1
        MOV       R2,A
        MOV       DPL,?V2
        MOV       DPH,?V3
        LCALL     ??Subroutine168_0 & 0xFFFF
//  854     }
??CrossCallReturnLabel_419:
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,R0
        MOV       R2,A
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine19 & 0xFFFF
??CrossCallReturnLabel_43:
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
        INC       R1
        INC       R0
??zclClosures_ProcessInDoorLockUnlockWithTimeou_4:
        MOV       A,R0
        CLR       C
        SUBB      A,?V4
        JC        ??zclClosures_ProcessInDoorLockUnlockWithTimeou_5
//  855 
//  856     status = ( pCBs->pfnDoorLockUnlockWithTimeout( pInMsg, &cmd ) );
        ; Setup parameters for indirect call
        LCALL     ?Subroutine48 & 0xFFFF
??CrossCallReturnLabel_375:
        LCALL     ?CALL_IND
        MOV       A,R1
        MOV       R6,A
//  857     zcl_mem_free( cmd.pPinRfidCode );
        ; Setup parameters for call to function osal_mem_free
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine37 & 0xFFFF
??CrossCallReturnLabel_86:
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
//  858     return status;
        MOV       A,R6
        MOV       R1,A
        SJMP      ??zclClosures_ProcessInDoorLockUnlockWithTimeou_3
//  859   }
//  860 
//  861   return ( ZFailure );
??zclClosures_ProcessInDoorLockUnlockWithTimeou_1:
        MOV       R1,#0x1
??zclClosures_ProcessInDoorLockUnlockWithTimeou_3:
        MOV       A,#0x4
        SJMP      ??Subroutine127_0
//  862 }
          CFI EndBlock cfiBlock40

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine81:
          CFI Block cfiCond41 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLock
          CFI Conditional ??CrossCallReturnLabel_190
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond42 Using cfiCommon0
          CFI (cfiCond42) Function zclClosures_ProcessInDoorLockUnlockWithTimeout
          CFI (cfiCond42) Conditional ??CrossCallReturnLabel_191
          CFI (cfiCond42) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond42) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond42) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond42) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond42) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond42) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond42) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond42) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond42) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond42) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond42) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond42) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond42) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond42) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond42) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond42) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond42) CFA_SP SP+-2
          CFI (cfiCond42) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiPicker43 Using cfiCommon1
          CFI (cfiPicker43) NoFunction
          CFI (cfiPicker43) Picker
        LCALL     ?Subroutine114 & 0xFFFF
??CrossCallReturnLabel_254:
        RET
          CFI EndBlock cfiCond41
          CFI EndBlock cfiCond42
          CFI EndBlock cfiPicker43

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine114:
          CFI Block cfiCond44 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLock
          CFI Conditional ??CrossCallReturnLabel_254, ??CrossCallReturnLabel_190
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond45 Using cfiCommon0
          CFI (cfiCond45) Function zclClosures_ProcessInDoorLockUnlockWithTimeout
          CFI (cfiCond45) Conditional ??CrossCallReturnLabel_254, ??CrossCallReturnLabel_191
          CFI (cfiCond45) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond45) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond45) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond45) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond45) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond45) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond45) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond45) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond45) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond45) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond45) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond45) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond45) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond45) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond45) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond45) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond45) CFA_SP SP+-4
          CFI (cfiCond45) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond46 Using cfiCommon0
          CFI (cfiCond46) Function zclClosures_ProcessInDoorLockSetPINCode
          CFI (cfiCond46) Conditional ??CrossCallReturnLabel_253, ??CrossCallReturnLabel_51
          CFI (cfiCond46) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond46) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond46) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond46) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond46) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond46) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond46) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond46) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond46) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond46) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond46) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond46) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond46) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond46) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond46) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond46) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond46) CFA_SP SP+-4
          CFI (cfiCond46) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond47 Using cfiCommon0
          CFI (cfiCond47) Function zclClosures_ProcessInDoorLockSetRFIDCode
          CFI (cfiCond47) Conditional ??CrossCallReturnLabel_253, ??CrossCallReturnLabel_52
          CFI (cfiCond47) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond47) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond47) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond47) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond47) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond47) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond47) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond47) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond47) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond47) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond47) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond47) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond47) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond47) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond47) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond47) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond47) CFA_SP SP+-4
          CFI (cfiCond47) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond48 Using cfiCommon0
          CFI (cfiCond48) Function zclClosures_ProcessInDoorLockGetPINCodeRsp
          CFI (cfiCond48) Conditional ??CrossCallReturnLabel_253, ??CrossCallReturnLabel_53
          CFI (cfiCond48) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond48) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond48) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond48) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond48) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond48) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond48) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond48) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond48) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond48) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond48) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond48) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond48) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond48) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond48) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond48) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond48) CFA_SP SP+-4
          CFI (cfiCond48) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond49 Using cfiCommon0
          CFI (cfiCond49) Function zclClosures_ProcessInDoorLockGetRFIDCodeRsp
          CFI (cfiCond49) Conditional ??CrossCallReturnLabel_253, ??CrossCallReturnLabel_54
          CFI (cfiCond49) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond49) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond49) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond49) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond49) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond49) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond49) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond49) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond49) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond49) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond49) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond49) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond49) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond49) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond49) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond49) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond49) CFA_SP SP+-4
          CFI (cfiCond49) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker50 Using cfiCommon1
          CFI (cfiPicker50) NoFunction
          CFI (cfiPicker50) Picker
        MOV       A,R6
        ADD       A,#0x8
        MOV       R0,A
        CLR       A
        ADDC      A,R7
        MOV       R1,A
        MOV       ?V2,R0
        MOV       ?V3,R1
        RET
          CFI EndBlock cfiCond44
          CFI EndBlock cfiCond45
          CFI EndBlock cfiCond46
          CFI EndBlock cfiCond47
          CFI EndBlock cfiCond48
          CFI EndBlock cfiCond49
          CFI EndBlock cfiPicker50
//  863 
//  864 /*********************************************************************
//  865  * @fn      zclClosures_ProcessInDoorLockGetLogRecord
//  866  *
//  867  * @brief   Process in the received Get Log Record cmd
//  868  *
//  869  * @param   pInMsg - pointer to the incoming message
//  870  * @param   pCBs - pointer to the application callbacks
//  871  *
//  872  * @return  ZStatus_t
//  873  */
//  874 static ZStatus_t zclClosures_ProcessInDoorLockGetLogRecord( zclIncoming_t *pInMsg,
//  875                                                             zclClosures_DoorLockAppCallbacks_t *pCBs )
//  876 {
//  877   if ( pCBs->pfnDoorLockGetLogRecord )
//  878   {
//  879     zclDoorLockGetLogRecord_t cmd;
//  880 
//  881     cmd.logIndex = BUILD_UINT16( pInMsg->pData[0], pInMsg->pData[1] );
//  882 
//  883     return ( pCBs->pfnDoorLockGetLogRecord( pInMsg, &cmd ) );
//  884   }
//  885 
//  886   return ( ZFailure );
//  887 }
//  888 
//  889 /*********************************************************************
//  890  * @fn      zclClosures_ProcessInDoorLockSetPINCode
//  891  *
//  892  * @brief   Process in the received Set PIN Code cmd
//  893  *
//  894  * @param   pInMsg - pointer to the incoming message
//  895  * @param   pCBs - pointer to the application callbacks
//  896  *
//  897  * @return  ZStatus_t
//  898  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine2:
          CFI Block cfiBlock51 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 22)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV       A,#0x6
          CFI EndBlock cfiBlock51
        REQUIRE ??Subroutine127_0
        ; // Fall through to label ??Subroutine127_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine127_0:
          CFI Block cfiBlock52 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 20)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI Invalid
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Valid
        MOV       R7,#0x8
        LJMP      ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock52

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  899 static ZStatus_t zclClosures_ProcessInDoorLockSetPINCode( zclIncoming_t *pInMsg,
zclClosures_ProcessInDoorLockSetPINCode:
          CFI Block cfiBlock53 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockSetPINCode
        CODE
//  900                                                           zclClosures_DoorLockAppCallbacks_t *pCBs )
//  901 {
        FUNCALL zclClosures_ProcessInDoorLockSetPINCode, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclClosures_ProcessInDoorLockSetPINCode, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V6
        REQUIRE ?V7
        MOV       A,#-0x10
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 6
        MOV       A,#-0x6
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 22)
        MOV       A,R2
        MOV       R6,A
        MOV       A,R3
        MOV       R7,A
//  902  if ( pCBs->pfnDoorLockSetPINCode )
        MOV       A,R4
        ADD       A,#0x8
        LCALL     ?Subroutine17 & 0xFFFF
??CrossCallReturnLabel_328:
        JZ        ??zclClosures_ProcessInDoorLockSetPINCode_0
//  903  {
//  904     uint8 i;
//  905     uint8 offset;
//  906     uint8 calculatedArrayLen;
//  907     zclDoorLockSetPINCode_t cmd;
//  908     ZStatus_t status;
//  909 
//  910     // first octet of PIN/RFID Code variable string identifies its length
//  911     calculatedArrayLen = pInMsg->pData[4] + 1; // add first byte of string
        LCALL     ?Subroutine20 & 0xFFFF
//  912 
//  913     cmd.pPIN = zcl_mem_alloc( calculatedArrayLen );
??CrossCallReturnLabel_51:
        LCALL     `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV       ?V6,R2
        MOV       ?V7,R3
        MOV       R0,?V6
        MOV       R1,?V7
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine61 & 0xFFFF
//  914     if ( !cmd.pPIN )
??CrossCallReturnLabel_141:
        JNZ       ??zclClosures_ProcessInDoorLockSetPINCode_1
//  915     {
//  916       return ( ZMemError );  // no memory
        MOV       R1,#0x10
        SJMP      ??zclClosures_ProcessInDoorLockSetPINCode_2
//  917     }
//  918 
//  919     cmd.userID = BUILD_UINT16( pInMsg->pData[0], pInMsg->pData[1] );
??zclClosures_ProcessInDoorLockSetPINCode_1:
        LCALL     ?Subroutine11 & 0xFFFF
//  920     cmd.userStatus = pInMsg->pData[2];
??CrossCallReturnLabel_4:
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        LCALL     ?Subroutine24 & 0xFFFF
//  921     cmd.userType = pInMsg->pData[3];
??CrossCallReturnLabel_61:
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x3
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        LCALL     ?Subroutine73 & 0xFFFF
//  922     offset = 4;
//  923     for ( i = 0; i < calculatedArrayLen; i++ )
??CrossCallReturnLabel_168:
        SJMP      ??zclClosures_ProcessInDoorLockSetPINCode_3
//  924     {
//  925       cmd.pPIN[i] = pInMsg->pData[offset++];
??zclClosures_ProcessInDoorLockSetPINCode_4:
        MOV       A,R1
        MOV       R2,A
        MOV       DPL,?V2
        MOV       DPH,?V3
        LCALL     ??Subroutine168_0 & 0xFFFF
//  926     }
??CrossCallReturnLabel_420:
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,R0
        MOV       R2,A
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine19 & 0xFFFF
??CrossCallReturnLabel_44:
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
        INC       R1
        INC       R0
??zclClosures_ProcessInDoorLockSetPINCode_3:
        MOV       A,R0
        CLR       C
        SUBB      A,?V4
        JC        ??zclClosures_ProcessInDoorLockSetPINCode_4
//  927 
//  928     status = ( pCBs->pfnDoorLockSetPINCode( pInMsg, &cmd ) );
        ; Setup parameters for indirect call
        LCALL     ?Subroutine48 & 0xFFFF
??CrossCallReturnLabel_376:
        LCALL     ?CALL_IND
        MOV       A,R1
        MOV       R6,A
//  929     zcl_mem_free( cmd.pPIN );
        ; Setup parameters for call to function osal_mem_free
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine37 & 0xFFFF
??CrossCallReturnLabel_87:
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
//  930     return status;
        MOV       A,R6
        MOV       R1,A
        SJMP      ??zclClosures_ProcessInDoorLockSetPINCode_2
//  931  }
//  932 
//  933  return ( ZFailure );
??zclClosures_ProcessInDoorLockSetPINCode_0:
        MOV       R1,#0x1
??zclClosures_ProcessInDoorLockSetPINCode_2:
        LJMP      ?Subroutine2 & 0xFFFF
//  934 }
          CFI EndBlock cfiBlock53
//  935 
//  936 /*********************************************************************
//  937  * @fn      zclClosures_ProcessInDoorLockGetPINCode
//  938  *
//  939  * @brief   Process in the received Get PIN Code cmd
//  940  *
//  941  * @param   pInMsg - pointer to the incoming message
//  942  * @param   pCBs - pointer to the application callbacks
//  943  *
//  944  * @return  ZStatus_t
//  945  */
//  946 static ZStatus_t zclClosures_ProcessInDoorLockGetPINCode( zclIncoming_t *pInMsg,
//  947                                                           zclClosures_DoorLockAppCallbacks_t *pCBs )
//  948 {
//  949  if ( pCBs->pfnDoorLockGetPINCode )
//  950  {
//  951    zclDoorLockUserID_t cmd;
//  952 
//  953    cmd.userID = BUILD_UINT16( pInMsg->pData[0], pInMsg->pData[1] );
//  954 
//  955    return ( pCBs->pfnDoorLockGetPINCode( pInMsg, &cmd ) );
//  956  }
//  957 
//  958  return ( ZFailure );
//  959 }
//  960 
//  961 /*********************************************************************
//  962  * @fn      zclClosures_ProcessInDoorLockClearPINCode
//  963  *
//  964  * @brief   Process in the received Clear PIN Code cmd
//  965  *
//  966  * @param   pInMsg - pointer to the incoming message
//  967  * @param   pCBs - pointer to the application callbacks
//  968  *
//  969  * @return  ZStatus_t
//  970  */
//  971 static ZStatus_t zclClosures_ProcessInDoorLockClearPINCode( zclIncoming_t *pInMsg,
//  972                                                             zclClosures_DoorLockAppCallbacks_t *pCBs )
//  973 {
//  974  if ( pCBs->pfnDoorLockClearPINCode )
//  975  {
//  976    zclDoorLockUserID_t cmd;
//  977 
//  978    cmd.userID = BUILD_UINT16( pInMsg->pData[0], pInMsg->pData[1] );
//  979 
//  980    return ( pCBs->pfnDoorLockClearPINCode( pInMsg, &cmd ) );
//  981  }
//  982 
//  983  return ( ZFailure );
//  984 }
//  985 
//  986 /*********************************************************************
//  987  * @fn      zclClosures_ProcessInDoorLockClearAllPINCodes
//  988  *
//  989  * @brief   Process in the received Clear All PIN Codes cmd
//  990  *
//  991  * @param   pInMsg - pointer to the incoming message
//  992  * @param   pCBs - pointer to the application callbacks
//  993  *
//  994  * @return  ZStatus_t
//  995  */
//  996 static ZStatus_t zclClosures_ProcessInDoorLockClearAllPINCodes( zclIncoming_t *pInMsg,
//  997                                                                 zclClosures_DoorLockAppCallbacks_t *pCBs )
//  998 {
//  999  if ( pCBs->pfnDoorLockClearAllPINCodes )
// 1000  {
// 1001    // no payload
// 1002 
// 1003    return ( pCBs->pfnDoorLockClearAllPINCodes( pInMsg ) );
// 1004  }
// 1005 
// 1006  return ( ZFailure );
// 1007 }
// 1008 
// 1009 /*********************************************************************
// 1010  * @fn      zclClosures_ProcessInDoorLockSetUserStatus
// 1011  *
// 1012  * @brief   Process in the received Set User Status cmd
// 1013  *
// 1014  * @param   pInMsg - pointer to the incoming message
// 1015  * @param   pCBs - pointer to the application callbacks
// 1016  *
// 1017  * @return  ZStatus_t
// 1018  */
// 1019 static ZStatus_t zclClosures_ProcessInDoorLockSetUserStatus( zclIncoming_t *pInMsg,
// 1020                                                              zclClosures_DoorLockAppCallbacks_t *pCBs )
// 1021 {
// 1022  if ( pCBs->pfnDoorLockSetUserStatus )
// 1023  {
// 1024    zclDoorLockSetUserStatus_t cmd;
// 1025 
// 1026    cmd.userID = BUILD_UINT16( pInMsg->pData[0], pInMsg->pData[1] );
// 1027    cmd.userStatus = pInMsg->pData[2];
// 1028 
// 1029    return ( pCBs->pfnDoorLockSetUserStatus( pInMsg, &cmd ) );
// 1030  }
// 1031 
// 1032  return ( ZFailure );
// 1033 }
// 1034 
// 1035 /*********************************************************************
// 1036  * @fn      zclClosures_ProcessInDoorLockGetUserStatus
// 1037  *
// 1038  * @brief   Process in the received Get User Status cmd
// 1039  *
// 1040  * @param   pInMsg - pointer to the incoming message
// 1041  * @param   pCBs - pointer to the application callbacks
// 1042  *
// 1043  * @return  ZStatus_t
// 1044  */
// 1045 static ZStatus_t zclClosures_ProcessInDoorLockGetUserStatus( zclIncoming_t *pInMsg,
// 1046                                                              zclClosures_DoorLockAppCallbacks_t *pCBs )
// 1047 {
// 1048  if ( pCBs->pfnDoorLockGetUserStatus )
// 1049  {
// 1050    zclDoorLockUserID_t cmd;
// 1051 
// 1052    cmd.userID = BUILD_UINT16( pInMsg->pData[0], pInMsg->pData[1] );
// 1053 
// 1054    return ( pCBs->pfnDoorLockGetUserStatus( pInMsg, &cmd ) );
// 1055  }
// 1056 
// 1057  return ( ZFailure );
// 1058 }
// 1059 
// 1060 /*********************************************************************
// 1061  * @fn      zclClosures_ProcessInDoorLockSetWeekDaySchedule
// 1062  *
// 1063  * @brief   Process in the received Set Week Day Schedule cmd
// 1064  *
// 1065  * @param   pInMsg - pointer to the incoming message
// 1066  * @param   pCBs - pointer to the application callbacks
// 1067  *
// 1068  * @return  ZStatus_t
// 1069  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1070 static ZStatus_t zclClosures_ProcessInDoorLockSetWeekDaySchedule( zclIncoming_t *pInMsg,
zclClosures_ProcessInDoorLockSetWeekDaySchedule:
          CFI Block cfiBlock54 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockSetWeekDaySchedule
        CODE
// 1071                                                                   zclClosures_DoorLockAppCallbacks_t *pCBs )
// 1072 {
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        MOV       A,#-0xc
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 8
        MOV       A,#-0x8
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 20)
// 1073  if ( pCBs->pfnDoorLockSetWeekDaySchedule )
        MOV       A,R4
        ADD       A,#0x14
        LCALL     ?Subroutine25 & 0xFFFF
??CrossCallReturnLabel_281:
        JZ        ??zclClosures_ProcessInDoorLockSetWeekDaySchedu_1
// 1074  {
// 1075    zclDoorLockSetWeekDaySchedule_t cmd;
// 1076 
// 1077    cmd.scheduleID = pInMsg->pData[0];
        LCALL     ?Subroutine21 & 0xFFFF
// 1078    cmd.userID = BUILD_UINT16( pInMsg->pData[1], pInMsg->pData[2] );
??CrossCallReturnLabel_55:
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine64 & 0xFFFF
// 1079    cmd.daysMask = pInMsg->pData[3];
??CrossCallReturnLabel_150:
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x3
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
// 1080    cmd.startHour = pInMsg->pData[4];
        LCALL     ?Subroutine45 & 0xFFFF
??CrossCallReturnLabel_110:
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        LCALL     ?Subroutine41 & 0xFFFF
// 1081    cmd.startMinute = pInMsg->pData[5];
??CrossCallReturnLabel_98:
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        LCALL     ?Subroutine42 & 0xFFFF
// 1082    cmd.endHour = pInMsg->pData[6];
??CrossCallReturnLabel_100:
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x6
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        LCALL     ?Subroutine71 & 0xFFFF
// 1083    cmd.endMinute = pInMsg->pData[7];
??CrossCallReturnLabel_164:
        ADD       A,#0x7
        MOV       DPL,A
        CLR       A
        ADDC      A,R4
        MOV       DPH,A
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x7
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
// 1084 
// 1085    return ( pCBs->pfnDoorLockSetWeekDaySchedule( pInMsg, &cmd ) );
        ; Setup parameters for indirect call
        MOV       R4,?XSP + 0
        MOV       R5,?XSP + 1
        MOV       DPL,R0
        MOV       DPH,R1
        LCALL     ??Subroutine152_0 & 0xFFFF
// 1086  }
??CrossCallReturnLabel_364:
        LCALL     ?CALL_IND
        SJMP      ??zclClosures_ProcessInDoorLockSetWeekDaySchedu_2
// 1087 
// 1088  return ( ZFailure );
??zclClosures_ProcessInDoorLockSetWeekDaySchedu_1:
        MOV       R1,#0x1
??zclClosures_ProcessInDoorLockSetWeekDaySchedu_2:
          CFI EndBlock cfiBlock54
        REQUIRE ?Subroutine8
        ; // Fall through to label ?Subroutine8
// 1089 }

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine8:
          CFI Block cfiBlock55 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 20)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV       A,#0x8
        LJMP      ??Subroutine163_0 & 0xFFFF
          CFI EndBlock cfiBlock55

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine25:
          CFI Block cfiCond56 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockCmds
          CFI Conditional ??CrossCallReturnLabel_277
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond57 Using cfiCommon0
          CFI (cfiCond57) Function zclClosures_ProcessInDoorLockCmds
          CFI (cfiCond57) Conditional ??CrossCallReturnLabel_278
          CFI (cfiCond57) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond57) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond57) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond57) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond57) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond57) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond57) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond57) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond57) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond57) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond57) CFA_SP SP+-2
          CFI (cfiCond57) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond58 Using cfiCommon0
          CFI (cfiCond58) Function zclClosures_ProcessInDoorLockCmds
          CFI (cfiCond58) Conditional ??CrossCallReturnLabel_279
          CFI (cfiCond58) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond58) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond58) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond58) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond58) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond58) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond58) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond58) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond58) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond58) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond58) CFA_SP SP+-2
          CFI (cfiCond58) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond59 Using cfiCommon0
          CFI (cfiCond59) Function zclClosures_ProcessInDoorLockCmds
          CFI (cfiCond59) Conditional ??CrossCallReturnLabel_280
          CFI (cfiCond59) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond59) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond59) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond59) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond59) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond59) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond59) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond59) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond59) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond59) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond59) CFA_SP SP+-2
          CFI (cfiCond59) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond60 Using cfiCommon0
          CFI (cfiCond60) Function zclClosures_ProcessInDoorLockSetWeekDaySchedule
          CFI (cfiCond60) Conditional ??CrossCallReturnLabel_281
          CFI (cfiCond60) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond60) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond60) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond60) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond60) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond60) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond60) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond60) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond60) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond60) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond60) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond60) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond60) CFA_SP SP+-2
          CFI (cfiCond60) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond61 Using cfiCommon0
          CFI (cfiCond61) Function zclClosures_ProcessInDoorLockGetWeekDayScheduleRsp
          CFI (cfiCond61) Conditional ??CrossCallReturnLabel_282
          CFI (cfiCond61) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond61) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond61) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond61) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond61) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond61) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond61) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond61) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond61) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond61) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond61) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond61) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond61) CFA_SP SP+-2
          CFI (cfiCond61) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker62 Using cfiCommon1
          CFI (cfiPicker62) NoFunction
          CFI (cfiPicker62) Picker
        MOV       R0,A
        CLR       A
        ADDC      A,R5
        MOV       R1,A
        MOV       DPL,R0
        MOV       DPH,R1
          CFI EndBlock cfiCond56
          CFI EndBlock cfiCond57
          CFI EndBlock cfiCond58
          CFI EndBlock cfiCond59
          CFI EndBlock cfiCond60
          CFI EndBlock cfiCond61
          CFI EndBlock cfiPicker62
        REQUIRE ??Subroutine128_0
        ; // Fall through to label ??Subroutine128_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine128_0:
          CFI Block cfiCond63 Using cfiCommon0
          CFI Function zclClosures_HdlIncoming
          CFI Conditional ??CrossCallReturnLabel_276
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond64 Using cfiCommon0
          CFI (cfiCond64) Function zclClosures_ProcessInDoorLockCmds
          CFI (cfiCond64) Conditional ??CrossCallReturnLabel_277
          CFI (cfiCond64) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond64) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond64) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond64) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond64) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond64) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond64) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond64) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond64) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond64) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond64) CFA_SP SP+-2
          CFI (cfiCond64) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond65 Using cfiCommon0
          CFI (cfiCond65) Function zclClosures_ProcessInDoorLockCmds
          CFI (cfiCond65) Conditional ??CrossCallReturnLabel_278
          CFI (cfiCond65) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond65) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond65) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond65) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond65) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond65) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond65) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond65) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond65) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond65) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond65) CFA_SP SP+-2
          CFI (cfiCond65) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond66 Using cfiCommon0
          CFI (cfiCond66) Function zclClosures_ProcessInDoorLockCmds
          CFI (cfiCond66) Conditional ??CrossCallReturnLabel_279
          CFI (cfiCond66) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond66) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond66) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond66) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond66) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond66) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond66) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond66) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond66) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond66) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond66) CFA_SP SP+-2
          CFI (cfiCond66) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond67 Using cfiCommon0
          CFI (cfiCond67) Function zclClosures_ProcessInDoorLockCmds
          CFI (cfiCond67) Conditional ??CrossCallReturnLabel_280
          CFI (cfiCond67) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond67) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond67) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond67) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond67) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond67) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond67) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond67) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond67) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond67) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond67) CFA_SP SP+-2
          CFI (cfiCond67) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond68 Using cfiCommon0
          CFI (cfiCond68) Function zclClosures_ProcessInDoorLockSetWeekDaySchedule
          CFI (cfiCond68) Conditional ??CrossCallReturnLabel_281
          CFI (cfiCond68) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond68) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond68) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond68) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond68) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond68) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond68) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond68) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond68) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond68) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond68) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond68) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond68) CFA_SP SP+-2
          CFI (cfiCond68) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond69 Using cfiCommon0
          CFI (cfiCond69) Function zclClosures_ProcessInDoorLockGetWeekDayScheduleRsp
          CFI (cfiCond69) Conditional ??CrossCallReturnLabel_282
          CFI (cfiCond69) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond69) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond69) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond69) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond69) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond69) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond69) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond69) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond69) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond69) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond69) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond69) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond69) CFA_SP SP+-2
          CFI (cfiCond69) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker70 Using cfiCommon1
          CFI (cfiPicker70) NoFunction
          CFI (cfiPicker70) Picker
        LCALL     ?Subroutine99 & 0xFFFF
??CrossCallReturnLabel_353:
        MOV       R5,A
        MOV       A,R4
        ORL       A,R5
        RET
          CFI EndBlock cfiCond63
          CFI EndBlock cfiCond64
          CFI EndBlock cfiCond65
          CFI EndBlock cfiCond66
          CFI EndBlock cfiCond67
          CFI EndBlock cfiCond68
          CFI EndBlock cfiCond69
          CFI EndBlock cfiPicker70
// 1090 
// 1091 /*********************************************************************
// 1092  * @fn      zclClosures_ProcessInDoorLockGetWeekDaySchedule
// 1093  *
// 1094  * @brief   Process in the received Get Week Day Schedule cmd
// 1095  *
// 1096  * @param   pInMsg - pointer to the incoming message
// 1097  * @param   pCBs - pointer to the application callbacks
// 1098  *
// 1099  * @return  ZStatus_t
// 1100  */
// 1101 static ZStatus_t zclClosures_ProcessInDoorLockGetWeekDaySchedule( zclIncoming_t *pInMsg,
// 1102                                                                   zclClosures_DoorLockAppCallbacks_t *pCBs )
// 1103 {
// 1104  if ( pCBs->pfnDoorLockGetWeekDaySchedule )
// 1105  {
// 1106    zclDoorLockSchedule_t cmd;
// 1107 
// 1108    cmd.scheduleID = pInMsg->pData[0];
// 1109    cmd.userID = BUILD_UINT16( pInMsg->pData[1], pInMsg->pData[2] );
// 1110 
// 1111    return ( pCBs->pfnDoorLockGetWeekDaySchedule( pInMsg, &cmd ) );
// 1112  }
// 1113 
// 1114  return ( ZFailure );
// 1115 }
// 1116 
// 1117 /*********************************************************************
// 1118  * @fn      zclClosures_ProcessInDoorLockClearWeekDaySchedule
// 1119  *
// 1120  * @brief   Process in the received Clear Week Day Schedule cmd
// 1121  *
// 1122  * @param   pInMsg - pointer to the incoming message
// 1123  * @param   pCBs - pointer to the application callbacks
// 1124  *
// 1125  * @return  ZStatus_t
// 1126  */
// 1127 static ZStatus_t zclClosures_ProcessInDoorLockClearWeekDaySchedule( zclIncoming_t *pInMsg,
// 1128                                                                     zclClosures_DoorLockAppCallbacks_t *pCBs )
// 1129 {
// 1130  if ( pCBs->pfnDoorLockClearWeekDaySchedule )
// 1131  {
// 1132    zclDoorLockSchedule_t cmd;
// 1133 
// 1134    cmd.scheduleID = pInMsg->pData[0];
// 1135    cmd.userID = BUILD_UINT16( pInMsg->pData[1], pInMsg->pData[2] );
// 1136 
// 1137    return ( pCBs->pfnDoorLockClearWeekDaySchedule( pInMsg, &cmd ) );
// 1138  }
// 1139 
// 1140  return ( ZFailure );
// 1141 }
// 1142 /*********************************************************************
// 1143  * @fn      zclClosures_ProcessInDoorLockSetYearDaySchedule
// 1144  *
// 1145  * @brief   Process in the received Set Year Day Schedule cmd
// 1146  *
// 1147  * @param   pInMsg - pointer to the incoming message
// 1148  * @param   pCBs - pointer to the application callbacks
// 1149  *
// 1150  * @return  ZStatus_t
// 1151  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1152 static ZStatus_t zclClosures_ProcessInDoorLockSetYearDaySchedule( zclIncoming_t *pInMsg,
zclClosures_ProcessInDoorLockSetYearDaySchedule:
          CFI Block cfiBlock71 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockSetYearDaySchedule
        CODE
// 1153                                                                   zclClosures_DoorLockAppCallbacks_t *pCBs )
// 1154 {
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        MOV       A,#-0x10
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 11
        MOV       A,#-0xb
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 27)
// 1155  if ( pCBs->pfnDoorLockSetYearDaySchedule )
        MOV       A,R4
        ADD       A,#0x1a
        LCALL     ?Subroutine84 & 0xFFFF
??CrossCallReturnLabel_197:
        LCALL     ??Subroutine144_0 & 0xFFFF
??CrossCallReturnLabel_320:
        JNZ       $+5
        LJMP      ??zclClosures_ProcessInDoorLockSetYearDaySchedu_1 & 0xFFFF
// 1156  {
// 1157    zclDoorLockSetYearDaySchedule_t cmd;
// 1158 
// 1159    cmd.scheduleID = pInMsg->pData[0];
        LCALL     ?Subroutine22 & 0xFFFF
// 1160    cmd.userID = BUILD_UINT16( pInMsg->pData[1], pInMsg->pData[2] );
??CrossCallReturnLabel_57:
        MOV       DPL,R4
        MOV       DPH,R5
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R1,A
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP0_8
        MOV       A,?V0
        LCALL     ??Subroutine129_0 & 0xFFFF
// 1161    cmd.zigBeeLocalStartTime = BUILD_UINT32( pInMsg->pData[3], pInMsg->pData[4], pInMsg->pData[5], pInMsg->pData[6] );
??CrossCallReturnLabel_285:
        MOV       DPL,R4
        MOV       DPH,R5
        LCALL     ??Subroutine150_0 & 0xFFFF
??CrossCallReturnLabel_356:
        LCALL     ??Subroutine133_0 & 0xFFFF
??CrossCallReturnLabel_296:
        LCALL     ?L_SHL
        MOV       R0,#?V0
        MOV       R1,#?V4
        LCALL     ?L_ADD
        MOV       DPL,R4
        MOV       DPH,R5
        LCALL     ??Subroutine139_0 & 0xFFFF
??CrossCallReturnLabel_303:
        LCALL     ?L_SHL
        MOV       R0,#?V0
        MOV       R1,#?V4
        LCALL     ?L_ADD
        MOV       DPL,R4
        MOV       DPH,R5
        LCALL     ??Subroutine156_0 & 0xFFFF
??CrossCallReturnLabel_388:
        LCALL     ?L_SHL
        MOV       R0,#?V0
        MOV       R1,#?V4
        LCALL     ?L_ADD
        MOV       A,#0x3
        LCALL     ?XSTACK_DISP0_8
        MOV       R0,#?V0
        LCALL     ?L_MOV_TO_X
// 1162    cmd.zigBeeLocalEndTime = BUILD_UINT32( pInMsg->pData[7], pInMsg->pData[8], pInMsg->pData[9], pInMsg->pData[10] );
        MOV       DPL,R4
        MOV       DPH,R5
        LCALL     ?Subroutine31 & 0xFFFF
??CrossCallReturnLabel_360:
        LCALL     ?Subroutine30 & 0xFFFF
??CrossCallReturnLabel_291:
        LCALL     ?L_SHL
        MOV       R0,#?V0
        MOV       R1,#?V4
        LCALL     ?L_ADD
        MOV       DPL,R4
        MOV       DPH,R5
        LCALL     ?Subroutine13 & 0xFFFF
??CrossCallReturnLabel_308:
        LCALL     ?L_SHL
        MOV       R0,#?V0
        MOV       R1,#?V4
        LCALL     ?L_ADD
        MOV       DPL,R4
        MOV       DPH,R5
        LCALL     ?Subroutine14 & 0xFFFF
??CrossCallReturnLabel_393:
        LCALL     ?L_SHL
        MOV       R0,#?V0
        MOV       R1,#?V4
        LCALL     ?L_ADD
        MOV       A,#0x7
        LCALL     ?XSTACK_DISP0_8
        MOV       R0,#?V0
        LCALL     ?L_MOV_TO_X
// 1163 
// 1164    return ( pCBs->pfnDoorLockSetYearDaySchedule( pInMsg, &cmd ) );
        ; Setup parameters for indirect call
        MOV       R4,?XSP + 0
        MOV       R5,?XSP + 1
        MOV       DPL,R6
        MOV       DPH,R7
        LCALL     ??Subroutine152_0 & 0xFFFF
// 1165  }
??CrossCallReturnLabel_365:
        LCALL     ?CALL_IND
        SJMP      ??zclClosures_ProcessInDoorLockSetYearDaySchedu_2
// 1166 
// 1167  return ( ZFailure );
??zclClosures_ProcessInDoorLockSetYearDaySchedu_1:
        MOV       R1,#0x1
??zclClosures_ProcessInDoorLockSetYearDaySchedu_2:
          CFI EndBlock cfiBlock71
        REQUIRE ?Subroutine7
        ; // Fall through to label ?Subroutine7
// 1168 }

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine7:
          CFI Block cfiBlock72 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 27)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV       A,#0xb
        LJMP      ??Subroutine127_0 & 0xFFFF
          CFI EndBlock cfiBlock72

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine77:
          CFI Block cfiCond73 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockUnlockWithTimeout
          CFI Conditional ??CrossCallReturnLabel_287
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond74 Using cfiCommon0
          CFI (cfiCond74) Function zclClosures_ProcessInDoorLockGetLogRecordRsp
          CFI (cfiCond74) Conditional ??CrossCallReturnLabel_288
          CFI (cfiCond74) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond74) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond74) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond74) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond74) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond74) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond74) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond74) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond74) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond74) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond74) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond74) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond74) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond74) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond74) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond74) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond74) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond74) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond74) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond74) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond74) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond74) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond74) CFA_SP SP+-2
          CFI (cfiCond74) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker75 Using cfiCommon1
          CFI (cfiPicker75) NoFunction
          CFI (cfiPicker75) Picker
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
          CFI EndBlock cfiCond73
          CFI EndBlock cfiCond74
          CFI EndBlock cfiPicker75
        REQUIRE ??Subroutine129_0
        ; // Fall through to label ??Subroutine129_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine129_0:
          CFI Block cfiCond76 Using cfiCommon0
          CFI Function zclClosures_RegisterDoorLockCmdCallbacks
          CFI Conditional ??CrossCallReturnLabel_283
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond77 Using cfiCommon0
          CFI (cfiCond77) Function zclClosures_ProcessInDoorLockCmds
          CFI (cfiCond77) Conditional ??CrossCallReturnLabel_284
          CFI (cfiCond77) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond77) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond77) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond77) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond77) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond77) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond77) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond77) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond77) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond77) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond77) CFA_SP SP+-2
          CFI (cfiCond77) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond78 Using cfiCommon0
          CFI (cfiCond78) Function zclClosures_ProcessInDoorLockSetYearDaySchedule
          CFI (cfiCond78) Conditional ??CrossCallReturnLabel_285
          CFI (cfiCond78) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond78) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond78) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond78) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond78) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond78) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond78) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond78) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond78) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond78) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond78) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond78) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond78) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond78) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond78) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond78) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond78) CFA_SP SP+-2
          CFI (cfiCond78) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond79 Using cfiCommon0
          CFI (cfiCond79) Function zclClosures_ProcessInDoorLockGetLogRecordRsp
          CFI (cfiCond79) Conditional ??CrossCallReturnLabel_286
          CFI (cfiCond79) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond79) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond79) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond79) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond79) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond79) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond79) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond79) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond79) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond79) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond79) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond79) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond79) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond79) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond79) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond79) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond79) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond79) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond79) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond79) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond79) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond79) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond79) CFA_SP SP+-2
          CFI (cfiCond79) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond80 Using cfiCommon0
          CFI (cfiCond80) Function zclClosures_ProcessInDoorLockUnlockWithTimeout
          CFI (cfiCond80) Conditional ??CrossCallReturnLabel_287
          CFI (cfiCond80) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond80) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond80) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond80) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond80) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond80) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond80) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond80) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond80) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond80) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond80) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond80) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond80) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond80) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond80) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond80) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond80) CFA_SP SP+-2
          CFI (cfiCond80) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond81 Using cfiCommon0
          CFI (cfiCond81) Function zclClosures_ProcessInDoorLockGetLogRecordRsp
          CFI (cfiCond81) Conditional ??CrossCallReturnLabel_288
          CFI (cfiCond81) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond81) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond81) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond81) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond81) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond81) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond81) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond81) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond81) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond81) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond81) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond81) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond81) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond81) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond81) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond81) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond81) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond81) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond81) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond81) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond81) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond81) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond81) CFA_SP SP+-2
          CFI (cfiCond81) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker82 Using cfiCommon1
          CFI (cfiPicker82) NoFunction
          CFI (cfiPicker82) Picker
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,R1
        MOVX      @DPTR,A
        RET
          CFI EndBlock cfiCond76
          CFI EndBlock cfiCond77
          CFI EndBlock cfiCond78
          CFI EndBlock cfiCond79
          CFI EndBlock cfiCond80
          CFI EndBlock cfiCond81
          CFI EndBlock cfiPicker82

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine30:
          CFI Block cfiCond83 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockSetYearDaySchedule
          CFI Conditional ??CrossCallReturnLabel_291
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond84 Using cfiCommon0
          CFI (cfiCond84) Function zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
          CFI (cfiCond84) Conditional ??CrossCallReturnLabel_292
          CFI (cfiCond84) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond84) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond84) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond84) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond84) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond84) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond84) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond84) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond84) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond84) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond84) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond84) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond84) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond84) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond84) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond84) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond84) CFA_SP SP+-2
          CFI (cfiCond84) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiPicker85 Using cfiCommon1
          CFI (cfiPicker85) NoFunction
          CFI (cfiPicker85) Picker
        INC       DPTR
          CFI EndBlock cfiCond83
          CFI EndBlock cfiCond84
          CFI EndBlock cfiPicker85
        REQUIRE ??Subroutine130_0
        ; // Fall through to label ??Subroutine130_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine130_0:
          CFI Block cfiCond86 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockGetHolidayScheduleRsp
          CFI Conditional ??CrossCallReturnLabel_290
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond87 Using cfiCommon0
          CFI (cfiCond87) Function zclClosures_ProcessInDoorLockSetYearDaySchedule
          CFI (cfiCond87) Conditional ??CrossCallReturnLabel_291
          CFI (cfiCond87) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond87) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond87) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond87) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond87) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond87) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond87) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond87) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond87) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond87) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond87) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond87) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond87) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond87) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond87) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond87) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond87) CFA_SP SP+-2
          CFI (cfiCond87) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond88 Using cfiCommon0
          CFI (cfiCond88) Function zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
          CFI (cfiCond88) Conditional ??CrossCallReturnLabel_292
          CFI (cfiCond88) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond88) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond88) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond88) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond88) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond88) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond88) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond88) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond88) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond88) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond88) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond88) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond88) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond88) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond88) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond88) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond88) CFA_SP SP+-2
          CFI (cfiCond88) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiPicker89 Using cfiCommon1
          CFI (cfiPicker89) NoFunction
          CFI (cfiPicker89) Picker
        INC       DPTR
          CFI EndBlock cfiCond86
          CFI EndBlock cfiCond87
          CFI EndBlock cfiCond88
          CFI EndBlock cfiPicker89
        REQUIRE ??Subroutine131_0
        ; // Fall through to label ??Subroutine131_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine131_0:
          CFI Block cfiCond90 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockSetHolidaySchedule
          CFI Conditional ??CrossCallReturnLabel_289
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond91 Using cfiCommon0
          CFI (cfiCond91) Function zclClosures_ProcessInDoorLockGetHolidayScheduleRsp
          CFI (cfiCond91) Conditional ??CrossCallReturnLabel_290
          CFI (cfiCond91) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond91) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond91) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond91) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond91) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond91) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond91) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond91) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond91) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond91) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond91) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond91) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond91) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond91) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond91) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond91) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond91) CFA_SP SP+-2
          CFI (cfiCond91) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond92 Using cfiCommon0
          CFI (cfiCond92) Function zclClosures_ProcessInDoorLockSetYearDaySchedule
          CFI (cfiCond92) Conditional ??CrossCallReturnLabel_291
          CFI (cfiCond92) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond92) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond92) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond92) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond92) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond92) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond92) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond92) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond92) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond92) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond92) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond92) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond92) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond92) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond92) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond92) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond92) CFA_SP SP+-2
          CFI (cfiCond92) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond93 Using cfiCommon0
          CFI (cfiCond93) Function zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
          CFI (cfiCond93) Conditional ??CrossCallReturnLabel_292
          CFI (cfiCond93) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond93) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond93) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond93) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond93) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond93) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond93) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond93) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond93) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond93) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond93) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond93) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond93) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond93) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond93) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond93) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond93) CFA_SP SP+-2
          CFI (cfiCond93) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiPicker94 Using cfiCommon1
          CFI (cfiPicker94) NoFunction
          CFI (cfiPicker94) Picker
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        MOV       ?V4,A
        CLR       A
        MOV       ?V7,A
        MOV       A,#0x8
        MOV       R0,#?V4
        RET
          CFI EndBlock cfiCond90
          CFI EndBlock cfiCond91
          CFI EndBlock cfiCond92
          CFI EndBlock cfiCond93
          CFI EndBlock cfiPicker94

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine15:
          CFI Block cfiCond95 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockOperationEventNotification
          CFI Conditional ??CrossCallReturnLabel_298
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond96 Using cfiCommon0
          CFI (cfiCond96) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond96) Conditional ??CrossCallReturnLabel_299
          CFI (cfiCond96) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond96) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond96) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond96) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond96) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond96) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond96) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond96) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond96) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond96) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond96) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond96) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond96) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond96) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond96) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond96) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond96) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond96) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond96) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond96) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond96) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond96) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond96) CFA_SP SP+-2
          CFI (cfiCond96) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker97 Using cfiCommon1
          CFI (cfiPicker97) NoFunction
          CFI (cfiPicker97) Picker
        INC       DPTR
          CFI EndBlock cfiCond95
          CFI EndBlock cfiCond96
          CFI EndBlock cfiPicker97
        REQUIRE ??Subroutine132_0
        ; // Fall through to label ??Subroutine132_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine132_0:
          CFI Block cfiCond98 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
          CFI Conditional ??CrossCallReturnLabel_297
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond99 Using cfiCommon0
          CFI (cfiCond99) Function zclClosures_ProcessInDoorLockOperationEventNotification
          CFI (cfiCond99) Conditional ??CrossCallReturnLabel_298
          CFI (cfiCond99) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond99) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond99) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond99) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond99) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond99) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond99) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond99) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond99) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond99) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond99) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond99) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond99) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond99) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond99) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond99) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond99) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond99) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond99) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond99) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond99) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond99) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond99) CFA_SP SP+-2
          CFI (cfiCond99) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond100 Using cfiCommon0
          CFI (cfiCond100) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond100) Conditional ??CrossCallReturnLabel_299
          CFI (cfiCond100) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond100) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond100) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond100) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond100) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond100) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond100) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond100) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond100) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond100) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond100) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond100) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond100) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond100) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond100) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond100) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond100) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond100) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond100) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond100) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond100) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond100) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond100) CFA_SP SP+-2
          CFI (cfiCond100) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker101 Using cfiCommon1
          CFI (cfiPicker101) NoFunction
          CFI (cfiPicker101) Picker
        INC       DPTR
          CFI EndBlock cfiCond98
          CFI EndBlock cfiCond99
          CFI EndBlock cfiCond100
          CFI EndBlock cfiPicker101
        REQUIRE ??Subroutine133_0
        ; // Fall through to label ??Subroutine133_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine133_0:
          CFI Block cfiCond102 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockSetYearDaySchedule
          CFI Conditional ??CrossCallReturnLabel_296
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond103 Using cfiCommon0
          CFI (cfiCond103) Function zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
          CFI (cfiCond103) Conditional ??CrossCallReturnLabel_297
          CFI (cfiCond103) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond103) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond103) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond103) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond103) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond103) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond103) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond103) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond103) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond103) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond103) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond103) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond103) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond103) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond103) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond103) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond103) CFA_SP SP+-2
          CFI (cfiCond103) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond104 Using cfiCommon0
          CFI (cfiCond104) Function zclClosures_ProcessInDoorLockOperationEventNotification
          CFI (cfiCond104) Conditional ??CrossCallReturnLabel_298
          CFI (cfiCond104) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond104) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond104) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond104) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond104) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond104) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond104) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond104) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond104) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond104) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond104) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond104) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond104) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond104) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond104) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond104) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond104) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond104) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond104) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond104) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond104) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond104) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond104) CFA_SP SP+-2
          CFI (cfiCond104) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond105 Using cfiCommon0
          CFI (cfiCond105) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond105) Conditional ??CrossCallReturnLabel_299
          CFI (cfiCond105) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond105) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond105) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond105) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond105) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond105) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond105) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond105) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond105) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond105) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond105) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond105) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond105) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond105) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond105) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond105) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond105) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond105) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond105) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond105) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond105) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond105) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond105) CFA_SP SP+-2
          CFI (cfiCond105) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker106 Using cfiCommon1
          CFI (cfiPicker106) NoFunction
          CFI (cfiPicker106) Picker
        INC       DPTR
          CFI EndBlock cfiCond102
          CFI EndBlock cfiCond103
          CFI EndBlock cfiCond104
          CFI EndBlock cfiCond105
          CFI EndBlock cfiPicker106
        REQUIRE ??Subroutine134_0
        ; // Fall through to label ??Subroutine134_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine134_0:
          CFI Block cfiCond107 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockGetLogRecordRsp
          CFI Conditional ??CrossCallReturnLabel_294
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond108 Using cfiCommon0
          CFI (cfiCond108) Function zclClosures_ProcessInDoorLockGetHolidayScheduleRsp
          CFI (cfiCond108) Conditional ??CrossCallReturnLabel_295
          CFI (cfiCond108) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond108) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond108) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond108) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond108) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond108) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond108) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond108) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond108) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond108) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond108) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond108) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond108) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond108) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond108) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond108) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond108) CFA_SP SP+-2
          CFI (cfiCond108) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond109 Using cfiCommon0
          CFI (cfiCond109) Function zclClosures_ProcessInDoorLockSetYearDaySchedule
          CFI (cfiCond109) Conditional ??CrossCallReturnLabel_296
          CFI (cfiCond109) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond109) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond109) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond109) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond109) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond109) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond109) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond109) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond109) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond109) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond109) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond109) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond109) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond109) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond109) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond109) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond109) CFA_SP SP+-2
          CFI (cfiCond109) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond110 Using cfiCommon0
          CFI (cfiCond110) Function zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
          CFI (cfiCond110) Conditional ??CrossCallReturnLabel_297
          CFI (cfiCond110) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond110) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond110) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond110) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond110) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond110) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond110) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond110) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond110) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond110) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond110) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond110) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond110) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond110) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond110) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond110) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond110) CFA_SP SP+-2
          CFI (cfiCond110) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond111 Using cfiCommon0
          CFI (cfiCond111) Function zclClosures_ProcessInDoorLockOperationEventNotification
          CFI (cfiCond111) Conditional ??CrossCallReturnLabel_298
          CFI (cfiCond111) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond111) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond111) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond111) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond111) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond111) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond111) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond111) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond111) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond111) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond111) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond111) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond111) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond111) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond111) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond111) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond111) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond111) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond111) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond111) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond111) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond111) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond111) CFA_SP SP+-2
          CFI (cfiCond111) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond112 Using cfiCommon0
          CFI (cfiCond112) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond112) Conditional ??CrossCallReturnLabel_299
          CFI (cfiCond112) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond112) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond112) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond112) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond112) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond112) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond112) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond112) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond112) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond112) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond112) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond112) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond112) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond112) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond112) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond112) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond112) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond112) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond112) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond112) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond112) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond112) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond112) CFA_SP SP+-2
          CFI (cfiCond112) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker113 Using cfiCommon1
          CFI (cfiPicker113) NoFunction
          CFI (cfiPicker113) Picker
        INC       DPTR
          CFI EndBlock cfiCond107
          CFI EndBlock cfiCond108
          CFI EndBlock cfiCond109
          CFI EndBlock cfiCond110
          CFI EndBlock cfiCond111
          CFI EndBlock cfiCond112
          CFI EndBlock cfiPicker113
        REQUIRE ??Subroutine135_0
        ; // Fall through to label ??Subroutine135_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine135_0:
          CFI Block cfiCond114 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockSetHolidaySchedule
          CFI Conditional ??CrossCallReturnLabel_293
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond115 Using cfiCommon0
          CFI (cfiCond115) Function zclClosures_ProcessInDoorLockGetLogRecordRsp
          CFI (cfiCond115) Conditional ??CrossCallReturnLabel_294
          CFI (cfiCond115) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond115) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond115) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond115) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond115) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond115) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond115) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond115) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond115) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond115) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond115) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond115) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond115) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond115) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond115) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond115) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond115) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond115) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond115) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond115) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond115) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond115) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond115) CFA_SP SP+-2
          CFI (cfiCond115) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond116 Using cfiCommon0
          CFI (cfiCond116) Function zclClosures_ProcessInDoorLockGetHolidayScheduleRsp
          CFI (cfiCond116) Conditional ??CrossCallReturnLabel_295
          CFI (cfiCond116) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond116) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond116) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond116) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond116) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond116) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond116) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond116) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond116) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond116) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond116) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond116) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond116) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond116) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond116) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond116) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond116) CFA_SP SP+-2
          CFI (cfiCond116) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond117 Using cfiCommon0
          CFI (cfiCond117) Function zclClosures_ProcessInDoorLockSetYearDaySchedule
          CFI (cfiCond117) Conditional ??CrossCallReturnLabel_296
          CFI (cfiCond117) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond117) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond117) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond117) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond117) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond117) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond117) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond117) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond117) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond117) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond117) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond117) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond117) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond117) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond117) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond117) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond117) CFA_SP SP+-2
          CFI (cfiCond117) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond118 Using cfiCommon0
          CFI (cfiCond118) Function zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
          CFI (cfiCond118) Conditional ??CrossCallReturnLabel_297
          CFI (cfiCond118) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond118) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond118) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond118) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond118) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond118) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond118) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond118) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond118) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond118) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond118) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond118) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond118) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond118) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond118) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond118) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond118) CFA_SP SP+-2
          CFI (cfiCond118) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond119 Using cfiCommon0
          CFI (cfiCond119) Function zclClosures_ProcessInDoorLockOperationEventNotification
          CFI (cfiCond119) Conditional ??CrossCallReturnLabel_298
          CFI (cfiCond119) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond119) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond119) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond119) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond119) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond119) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond119) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond119) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond119) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond119) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond119) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond119) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond119) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond119) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond119) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond119) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond119) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond119) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond119) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond119) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond119) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond119) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond119) CFA_SP SP+-2
          CFI (cfiCond119) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond120 Using cfiCommon0
          CFI (cfiCond120) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond120) Conditional ??CrossCallReturnLabel_299
          CFI (cfiCond120) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond120) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond120) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond120) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond120) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond120) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond120) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond120) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond120) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond120) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond120) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond120) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond120) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond120) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond120) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond120) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond120) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond120) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond120) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond120) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond120) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond120) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond120) CFA_SP SP+-2
          CFI (cfiCond120) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker121 Using cfiCommon1
          CFI (cfiPicker121) NoFunction
          CFI (cfiPicker121) Picker
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        MOV       ?V4,A
        CLR       A
        MOV       ?V5,A
        MOV       ?V6,A
        MOV       ?V7,A
        MOV       A,#0x8
        MOV       R0,#?V4
        RET
          CFI EndBlock cfiCond114
          CFI EndBlock cfiCond115
          CFI EndBlock cfiCond116
          CFI EndBlock cfiCond117
          CFI EndBlock cfiCond118
          CFI EndBlock cfiCond119
          CFI EndBlock cfiCond120
          CFI EndBlock cfiPicker121

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine13:
          CFI Block cfiCond122 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockSetYearDaySchedule
          CFI Conditional ??CrossCallReturnLabel_308
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond123 Using cfiCommon0
          CFI (cfiCond123) Function zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
          CFI (cfiCond123) Conditional ??CrossCallReturnLabel_309
          CFI (cfiCond123) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond123) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond123) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond123) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond123) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond123) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond123) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond123) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond123) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond123) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond123) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond123) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond123) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond123) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond123) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond123) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond123) CFA_SP SP+-2
          CFI (cfiCond123) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond124 Using cfiCommon0
          CFI (cfiCond124) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond124) Conditional ??CrossCallReturnLabel_310
          CFI (cfiCond124) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond124) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond124) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond124) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond124) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond124) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond124) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond124) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond124) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond124) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond124) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond124) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond124) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond124) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond124) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond124) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond124) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond124) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond124) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond124) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond124) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond124) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond124) CFA_SP SP+-2
          CFI (cfiCond124) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker125 Using cfiCommon1
          CFI (cfiPicker125) NoFunction
          CFI (cfiPicker125) Picker
        INC       DPTR
          CFI EndBlock cfiCond122
          CFI EndBlock cfiCond123
          CFI EndBlock cfiCond124
          CFI EndBlock cfiPicker125
        REQUIRE ??Subroutine136_0
        ; // Fall through to label ??Subroutine136_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine136_0:
          CFI Block cfiCond126 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockGetHolidayScheduleRsp
          CFI Conditional ??CrossCallReturnLabel_307
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond127 Using cfiCommon0
          CFI (cfiCond127) Function zclClosures_ProcessInDoorLockSetYearDaySchedule
          CFI (cfiCond127) Conditional ??CrossCallReturnLabel_308
          CFI (cfiCond127) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond127) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond127) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond127) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond127) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond127) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond127) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond127) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond127) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond127) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond127) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond127) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond127) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond127) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond127) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond127) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond127) CFA_SP SP+-2
          CFI (cfiCond127) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond128 Using cfiCommon0
          CFI (cfiCond128) Function zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
          CFI (cfiCond128) Conditional ??CrossCallReturnLabel_309
          CFI (cfiCond128) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond128) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond128) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond128) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond128) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond128) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond128) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond128) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond128) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond128) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond128) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond128) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond128) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond128) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond128) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond128) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond128) CFA_SP SP+-2
          CFI (cfiCond128) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond129 Using cfiCommon0
          CFI (cfiCond129) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond129) Conditional ??CrossCallReturnLabel_310
          CFI (cfiCond129) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond129) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond129) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond129) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond129) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond129) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond129) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond129) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond129) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond129) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond129) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond129) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond129) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond129) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond129) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond129) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond129) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond129) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond129) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond129) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond129) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond129) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond129) CFA_SP SP+-2
          CFI (cfiCond129) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker130 Using cfiCommon1
          CFI (cfiPicker130) NoFunction
          CFI (cfiPicker130) Picker
        INC       DPTR
          CFI EndBlock cfiCond126
          CFI EndBlock cfiCond127
          CFI EndBlock cfiCond128
          CFI EndBlock cfiCond129
          CFI EndBlock cfiPicker130
        REQUIRE ??Subroutine137_0
        ; // Fall through to label ??Subroutine137_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine137_0:
          CFI Block cfiCond131 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockSetHolidaySchedule
          CFI Conditional ??CrossCallReturnLabel_305
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond132 Using cfiCommon0
          CFI (cfiCond132) Function zclClosures_ProcessInDoorLockOperationEventNotification
          CFI (cfiCond132) Conditional ??CrossCallReturnLabel_306
          CFI (cfiCond132) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond132) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond132) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond132) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond132) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond132) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond132) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond132) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond132) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond132) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond132) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond132) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond132) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond132) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond132) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond132) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond132) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond132) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond132) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond132) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond132) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond132) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond132) CFA_SP SP+-2
          CFI (cfiCond132) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond133 Using cfiCommon0
          CFI (cfiCond133) Function zclClosures_ProcessInDoorLockGetHolidayScheduleRsp
          CFI (cfiCond133) Conditional ??CrossCallReturnLabel_307
          CFI (cfiCond133) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond133) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond133) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond133) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond133) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond133) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond133) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond133) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond133) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond133) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond133) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond133) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond133) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond133) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond133) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond133) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond133) CFA_SP SP+-2
          CFI (cfiCond133) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond134 Using cfiCommon0
          CFI (cfiCond134) Function zclClosures_ProcessInDoorLockSetYearDaySchedule
          CFI (cfiCond134) Conditional ??CrossCallReturnLabel_308
          CFI (cfiCond134) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond134) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond134) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond134) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond134) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond134) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond134) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond134) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond134) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond134) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond134) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond134) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond134) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond134) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond134) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond134) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond134) CFA_SP SP+-2
          CFI (cfiCond134) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond135 Using cfiCommon0
          CFI (cfiCond135) Function zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
          CFI (cfiCond135) Conditional ??CrossCallReturnLabel_309
          CFI (cfiCond135) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond135) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond135) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond135) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond135) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond135) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond135) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond135) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond135) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond135) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond135) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond135) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond135) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond135) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond135) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond135) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond135) CFA_SP SP+-2
          CFI (cfiCond135) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond136 Using cfiCommon0
          CFI (cfiCond136) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond136) Conditional ??CrossCallReturnLabel_310
          CFI (cfiCond136) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond136) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond136) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond136) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond136) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond136) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond136) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond136) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond136) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond136) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond136) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond136) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond136) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond136) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond136) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond136) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond136) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond136) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond136) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond136) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond136) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond136) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond136) CFA_SP SP+-2
          CFI (cfiCond136) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker137 Using cfiCommon1
          CFI (cfiPicker137) NoFunction
          CFI (cfiPicker137) Picker
        INC       DPTR
          CFI EndBlock cfiCond131
          CFI EndBlock cfiCond132
          CFI EndBlock cfiCond133
          CFI EndBlock cfiCond134
          CFI EndBlock cfiCond135
          CFI EndBlock cfiCond136
          CFI EndBlock cfiPicker137
        REQUIRE ??Subroutine138_0
        ; // Fall through to label ??Subroutine138_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine138_0:
          CFI Block cfiCond138 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
          CFI Conditional ??CrossCallReturnLabel_304
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond139 Using cfiCommon0
          CFI (cfiCond139) Function zclClosures_ProcessInDoorLockSetHolidaySchedule
          CFI (cfiCond139) Conditional ??CrossCallReturnLabel_305
          CFI (cfiCond139) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond139) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond139) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond139) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond139) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond139) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond139) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond139) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond139) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond139) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond139) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond139) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond139) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond139) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond139) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond139) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond139) CFA_SP SP+-2
          CFI (cfiCond139) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond140 Using cfiCommon0
          CFI (cfiCond140) Function zclClosures_ProcessInDoorLockOperationEventNotification
          CFI (cfiCond140) Conditional ??CrossCallReturnLabel_306
          CFI (cfiCond140) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond140) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond140) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond140) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond140) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond140) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond140) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond140) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond140) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond140) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond140) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond140) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond140) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond140) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond140) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond140) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond140) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond140) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond140) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond140) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond140) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond140) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond140) CFA_SP SP+-2
          CFI (cfiCond140) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond141 Using cfiCommon0
          CFI (cfiCond141) Function zclClosures_ProcessInDoorLockGetHolidayScheduleRsp
          CFI (cfiCond141) Conditional ??CrossCallReturnLabel_307
          CFI (cfiCond141) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond141) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond141) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond141) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond141) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond141) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond141) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond141) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond141) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond141) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond141) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond141) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond141) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond141) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond141) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond141) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond141) CFA_SP SP+-2
          CFI (cfiCond141) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond142 Using cfiCommon0
          CFI (cfiCond142) Function zclClosures_ProcessInDoorLockSetYearDaySchedule
          CFI (cfiCond142) Conditional ??CrossCallReturnLabel_308
          CFI (cfiCond142) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond142) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond142) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond142) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond142) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond142) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond142) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond142) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond142) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond142) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond142) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond142) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond142) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond142) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond142) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond142) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond142) CFA_SP SP+-2
          CFI (cfiCond142) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond143 Using cfiCommon0
          CFI (cfiCond143) Function zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
          CFI (cfiCond143) Conditional ??CrossCallReturnLabel_309
          CFI (cfiCond143) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond143) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond143) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond143) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond143) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond143) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond143) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond143) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond143) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond143) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond143) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond143) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond143) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond143) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond143) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond143) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond143) CFA_SP SP+-2
          CFI (cfiCond143) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond144 Using cfiCommon0
          CFI (cfiCond144) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond144) Conditional ??CrossCallReturnLabel_310
          CFI (cfiCond144) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond144) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond144) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond144) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond144) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond144) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond144) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond144) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond144) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond144) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond144) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond144) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond144) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond144) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond144) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond144) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond144) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond144) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond144) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond144) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond144) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond144) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond144) CFA_SP SP+-2
          CFI (cfiCond144) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker145 Using cfiCommon1
          CFI (cfiPicker145) NoFunction
          CFI (cfiPicker145) Picker
        INC       DPTR
          CFI EndBlock cfiCond138
          CFI EndBlock cfiCond139
          CFI EndBlock cfiCond140
          CFI EndBlock cfiCond141
          CFI EndBlock cfiCond142
          CFI EndBlock cfiCond143
          CFI EndBlock cfiCond144
          CFI EndBlock cfiPicker145
        REQUIRE ??Subroutine139_0
        ; // Fall through to label ??Subroutine139_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine139_0:
          CFI Block cfiCond146 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockSetYearDaySchedule
          CFI Conditional ??CrossCallReturnLabel_303
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond147 Using cfiCommon0
          CFI (cfiCond147) Function zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
          CFI (cfiCond147) Conditional ??CrossCallReturnLabel_304
          CFI (cfiCond147) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond147) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond147) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond147) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond147) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond147) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond147) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond147) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond147) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond147) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond147) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond147) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond147) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond147) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond147) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond147) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond147) CFA_SP SP+-2
          CFI (cfiCond147) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond148 Using cfiCommon0
          CFI (cfiCond148) Function zclClosures_ProcessInDoorLockSetHolidaySchedule
          CFI (cfiCond148) Conditional ??CrossCallReturnLabel_305
          CFI (cfiCond148) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond148) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond148) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond148) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond148) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond148) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond148) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond148) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond148) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond148) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond148) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond148) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond148) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond148) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond148) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond148) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond148) CFA_SP SP+-2
          CFI (cfiCond148) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond149 Using cfiCommon0
          CFI (cfiCond149) Function zclClosures_ProcessInDoorLockOperationEventNotification
          CFI (cfiCond149) Conditional ??CrossCallReturnLabel_306
          CFI (cfiCond149) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond149) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond149) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond149) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond149) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond149) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond149) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond149) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond149) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond149) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond149) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond149) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond149) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond149) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond149) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond149) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond149) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond149) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond149) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond149) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond149) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond149) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond149) CFA_SP SP+-2
          CFI (cfiCond149) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond150 Using cfiCommon0
          CFI (cfiCond150) Function zclClosures_ProcessInDoorLockGetHolidayScheduleRsp
          CFI (cfiCond150) Conditional ??CrossCallReturnLabel_307
          CFI (cfiCond150) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond150) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond150) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond150) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond150) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond150) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond150) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond150) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond150) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond150) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond150) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond150) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond150) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond150) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond150) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond150) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond150) CFA_SP SP+-2
          CFI (cfiCond150) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond151 Using cfiCommon0
          CFI (cfiCond151) Function zclClosures_ProcessInDoorLockSetYearDaySchedule
          CFI (cfiCond151) Conditional ??CrossCallReturnLabel_308
          CFI (cfiCond151) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond151) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond151) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond151) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond151) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond151) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond151) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond151) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond151) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond151) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond151) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond151) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond151) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond151) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond151) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond151) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond151) CFA_SP SP+-2
          CFI (cfiCond151) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond152 Using cfiCommon0
          CFI (cfiCond152) Function zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
          CFI (cfiCond152) Conditional ??CrossCallReturnLabel_309
          CFI (cfiCond152) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond152) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond152) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond152) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond152) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond152) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond152) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond152) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond152) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond152) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond152) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond152) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond152) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond152) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond152) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond152) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond152) CFA_SP SP+-2
          CFI (cfiCond152) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond153 Using cfiCommon0
          CFI (cfiCond153) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond153) Conditional ??CrossCallReturnLabel_310
          CFI (cfiCond153) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond153) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond153) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond153) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond153) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond153) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond153) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond153) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond153) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond153) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond153) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond153) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond153) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond153) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond153) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond153) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond153) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond153) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond153) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond153) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond153) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond153) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond153) CFA_SP SP+-2
          CFI (cfiCond153) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker154 Using cfiCommon1
          CFI (cfiPicker154) NoFunction
          CFI (cfiPicker154) Picker
        INC       DPTR
          CFI EndBlock cfiCond146
          CFI EndBlock cfiCond147
          CFI EndBlock cfiCond148
          CFI EndBlock cfiCond149
          CFI EndBlock cfiCond150
          CFI EndBlock cfiCond151
          CFI EndBlock cfiCond152
          CFI EndBlock cfiCond153
          CFI EndBlock cfiPicker154
        REQUIRE ??Subroutine140_0
        ; // Fall through to label ??Subroutine140_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine140_0:
          CFI Block cfiCond155 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockGetLogRecordRsp
          CFI Conditional ??CrossCallReturnLabel_301
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond156 Using cfiCommon0
          CFI (cfiCond156) Function zclClosures_ProcessInDoorLockGetHolidayScheduleRsp
          CFI (cfiCond156) Conditional ??CrossCallReturnLabel_302
          CFI (cfiCond156) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond156) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond156) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond156) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond156) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond156) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond156) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond156) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond156) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond156) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond156) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond156) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond156) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond156) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond156) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond156) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond156) CFA_SP SP+-2
          CFI (cfiCond156) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond157 Using cfiCommon0
          CFI (cfiCond157) Function zclClosures_ProcessInDoorLockSetYearDaySchedule
          CFI (cfiCond157) Conditional ??CrossCallReturnLabel_303
          CFI (cfiCond157) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond157) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond157) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond157) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond157) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond157) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond157) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond157) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond157) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond157) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond157) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond157) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond157) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond157) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond157) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond157) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond157) CFA_SP SP+-2
          CFI (cfiCond157) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond158 Using cfiCommon0
          CFI (cfiCond158) Function zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
          CFI (cfiCond158) Conditional ??CrossCallReturnLabel_304
          CFI (cfiCond158) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond158) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond158) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond158) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond158) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond158) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond158) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond158) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond158) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond158) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond158) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond158) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond158) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond158) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond158) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond158) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond158) CFA_SP SP+-2
          CFI (cfiCond158) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond159 Using cfiCommon0
          CFI (cfiCond159) Function zclClosures_ProcessInDoorLockSetHolidaySchedule
          CFI (cfiCond159) Conditional ??CrossCallReturnLabel_305
          CFI (cfiCond159) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond159) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond159) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond159) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond159) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond159) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond159) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond159) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond159) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond159) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond159) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond159) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond159) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond159) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond159) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond159) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond159) CFA_SP SP+-2
          CFI (cfiCond159) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond160 Using cfiCommon0
          CFI (cfiCond160) Function zclClosures_ProcessInDoorLockOperationEventNotification
          CFI (cfiCond160) Conditional ??CrossCallReturnLabel_306
          CFI (cfiCond160) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond160) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond160) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond160) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond160) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond160) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond160) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond160) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond160) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond160) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond160) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond160) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond160) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond160) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond160) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond160) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond160) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond160) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond160) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond160) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond160) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond160) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond160) CFA_SP SP+-2
          CFI (cfiCond160) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond161 Using cfiCommon0
          CFI (cfiCond161) Function zclClosures_ProcessInDoorLockGetHolidayScheduleRsp
          CFI (cfiCond161) Conditional ??CrossCallReturnLabel_307
          CFI (cfiCond161) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond161) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond161) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond161) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond161) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond161) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond161) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond161) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond161) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond161) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond161) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond161) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond161) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond161) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond161) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond161) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond161) CFA_SP SP+-2
          CFI (cfiCond161) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond162 Using cfiCommon0
          CFI (cfiCond162) Function zclClosures_ProcessInDoorLockSetYearDaySchedule
          CFI (cfiCond162) Conditional ??CrossCallReturnLabel_308
          CFI (cfiCond162) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond162) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond162) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond162) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond162) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond162) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond162) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond162) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond162) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond162) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond162) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond162) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond162) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond162) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond162) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond162) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond162) CFA_SP SP+-2
          CFI (cfiCond162) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond163 Using cfiCommon0
          CFI (cfiCond163) Function zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
          CFI (cfiCond163) Conditional ??CrossCallReturnLabel_309
          CFI (cfiCond163) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond163) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond163) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond163) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond163) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond163) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond163) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond163) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond163) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond163) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond163) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond163) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond163) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond163) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond163) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond163) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond163) CFA_SP SP+-2
          CFI (cfiCond163) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond164 Using cfiCommon0
          CFI (cfiCond164) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond164) Conditional ??CrossCallReturnLabel_310
          CFI (cfiCond164) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond164) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond164) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond164) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond164) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond164) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond164) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond164) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond164) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond164) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond164) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond164) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond164) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond164) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond164) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond164) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond164) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond164) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond164) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond164) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond164) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond164) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond164) CFA_SP SP+-2
          CFI (cfiCond164) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker165 Using cfiCommon1
          CFI (cfiPicker165) NoFunction
          CFI (cfiPicker165) Picker
        INC       DPTR
          CFI EndBlock cfiCond155
          CFI EndBlock cfiCond156
          CFI EndBlock cfiCond157
          CFI EndBlock cfiCond158
          CFI EndBlock cfiCond159
          CFI EndBlock cfiCond160
          CFI EndBlock cfiCond161
          CFI EndBlock cfiCond162
          CFI EndBlock cfiCond163
          CFI EndBlock cfiCond164
          CFI EndBlock cfiPicker165
        REQUIRE ??Subroutine141_0
        ; // Fall through to label ??Subroutine141_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine141_0:
          CFI Block cfiCond166 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockSetHolidaySchedule
          CFI Conditional ??CrossCallReturnLabel_300
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond167 Using cfiCommon0
          CFI (cfiCond167) Function zclClosures_ProcessInDoorLockGetLogRecordRsp
          CFI (cfiCond167) Conditional ??CrossCallReturnLabel_301
          CFI (cfiCond167) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond167) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond167) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond167) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond167) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond167) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond167) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond167) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond167) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond167) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond167) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond167) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond167) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond167) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond167) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond167) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond167) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond167) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond167) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond167) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond167) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond167) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond167) CFA_SP SP+-2
          CFI (cfiCond167) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond168 Using cfiCommon0
          CFI (cfiCond168) Function zclClosures_ProcessInDoorLockGetHolidayScheduleRsp
          CFI (cfiCond168) Conditional ??CrossCallReturnLabel_302
          CFI (cfiCond168) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond168) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond168) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond168) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond168) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond168) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond168) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond168) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond168) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond168) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond168) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond168) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond168) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond168) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond168) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond168) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond168) CFA_SP SP+-2
          CFI (cfiCond168) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond169 Using cfiCommon0
          CFI (cfiCond169) Function zclClosures_ProcessInDoorLockSetYearDaySchedule
          CFI (cfiCond169) Conditional ??CrossCallReturnLabel_303
          CFI (cfiCond169) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond169) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond169) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond169) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond169) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond169) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond169) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond169) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond169) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond169) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond169) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond169) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond169) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond169) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond169) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond169) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond169) CFA_SP SP+-2
          CFI (cfiCond169) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond170 Using cfiCommon0
          CFI (cfiCond170) Function zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
          CFI (cfiCond170) Conditional ??CrossCallReturnLabel_304
          CFI (cfiCond170) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond170) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond170) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond170) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond170) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond170) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond170) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond170) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond170) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond170) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond170) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond170) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond170) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond170) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond170) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond170) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond170) CFA_SP SP+-2
          CFI (cfiCond170) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond171 Using cfiCommon0
          CFI (cfiCond171) Function zclClosures_ProcessInDoorLockSetHolidaySchedule
          CFI (cfiCond171) Conditional ??CrossCallReturnLabel_305
          CFI (cfiCond171) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond171) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond171) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond171) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond171) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond171) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond171) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond171) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond171) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond171) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond171) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond171) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond171) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond171) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond171) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond171) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond171) CFA_SP SP+-2
          CFI (cfiCond171) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond172 Using cfiCommon0
          CFI (cfiCond172) Function zclClosures_ProcessInDoorLockOperationEventNotification
          CFI (cfiCond172) Conditional ??CrossCallReturnLabel_306
          CFI (cfiCond172) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond172) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond172) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond172) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond172) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond172) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond172) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond172) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond172) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond172) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond172) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond172) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond172) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond172) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond172) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond172) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond172) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond172) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond172) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond172) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond172) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond172) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond172) CFA_SP SP+-2
          CFI (cfiCond172) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond173 Using cfiCommon0
          CFI (cfiCond173) Function zclClosures_ProcessInDoorLockGetHolidayScheduleRsp
          CFI (cfiCond173) Conditional ??CrossCallReturnLabel_307
          CFI (cfiCond173) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond173) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond173) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond173) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond173) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond173) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond173) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond173) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond173) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond173) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond173) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond173) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond173) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond173) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond173) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond173) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond173) CFA_SP SP+-2
          CFI (cfiCond173) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond174 Using cfiCommon0
          CFI (cfiCond174) Function zclClosures_ProcessInDoorLockSetYearDaySchedule
          CFI (cfiCond174) Conditional ??CrossCallReturnLabel_308
          CFI (cfiCond174) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond174) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond174) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond174) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond174) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond174) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond174) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond174) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond174) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond174) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond174) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond174) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond174) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond174) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond174) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond174) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond174) CFA_SP SP+-2
          CFI (cfiCond174) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond175 Using cfiCommon0
          CFI (cfiCond175) Function zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
          CFI (cfiCond175) Conditional ??CrossCallReturnLabel_309
          CFI (cfiCond175) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond175) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond175) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond175) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond175) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond175) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond175) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond175) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond175) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond175) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond175) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond175) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond175) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond175) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond175) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond175) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond175) CFA_SP SP+-2
          CFI (cfiCond175) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond176 Using cfiCommon0
          CFI (cfiCond176) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond176) Conditional ??CrossCallReturnLabel_310
          CFI (cfiCond176) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond176) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond176) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond176) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond176) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond176) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond176) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond176) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond176) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond176) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond176) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond176) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond176) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond176) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond176) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond176) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond176) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond176) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond176) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond176) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond176) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond176) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond176) CFA_SP SP+-2
          CFI (cfiCond176) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker177 Using cfiCommon1
          CFI (cfiPicker177) NoFunction
          CFI (cfiPicker177) Picker
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        MOV       ?V4,A
        CLR       A
        MOV       ?V5,A
        MOV       A,#0x10
        MOV       R0,#?V4
        RET
          CFI EndBlock cfiCond166
          CFI EndBlock cfiCond167
          CFI EndBlock cfiCond168
          CFI EndBlock cfiCond169
          CFI EndBlock cfiCond170
          CFI EndBlock cfiCond171
          CFI EndBlock cfiCond172
          CFI EndBlock cfiCond173
          CFI EndBlock cfiCond174
          CFI EndBlock cfiCond175
          CFI EndBlock cfiCond176
          CFI EndBlock cfiPicker177
// 1169 
// 1170 /*********************************************************************
// 1171  * @fn      zclClosures_ProcessInDoorLockGetYearDaySchedule
// 1172  *
// 1173  * @brief   Process in the received Get Year Day Schedule cmd
// 1174  *
// 1175  * @param   pInMsg - pointer to the incoming message
// 1176  * @param   pCBs - pointer to the application callbacks
// 1177  *
// 1178  * @return  ZStatus_t
// 1179  */
// 1180 static ZStatus_t zclClosures_ProcessInDoorLockGetYearDaySchedule( zclIncoming_t *pInMsg,
// 1181                                                                   zclClosures_DoorLockAppCallbacks_t *pCBs )
// 1182 {
// 1183  if ( pCBs->pfnDoorLockGetYearDaySchedule )
// 1184  {
// 1185    zclDoorLockSchedule_t cmd;
// 1186 
// 1187    cmd.scheduleID = pInMsg->pData[0];
// 1188    cmd.userID = BUILD_UINT16( pInMsg->pData[1], pInMsg->pData[2] );
// 1189 
// 1190    return ( pCBs->pfnDoorLockGetYearDaySchedule( pInMsg, &cmd ) );
// 1191  }
// 1192 
// 1193  return ( ZFailure );
// 1194 }
// 1195 
// 1196 /*********************************************************************
// 1197  * @fn      zclClosures_ProcessInDoorLockClearYearDaySchedule
// 1198  *
// 1199  * @brief   Process in the received Clear Year Day Schedule cmd
// 1200  *
// 1201  * @param   pInMsg - pointer to the incoming message
// 1202  * @param   pCBs - pointer to the application callbacks
// 1203  *
// 1204  * @return  ZStatus_t
// 1205  */
// 1206 static ZStatus_t zclClosures_ProcessInDoorLockClearYearDaySchedule( zclIncoming_t *pInMsg,
// 1207                                                                     zclClosures_DoorLockAppCallbacks_t *pCBs )
// 1208 {
// 1209  if ( pCBs->pfnDoorLockClearYearDaySchedule )
// 1210  {
// 1211    zclDoorLockSchedule_t cmd;
// 1212 
// 1213    cmd.scheduleID = pInMsg->pData[0];
// 1214    cmd.userID = BUILD_UINT16( pInMsg->pData[1], pInMsg->pData[2] );
// 1215 
// 1216    return ( pCBs->pfnDoorLockClearYearDaySchedule( pInMsg, &cmd ) );
// 1217  }
// 1218 
// 1219  return ( ZFailure );
// 1220 }
// 1221 
// 1222 /*********************************************************************
// 1223  * @fn      zclClosures_ProcessInDoorLockSetHolidaySchedule
// 1224  *
// 1225  * @brief   Process in the received Set Holiday Schedule cmd
// 1226  *
// 1227  * @param   pInMsg - pointer to the incoming message
// 1228  * @param   pCBs - pointer to the application callbacks
// 1229  *
// 1230  * @return  ZStatus_t
// 1231  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1232 static ZStatus_t zclClosures_ProcessInDoorLockSetHolidaySchedule( zclIncoming_t *pInMsg,
zclClosures_ProcessInDoorLockSetHolidaySchedule:
          CFI Block cfiBlock178 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockSetHolidaySchedule
        CODE
// 1233                                                                   zclClosures_DoorLockAppCallbacks_t *pCBs )
// 1234 {
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        MOV       A,#-0x10
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 10
        MOV       A,#-0xa
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 26)
// 1235  if ( pCBs->pfnDoorLockSetHolidaySchedule )
        MOV       A,R4
        ADD       A,#0x20
        LCALL     ?Subroutine84 & 0xFFFF
??CrossCallReturnLabel_198:
        LCALL     ??Subroutine144_0 & 0xFFFF
??CrossCallReturnLabel_321:
        JNZ       $+5
        LJMP      ??zclClosures_ProcessInDoorLockSetHolidaySchedu_1 & 0xFFFF
// 1236  {
// 1237    zclDoorLockSetHolidaySchedule_t cmd;
// 1238 
// 1239    cmd.holidayScheduleID = pInMsg->pData[0];
        LCALL     ?Subroutine22 & 0xFFFF
// 1240    cmd.zigBeeLocalStartTime = BUILD_UINT32( pInMsg->pData[1], pInMsg->pData[2], pInMsg->pData[3], pInMsg->pData[4] );
??CrossCallReturnLabel_58:
        CLR       A
        MOV       ?V1,A
        MOV       ?V2,A
        MOV       ?V3,A
        MOV       DPL,R4
        MOV       DPH,R5
        LCALL     ??Subroutine135_0 & 0xFFFF
??CrossCallReturnLabel_293:
        LCALL     ?L_SHL
        MOV       R0,#?V0
        MOV       R1,#?V4
        LCALL     ?L_ADD
        MOV       DPL,R4
        MOV       DPH,R5
        LCALL     ??Subroutine141_0 & 0xFFFF
??CrossCallReturnLabel_300:
        LCALL     ?L_SHL
        MOV       R0,#?V0
        MOV       R1,#?V4
        LCALL     ?L_ADD
        MOV       DPL,R4
        MOV       DPH,R5
        LCALL     ??Subroutine158_0 & 0xFFFF
??CrossCallReturnLabel_385:
        LCALL     ?L_SHL
        MOV       R0,#?V0
        MOV       R1,#?V4
        LCALL     ?L_ADD
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP0_8
        MOV       R0,#?V0
        LCALL     ?L_MOV_TO_X
// 1241    cmd.zigBeeLocalEndTime = BUILD_UINT32( pInMsg->pData[5], pInMsg->pData[6], pInMsg->pData[7], pInMsg->pData[8] );
        MOV       DPL,R4
        MOV       DPH,R5
        LCALL     ??Subroutine148_0 & 0xFFFF
??CrossCallReturnLabel_358:
        LCALL     ??Subroutine131_0 & 0xFFFF
??CrossCallReturnLabel_289:
        LCALL     ?L_SHL
        MOV       R0,#?V0
        MOV       R1,#?V4
        LCALL     ?L_ADD
        MOV       DPL,R4
        MOV       DPH,R5
        LCALL     ??Subroutine137_0 & 0xFFFF
??CrossCallReturnLabel_305:
        LCALL     ?L_SHL
        MOV       R0,#?V0
        MOV       R1,#?V4
        LCALL     ?L_ADD
        MOV       DPL,R4
        MOV       DPH,R5
        LCALL     ??Subroutine154_0 & 0xFFFF
??CrossCallReturnLabel_390:
        LCALL     ?L_SHL
        MOV       R0,#?V0
        MOV       R1,#?V4
        LCALL     ?L_ADD
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP0_8
        MOV       R0,#?V0
        LCALL     ?L_MOV_TO_X
// 1242    cmd.operatingModeDuringHoliday = pInMsg->pData[9];
        MOV       DPL,R4
        MOV       DPH,R5
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x9
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        LCALL     ?Subroutine72 & 0xFFFF
// 1243 
// 1244    return ( pCBs->pfnDoorLockSetHolidaySchedule( pInMsg, &cmd ) );
// 1245  }
??CrossCallReturnLabel_166:
        LCALL     ??Subroutine152_0 & 0xFFFF
??CrossCallReturnLabel_366:
        LCALL     ?CALL_IND
        SJMP      ??zclClosures_ProcessInDoorLockSetHolidaySchedu_2
// 1246 
// 1247  return ( ZFailure );
??zclClosures_ProcessInDoorLockSetHolidaySchedu_1:
        MOV       R1,#0x1
??zclClosures_ProcessInDoorLockSetHolidaySchedu_2:
        MOV       A,#0xa
        LJMP      ??Subroutine127_0 & 0xFFFF
// 1248 }
          CFI EndBlock cfiBlock178

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine72:
          CFI Block cfiCond179 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockCmds
          CFI Conditional ??CrossCallReturnLabel_167
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond180 Using cfiCommon0
          CFI (cfiCond180) Function zclClosures_ProcessInDoorLockSetHolidaySchedule
          CFI (cfiCond180) Conditional ??CrossCallReturnLabel_166
          CFI (cfiCond180) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond180) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond180) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond180) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond180) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond180) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond180) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond180) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond180) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond180) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond180) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond180) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond180) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond180) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond180) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond180) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond180) CFA_SP SP+-2
          CFI (cfiCond180) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiPicker181 Using cfiCommon1
          CFI (cfiPicker181) NoFunction
          CFI (cfiPicker181) Picker
        MOVX      @DPTR,A
        ; Setup parameters for indirect call
        ; Setup parameters for indirect call
        MOV       R4,?XSP + 0
        MOV       R5,?XSP + 1
        MOV       DPL,R6
        MOV       DPH,R7
        RET
          CFI EndBlock cfiCond179
          CFI EndBlock cfiCond180
          CFI EndBlock cfiPicker181

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine22:
          CFI Block cfiCond182 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockSetYearDaySchedule
          CFI Conditional ??CrossCallReturnLabel_57
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond183 Using cfiCommon0
          CFI (cfiCond183) Function zclClosures_ProcessInDoorLockSetHolidaySchedule
          CFI (cfiCond183) Conditional ??CrossCallReturnLabel_58
          CFI (cfiCond183) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond183) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond183) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond183) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond183) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond183) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond183) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond183) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond183) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond183) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond183) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond183) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond183) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond183) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond183) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond183) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond183) CFA_SP SP+-2
          CFI (cfiCond183) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiPicker184 Using cfiCommon1
          CFI (cfiPicker184) NoFunction
          CFI (cfiPicker184) Picker
        LCALL     ?Subroutine88 & 0xFFFF
??CrossCallReturnLabel_211:
        MOV       R5,A
        MOV       DPL,R4
        MOV       DPH,R5
        INC       DPTR
        MOVX      A,@DPTR
        MOV       ?V0,A
        RET
          CFI EndBlock cfiCond182
          CFI EndBlock cfiCond183
          CFI EndBlock cfiPicker184
// 1249 
// 1250 /*********************************************************************
// 1251  * @fn      zclClosures_ProcessInDoorLockGetHolidaySchedule
// 1252  *
// 1253  * @brief   Process in the received Get Holiday Schedule cmd
// 1254  *
// 1255  * @param   pInMsg - pointer to the incoming message
// 1256  * @param   pCBs - pointer to the application callbacks
// 1257  *
// 1258  * @return  ZStatus_t
// 1259  */
// 1260 static ZStatus_t zclClosures_ProcessInDoorLockGetHolidaySchedule( zclIncoming_t *pInMsg,
// 1261                                                                   zclClosures_DoorLockAppCallbacks_t *pCBs )
// 1262 {
// 1263  if ( pCBs->pfnDoorLockGetHolidaySchedule )
// 1264  {
// 1265    zclDoorLockHolidayScheduleID_t cmd;
// 1266 
// 1267    cmd.holidayScheduleID = pInMsg->pData[0];
// 1268 
// 1269    return ( pCBs->pfnDoorLockGetHolidaySchedule( pInMsg, &cmd ) );
// 1270  }
// 1271 
// 1272  return ( ZFailure );
// 1273 }
// 1274 
// 1275 /*********************************************************************
// 1276  * @fn      zclClosures_ProcessInDoorLockClearHolidaySchedule
// 1277  *
// 1278  * @brief   Process in the received Clear Holiday Schedule cmd
// 1279  *
// 1280  * @param   pInMsg - pointer to the incoming message
// 1281  * @param   pCBs - pointer to the application callbacks
// 1282  *
// 1283  * @return  ZStatus_t
// 1284  */
// 1285 static ZStatus_t zclClosures_ProcessInDoorLockClearHolidaySchedule( zclIncoming_t *pInMsg,
// 1286                                                                     zclClosures_DoorLockAppCallbacks_t *pCBs )
// 1287 {
// 1288  if ( pCBs->pfnDoorLockClearHolidaySchedule )
// 1289  {
// 1290    zclDoorLockHolidayScheduleID_t cmd;
// 1291 
// 1292    cmd.holidayScheduleID = pInMsg->pData[0];
// 1293 
// 1294    return ( pCBs->pfnDoorLockClearHolidaySchedule( pInMsg, &cmd ) );
// 1295  }
// 1296 
// 1297  return ( ZFailure );
// 1298 }
// 1299 
// 1300 /*********************************************************************
// 1301  * @fn      zclClosures_ProcessInDoorLockSetUserType
// 1302  *
// 1303  * @brief   Process in the received Set User Type cmd
// 1304  *
// 1305  * @param   pInMsg - pointer to the incoming message
// 1306  * @param   pCBs - pointer to the application callbacks
// 1307  *
// 1308  * @return  ZStatus_t
// 1309  */
// 1310 static ZStatus_t zclClosures_ProcessInDoorLockSetUserType( zclIncoming_t *pInMsg,
// 1311                                                            zclClosures_DoorLockAppCallbacks_t *pCBs )
// 1312 {
// 1313  if ( pCBs->pfnDoorLockSetUserType )
// 1314  {
// 1315    zclDoorLockSetUserType_t cmd;
// 1316 
// 1317    cmd.userID = BUILD_UINT16( pInMsg->pData[0], pInMsg->pData[1] );
// 1318    cmd.userType = pInMsg->pData[2];
// 1319 
// 1320    return ( pCBs->pfnDoorLockSetUserType( pInMsg, &cmd ) );
// 1321  }
// 1322 
// 1323  return ( ZFailure );
// 1324 }
// 1325 
// 1326 /*********************************************************************
// 1327  * @fn      zclClosures_ProcessInDoorLockGetUserType
// 1328  *
// 1329  * @brief   Process in the received Get User Type cmd
// 1330  *
// 1331  * @param   pInMsg - pointer to the incoming message
// 1332  * @param   pCBs - pointer to the application callbacks
// 1333  *
// 1334  * @return  ZStatus_t
// 1335  */
// 1336 static ZStatus_t zclClosures_ProcessInDoorLockGetUserType( zclIncoming_t *pInMsg,
// 1337                                                            zclClosures_DoorLockAppCallbacks_t *pCBs )
// 1338 {
// 1339  if ( pCBs->pfnDoorLockGetUserType )
// 1340  {
// 1341    zclDoorLockUserID_t cmd;
// 1342 
// 1343    cmd.userID = BUILD_UINT16( pInMsg->pData[0], pInMsg->pData[1] );
// 1344 
// 1345    return ( pCBs->pfnDoorLockGetUserType( pInMsg, &cmd ) );
// 1346  }
// 1347 
// 1348  return ( ZFailure );
// 1349 }
// 1350 
// 1351 /*********************************************************************
// 1352  * @fn      zclClosures_ProcessInDoorLockSetRFIDCode
// 1353  *
// 1354  * @brief   Process in the received Set RFID Code cmd
// 1355  *
// 1356  * @param   pInMsg - pointer to the incoming message
// 1357  * @param   pCBs - pointer to the application callbacks
// 1358  *
// 1359  * @return  ZStatus_t
// 1360  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1361 static ZStatus_t zclClosures_ProcessInDoorLockSetRFIDCode( zclIncoming_t *pInMsg,
zclClosures_ProcessInDoorLockSetRFIDCode:
          CFI Block cfiBlock185 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockSetRFIDCode
        CODE
// 1362                                                            zclClosures_DoorLockAppCallbacks_t *pCBs )
// 1363 {
        FUNCALL zclClosures_ProcessInDoorLockSetRFIDCode, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclClosures_ProcessInDoorLockSetRFIDCode, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V6
        REQUIRE ?V7
        MOV       A,#-0x10
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 6
        MOV       A,#-0x6
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 22)
        MOV       A,R2
        MOV       R6,A
        MOV       A,R3
        MOV       R7,A
// 1364   ZStatus_t status;
// 1365 
// 1366   if ( pCBs->pfnDoorLockSetRFIDCode )
        MOV       A,R4
        ADD       A,#0x2a
        LCALL     ?Subroutine17 & 0xFFFF
??CrossCallReturnLabel_329:
        JZ        ??zclClosures_ProcessInDoorLockSetRFIDCode_0
// 1367   {
// 1368     uint8 i;
// 1369     uint8 offset;
// 1370     uint8 calculatedArrayLen;
// 1371     zclDoorLockSetRFIDCode_t cmd;
// 1372 
// 1373     // first octet of PIN/RFID Code variable string identifies its length
// 1374     calculatedArrayLen = pInMsg->pData[4] + 1;  // add first byte of string
        LCALL     ?Subroutine20 & 0xFFFF
// 1375 
// 1376     cmd.pRfidCode = zcl_mem_alloc( calculatedArrayLen );
??CrossCallReturnLabel_52:
        LCALL     `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV       ?V6,R2
        MOV       ?V7,R3
        MOV       R0,?V6
        MOV       R1,?V7
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine61 & 0xFFFF
// 1377     if ( !cmd.pRfidCode )
??CrossCallReturnLabel_142:
        JNZ       ??zclClosures_ProcessInDoorLockSetRFIDCode_1
// 1378     {
// 1379       return ( ZMemError );  // no memory
        MOV       R1,#0x10
        SJMP      ??zclClosures_ProcessInDoorLockSetRFIDCode_2
// 1380     }
// 1381 
// 1382     cmd.userID = BUILD_UINT16( pInMsg->pData[0], pInMsg->pData[1] );
??zclClosures_ProcessInDoorLockSetRFIDCode_1:
        LCALL     ?Subroutine11 & 0xFFFF
// 1383     cmd.userStatus = pInMsg->pData[2];
??CrossCallReturnLabel_5:
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        LCALL     ?Subroutine24 & 0xFFFF
// 1384     cmd.userType = pInMsg->pData[3];
??CrossCallReturnLabel_62:
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x3
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        LCALL     ?Subroutine73 & 0xFFFF
// 1385     offset = 4;
// 1386     for ( i = 0; i < calculatedArrayLen; i++ )
??CrossCallReturnLabel_169:
        SJMP      ??zclClosures_ProcessInDoorLockSetRFIDCode_3
// 1387     {
// 1388       cmd.pRfidCode[i] = pInMsg->pData[offset++];
??zclClosures_ProcessInDoorLockSetRFIDCode_4:
        MOV       A,R1
        MOV       R2,A
        MOV       DPL,?V2
        MOV       DPH,?V3
        LCALL     ??Subroutine168_0 & 0xFFFF
// 1389     }
??CrossCallReturnLabel_421:
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,R0
        MOV       R2,A
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine19 & 0xFFFF
??CrossCallReturnLabel_45:
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
        INC       R1
        INC       R0
??zclClosures_ProcessInDoorLockSetRFIDCode_3:
        MOV       A,R0
        CLR       C
        SUBB      A,?V4
        JC        ??zclClosures_ProcessInDoorLockSetRFIDCode_4
// 1390 
// 1391     status = ( pCBs->pfnDoorLockSetRFIDCode( pInMsg, &cmd ) );
        ; Setup parameters for indirect call
        LCALL     ?Subroutine48 & 0xFFFF
??CrossCallReturnLabel_377:
        LCALL     ?CALL_IND
        MOV       A,R1
        MOV       R6,A
// 1392     zcl_mem_free( cmd.pRfidCode );
        ; Setup parameters for call to function osal_mem_free
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine37 & 0xFFFF
??CrossCallReturnLabel_88:
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
// 1393     return status;
        MOV       A,R6
        MOV       R1,A
        SJMP      ??zclClosures_ProcessInDoorLockSetRFIDCode_2
// 1394   }
// 1395 
// 1396  return ( ZFailure );
??zclClosures_ProcessInDoorLockSetRFIDCode_0:
        MOV       R1,#0x1
??zclClosures_ProcessInDoorLockSetRFIDCode_2:
        LJMP      ?Subroutine2 & 0xFFFF
// 1397 }
          CFI EndBlock cfiBlock185
// 1398 
// 1399 /*********************************************************************
// 1400  * @fn      zclClosures_ProcessInDoorLockGetRFIDCode
// 1401  *
// 1402  * @brief   Process in the received Get RFID Code cmd
// 1403  *
// 1404  * @param   pInMsg - pointer to the incoming message
// 1405  * @param   pCBs - pointer to the application callbacks
// 1406  *
// 1407  * @return  ZStatus_t
// 1408  */
// 1409 static ZStatus_t zclClosures_ProcessInDoorLockGetRFIDCode( zclIncoming_t *pInMsg,
// 1410                                                            zclClosures_DoorLockAppCallbacks_t *pCBs )
// 1411 {
// 1412  if ( pCBs->pfnDoorLockGetRFIDCode )
// 1413  {
// 1414    zclDoorLockUserID_t cmd;
// 1415 
// 1416    cmd.userID = BUILD_UINT16( pInMsg->pData[0], pInMsg->pData[1] );
// 1417 
// 1418    return ( pCBs->pfnDoorLockGetRFIDCode( pInMsg, &cmd ) );
// 1419  }
// 1420 
// 1421  return ( ZFailure );
// 1422 }
// 1423 
// 1424 /*********************************************************************
// 1425  * @fn      zclClosures_ProcessInDoorLockClearRFIDCode
// 1426  *
// 1427  * @brief   Process in the received Clear RFID Code cmd
// 1428  *
// 1429  * @param   pInMsg - pointer to the incoming message
// 1430  * @param   pCBs - pointer to the application callbacks
// 1431  *
// 1432  * @return  ZStatus_t
// 1433  */
// 1434 static ZStatus_t zclClosures_ProcessInDoorLockClearRFIDCode( zclIncoming_t *pInMsg,
// 1435                                                              zclClosures_DoorLockAppCallbacks_t *pCBs )
// 1436 {
// 1437  if ( pCBs->pfnDoorLockClearRFIDCode )
// 1438  {
// 1439    zclDoorLockUserID_t cmd;
// 1440 
// 1441    cmd.userID = BUILD_UINT16( pInMsg->pData[0], pInMsg->pData[1] );
// 1442 
// 1443    return ( pCBs->pfnDoorLockClearRFIDCode( pInMsg, &cmd ) );
// 1444  }
// 1445 
// 1446  return ( ZFailure );
// 1447 }
// 1448 
// 1449 /*********************************************************************
// 1450  * @fn      zclClosures_ProcessInDoorLockClearAllRFIDCodes
// 1451  *
// 1452  * @brief   Process in the received Clear All RFID Codes cmd
// 1453  *
// 1454  * @param   pInMsg - pointer to the incoming message
// 1455  * @param   pCBs - pointer to the application callbacks
// 1456  *
// 1457  * @return  ZStatus_t
// 1458  */
// 1459 static ZStatus_t zclClosures_ProcessInDoorLockClearAllRFIDCodes( zclIncoming_t *pInMsg,
// 1460                                                                  zclClosures_DoorLockAppCallbacks_t *pCBs )
// 1461 {
// 1462  if ( pCBs->pfnDoorLockClearAllRFIDCodes )
// 1463  {
// 1464    // no payload
// 1465 
// 1466    return ( pCBs->pfnDoorLockClearAllRFIDCodes( pInMsg ) );
// 1467  }
// 1468 
// 1469  return ( ZFailure );
// 1470 }
// 1471 
// 1472 /*********************************************************************
// 1473  * @fn      zclClosures_ProcessInDoorLockUnlockWithTimeoutRsp
// 1474  *
// 1475  * @brief   Process in the received Unlock With Timeout Response cmd
// 1476  *
// 1477  * @param   pInMsg - pointer to the incoming message
// 1478  * @param   pCBs - pointer to the application callbacks
// 1479  *
// 1480  * @return  ZStatus_t
// 1481  */
// 1482 static ZStatus_t zclClosures_ProcessInDoorLockUnlockWithTimeoutRsp( zclIncoming_t *pInMsg,
// 1483                                                                     zclClosures_DoorLockAppCallbacks_t *pCBs )
// 1484 {
// 1485  if ( pCBs->pfnDoorLockUnlockWithTimeoutRsp )
// 1486  {
// 1487    return ( pCBs->pfnDoorLockUnlockWithTimeoutRsp( pInMsg, pInMsg->pData[0] ) );
// 1488  }
// 1489 
// 1490  return ( ZFailure );
// 1491 }
// 1492 
// 1493 /*********************************************************************
// 1494  * @fn      zclClosures_ProcessInDoorLockGetLogRecordRsp
// 1495  *
// 1496  * @brief   Process in the received Get Log Record Response cmd
// 1497  *
// 1498  * @param   pInMsg - pointer to the incoming message
// 1499  * @param   pCBs - pointer to the application callbacks
// 1500  *
// 1501  * @return  ZStatus_t
// 1502  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1503 static ZStatus_t zclClosures_ProcessInDoorLockGetLogRecordRsp( zclIncoming_t *pInMsg,
zclClosures_ProcessInDoorLockGetLogRecordRsp:
          CFI Block cfiBlock186 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockGetLogRecordRsp
        CODE
// 1504                                                                zclClosures_DoorLockAppCallbacks_t *pCBs )
// 1505 {
        FUNCALL zclClosures_ProcessInDoorLockGetLogRecordRsp, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 35, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 35, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclClosures_ProcessInDoorLockGetLogRecordRsp, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 35, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 35, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V10
        REQUIRE ?V11
        REQUIRE ?V12
        REQUIRE ?V13
        MOV       A,#-0x16
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 22)
        ; Saved register size: 22
        ; Auto size: 13
        MOV       A,#-0xd
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 35)
        MOV       ?V12,R2
        MOV       ?V13,R3
// 1506   ZStatus_t status;
// 1507 
// 1508   if ( pCBs->pfnDoorLockGetLogRecordRsp )
        MOV       A,R4
        ADD       A,#0x34
        MOV       ?V10,A
        CLR       A
        ADDC      A,R5
        MOV       ?V11,A
        MOV       DPL,?V10
        LCALL     ??Subroutine143_0 & 0xFFFF
??CrossCallReturnLabel_324:
        JNZ       $+5
        LJMP      ??zclClosures_ProcessInDoorLockGetLogRecordRsp_0 & 0xFFFF
// 1509   {
// 1510     uint8 i;
// 1511     uint8 offset;
// 1512     uint8 calculatedArrayLen;
// 1513     zclDoorLockGetLogRecordRsp_t cmd;
// 1514 
// 1515     // first octet of PIN/RFID Code variable string identifies its length
// 1516     calculatedArrayLen = pInMsg->pData[11] + 1;  // add first byte of string
        LCALL     ?Subroutine39 & 0xFFFF
??CrossCallReturnLabel_94:
        MOV       ?V8,A
// 1517 
// 1518     cmd.pPIN = zcl_mem_alloc( calculatedArrayLen );
        ; Setup parameters for call to function osal_mem_alloc
        MOV       R2,A
        MOV       R3,#0x0
        LCALL     `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV       ?V0,R2
        MOV       ?V1,R3
        MOV       R0,?V0
        MOV       R1,?V1
        MOV       A,#0xb
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine61 & 0xFFFF
// 1519     if ( !cmd.pPIN )
??CrossCallReturnLabel_143:
        JNZ       ??zclClosures_ProcessInDoorLockGetLogRecordRsp_1
// 1520     {
// 1521       return ( ZMemError );  // no memory
        MOV       R1,#0x10
        LJMP      ??zclClosures_ProcessInDoorLockGetLogRecordRsp_2 & 0xFFFF
// 1522     }
// 1523 
// 1524     cmd.logEntryID = BUILD_UINT16( pInMsg->pData[0], pInMsg->pData[1] );
??zclClosures_ProcessInDoorLockGetLogRecordRsp_1:
        LCALL     ??Subroutine160_0 & 0xFFFF
??CrossCallReturnLabel_397:
        LCALL     ?Subroutine99 & 0xFFFF
??CrossCallReturnLabel_349:
        MOV       R1,A
        MOV       A,R4
        LCALL     ?Subroutine77 & 0xFFFF
// 1525     cmd.timestamp = BUILD_UINT32( pInMsg->pData[2], pInMsg->pData[3], pInMsg->pData[4], pInMsg->pData[5] );
??CrossCallReturnLabel_288:
        MOV       DPL,R2
        MOV       DPH,R3
        LCALL     ??Subroutine161_0 & 0xFFFF
??CrossCallReturnLabel_398:
        LCALL     ??Subroutine134_0 & 0xFFFF
??CrossCallReturnLabel_294:
        LCALL     ?L_SHL
        MOV       R0,#?V0
        MOV       R1,#?V4
        LCALL     ?L_ADD
        MOV       DPL,R2
        MOV       DPH,R3
        LCALL     ??Subroutine140_0 & 0xFFFF
??CrossCallReturnLabel_301:
        LCALL     ?L_SHL
        MOV       R0,#?V0
        MOV       R1,#?V4
        LCALL     ?L_ADD
        MOV       DPL,R2
        MOV       DPH,R3
        LCALL     ??Subroutine157_0 & 0xFFFF
??CrossCallReturnLabel_386:
        LCALL     ?L_SHL
        MOV       R0,#?V0
        MOV       R1,#?V4
        LCALL     ?L_ADD
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        MOV       R0,#?V0
        LCALL     ?L_MOV_TO_X
// 1526     cmd.eventType = pInMsg->pData[6];
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x6
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        LCALL     ?Subroutine55 & 0xFFFF
// 1527     cmd.source = pInMsg->pData[7];
??CrossCallReturnLabel_311:
        ADD       A,#0x7
        MOV       DPL,A
        CLR       A
        ADDC      A,R0
        MOV       DPH,A
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x7
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        LCALL     ?Subroutine55 & 0xFFFF
// 1528     cmd.eventIDAlarmCode = pInMsg->pData[8];
??CrossCallReturnLabel_312:
        ADD       A,#0x8
        MOV       DPL,A
        CLR       A
        ADDC      A,R0
        MOV       DPH,A
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x8
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        LCALL     ?Subroutine75 & 0xFFFF
// 1529     cmd.userID = BUILD_UINT16( pInMsg->pData[9], pInMsg->pData[10] );
??CrossCallReturnLabel_175:
        LCALL     ?Subroutine54 & 0xFFFF
??CrossCallReturnLabel_126:
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R2,A
        MOV       DPL,R0
        MOV       DPH,R1
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R1,A
        MOV       A,R2
        MOV       R0,A
        MOV       A,#0x9
        LCALL     ?XSTACK_DISP0_8
        MOV       A,R0
        LCALL     ??Subroutine129_0 & 0xFFFF
// 1530     offset = 11;
??CrossCallReturnLabel_286:
        MOV       R1,#0xb
// 1531     for ( i = 0; i < calculatedArrayLen; i++ )
        MOV       R0,#0x0
        SJMP      ??zclClosures_ProcessInDoorLockGetLogRecordRsp_3
// 1532     {
// 1533       cmd.pPIN[i] = pInMsg->pData[offset++];
??zclClosures_ProcessInDoorLockGetLogRecordRsp_4:
        MOV       A,R1
        MOV       R2,A
        MOV       DPL,R6
        MOV       DPH,R7
        LCALL     ??Subroutine168_0 & 0xFFFF
// 1534     }
??CrossCallReturnLabel_422:
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,R0
        MOV       R2,A
        MOV       A,#0xb
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine19 & 0xFFFF
??CrossCallReturnLabel_46:
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
        INC       R1
        INC       R0
??zclClosures_ProcessInDoorLockGetLogRecordRsp_3:
        MOV       A,R0
        CLR       C
        SUBB      A,?V8
        JC        ??zclClosures_ProcessInDoorLockGetLogRecordRsp_4
// 1535 
// 1536     status = ( pCBs->pfnDoorLockGetLogRecordRsp( pInMsg, &cmd ) );
        ; Setup parameters for indirect call
        MOV       R4,?XSP + 0
        MOV       R5,?XSP + 1
        MOV       R2,?V12
        MOV       R3,?V13
        MOV       DPL,?V10
        MOV       DPH,?V11
        LCALL     ??Subroutine152_0 & 0xFFFF
??CrossCallReturnLabel_367:
        LCALL     ?CALL_IND
        MOV       A,R1
        MOV       R6,A
// 1537     zcl_mem_free( cmd.pPIN );
        ; Setup parameters for call to function osal_mem_free
        MOV       A,#0xb
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine37 & 0xFFFF
??CrossCallReturnLabel_89:
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
// 1538     return status;
        MOV       A,R6
        MOV       R1,A
        SJMP      ??zclClosures_ProcessInDoorLockGetLogRecordRsp_2
// 1539   }
// 1540 
// 1541  return ( ZFailure );
??zclClosures_ProcessInDoorLockGetLogRecordRsp_0:
        MOV       R1,#0x1
??zclClosures_ProcessInDoorLockGetLogRecordRsp_2:
        LJMP      ?Subroutine3 & 0xFFFF
// 1542 }
          CFI EndBlock cfiBlock186

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine99:
          CFI Block cfiCond187 Using cfiCommon0
          CFI Function zclClosures_RegisterDoorLockCmdCallbacks
          CFI Conditional ??CrossCallReturnLabel_348
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond188 Using cfiCommon0
          CFI (cfiCond188) Function zclClosures_ProcessInDoorLockCmds
          CFI (cfiCond188) Conditional ??CrossCallReturnLabel_351, ??CrossCallReturnLabel_123
          CFI (cfiCond188) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond188) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond188) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond188) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond188) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond188) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond188) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond188) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond188) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond188) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond188) CFA_SP SP+-4
          CFI (cfiCond188) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond189 Using cfiCommon0
          CFI (cfiCond189) Function zclClosures_ProcessInDoorLockCmds
          CFI (cfiCond189) Conditional ??CrossCallReturnLabel_351, ??CrossCallReturnLabel_124
          CFI (cfiCond189) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond189) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond189) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond189) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond189) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond189) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond189) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond189) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond189) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond189) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond189) CFA_SP SP+-4
          CFI (cfiCond189) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond190 Using cfiCommon0
          CFI (cfiCond190) Function zclClosures_ProcessInDoorLockCmds
          CFI (cfiCond190) Conditional ??CrossCallReturnLabel_353, ??CrossCallReturnLabel_277
          CFI (cfiCond190) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond190) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond190) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond190) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond190) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond190) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond190) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond190) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond190) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond190) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond190) CFA_SP SP+-4
          CFI (cfiCond190) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond191 Using cfiCommon0
          CFI (cfiCond191) Function zclClosures_ProcessInDoorLockCmds
          CFI (cfiCond191) Conditional ??CrossCallReturnLabel_353, ??CrossCallReturnLabel_278
          CFI (cfiCond191) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond191) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond191) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond191) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond191) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond191) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond191) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond191) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond191) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond191) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond191) CFA_SP SP+-4
          CFI (cfiCond191) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond192 Using cfiCommon0
          CFI (cfiCond192) Function zclClosures_ProcessInDoorLockCmds
          CFI (cfiCond192) Conditional ??CrossCallReturnLabel_353, ??CrossCallReturnLabel_279
          CFI (cfiCond192) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond192) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond192) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond192) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond192) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond192) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond192) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond192) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond192) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond192) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond192) CFA_SP SP+-4
          CFI (cfiCond192) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond193 Using cfiCommon0
          CFI (cfiCond193) Function zclClosures_ProcessInDoorLockCmds
          CFI (cfiCond193) Conditional ??CrossCallReturnLabel_353, ??CrossCallReturnLabel_280
          CFI (cfiCond193) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond193) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond193) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond193) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond193) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond193) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond193) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond193) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond193) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond193) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond193) CFA_SP SP+-4
          CFI (cfiCond193) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond194 Using cfiCommon0
          CFI (cfiCond194) Function zclClosures_ProcessInDoorLockSetWeekDaySchedule
          CFI (cfiCond194) Conditional ??CrossCallReturnLabel_353, ??CrossCallReturnLabel_281
          CFI (cfiCond194) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond194) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond194) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond194) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond194) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond194) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond194) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond194) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond194) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond194) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond194) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond194) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond194) CFA_SP SP+-4
          CFI (cfiCond194) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond195 Using cfiCommon0
          CFI (cfiCond195) Function zclClosures_ProcessInDoorLockGetWeekDayScheduleRsp
          CFI (cfiCond195) Conditional ??CrossCallReturnLabel_353, ??CrossCallReturnLabel_282
          CFI (cfiCond195) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond195) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond195) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond195) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond195) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond195) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond195) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond195) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond195) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond195) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond195) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond195) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond195) CFA_SP SP+-4
          CFI (cfiCond195) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond196 Using cfiCommon0
          CFI (cfiCond196) Function zclClosures_HdlIncoming
          CFI (cfiCond196) Conditional ??CrossCallReturnLabel_353, ??CrossCallReturnLabel_276
          CFI (cfiCond196) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond196) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond196) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond196) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond196) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond196) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond196) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond196) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond196) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond196) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond196) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond196) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond196) CFA_SP SP+-4
          CFI (cfiCond196) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond197 Using cfiCommon0
          CFI (cfiCond197) Function zclClosures_ProcessInDoorLockGetLogRecordRsp
          CFI (cfiCond197) Conditional ??CrossCallReturnLabel_349
          CFI (cfiCond197) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond197) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond197) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond197) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond197) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond197) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond197) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond197) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond197) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond197) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond197) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond197) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond197) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond197) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond197) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond197) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond197) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond197) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond197) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond197) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond197) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond197) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond197) CFA_SP SP+-2
          CFI (cfiCond197) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond198 Using cfiCommon0
          CFI (cfiCond198) Function zclClosures_ProcessInDoorLockSetPINCode
          CFI (cfiCond198) Conditional ??CrossCallReturnLabel_350, ??CrossCallReturnLabel_4
          CFI (cfiCond198) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond198) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond198) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond198) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond198) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond198) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond198) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond198) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond198) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond198) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond198) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond198) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond198) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond198) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond198) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond198) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond198) CFA_SP SP+-4
          CFI (cfiCond198) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond199 Using cfiCommon0
          CFI (cfiCond199) Function zclClosures_ProcessInDoorLockSetRFIDCode
          CFI (cfiCond199) Conditional ??CrossCallReturnLabel_350, ??CrossCallReturnLabel_5
          CFI (cfiCond199) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond199) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond199) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond199) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond199) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond199) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond199) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond199) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond199) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond199) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond199) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond199) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond199) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond199) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond199) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond199) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond199) CFA_SP SP+-4
          CFI (cfiCond199) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond200 Using cfiCommon0
          CFI (cfiCond200) Function zclClosures_ProcessInDoorLockGetPINCodeRsp
          CFI (cfiCond200) Conditional ??CrossCallReturnLabel_350, ??CrossCallReturnLabel_6
          CFI (cfiCond200) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond200) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond200) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond200) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond200) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond200) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond200) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond200) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond200) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond200) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond200) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond200) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond200) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond200) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond200) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond200) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond200) CFA_SP SP+-4
          CFI (cfiCond200) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond201 Using cfiCommon0
          CFI (cfiCond201) Function zclClosures_ProcessInDoorLockGetRFIDCodeRsp
          CFI (cfiCond201) Conditional ??CrossCallReturnLabel_350, ??CrossCallReturnLabel_7
          CFI (cfiCond201) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond201) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond201) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond201) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond201) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond201) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond201) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond201) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond201) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond201) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond201) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond201) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond201) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond201) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond201) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond201) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond201) CFA_SP SP+-4
          CFI (cfiCond201) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond202 Using cfiCommon0
          CFI (cfiCond202) Function zclClosures_ProcessInDoorLockSetWeekDaySchedule
          CFI (cfiCond202) Conditional ??CrossCallReturnLabel_352, ??CrossCallReturnLabel_164
          CFI (cfiCond202) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond202) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond202) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond202) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond202) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond202) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond202) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond202) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond202) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond202) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond202) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond202) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond202) CFA_SP SP+-4
          CFI (cfiCond202) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond203 Using cfiCommon0
          CFI (cfiCond203) Function zclClosures_ProcessInDoorLockGetWeekDayScheduleRsp
          CFI (cfiCond203) Conditional ??CrossCallReturnLabel_352, ??CrossCallReturnLabel_165
          CFI (cfiCond203) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond203) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond203) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond203) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond203) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond203) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond203) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond203) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond203) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond203) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond203) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond203) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond203) CFA_SP SP+-4
          CFI (cfiCond203) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond204 Using cfiCommon0
          CFI (cfiCond204) Function zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
          CFI (cfiCond204) Conditional ??CrossCallReturnLabel_354, ??CrossCallReturnLabel_346
          CFI (cfiCond204) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond204) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond204) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond204) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond204) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond204) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond204) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond204) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond204) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond204) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond204) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond204) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond204) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond204) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond204) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond204) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond204) CFA_SP SP+-4
          CFI (cfiCond204) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond205 Using cfiCommon0
          CFI (cfiCond205) Function zclClosures_ProcessInDoorLockGetHolidayScheduleRsp
          CFI (cfiCond205) Conditional ??CrossCallReturnLabel_354, ??CrossCallReturnLabel_347
          CFI (cfiCond205) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond205) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond205) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond205) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond205) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond205) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond205) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond205) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond205) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond205) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond205) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond205) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond205) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond205) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond205) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond205) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond205) CFA_SP SP+-4
          CFI (cfiCond205) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond206 Using cfiCommon0
          CFI (cfiCond206) Function zclClosures_ProcessInDoorLockCmds
          CFI (cfiCond206) Conditional ??CrossCallReturnLabel_354, ??CrossCallReturnLabel_345
          CFI (cfiCond206) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond206) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond206) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond206) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond206) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond206) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond206) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond206) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond206) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond206) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond206) CFA_SP SP+-4
          CFI (cfiCond206) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker207 Using cfiCommon1
          CFI (cfiPicker207) NoFunction
          CFI (cfiPicker207) Picker
        MOVX      A,@DPTR
        MOV       R4,A
        INC       DPTR
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond187
          CFI EndBlock cfiCond188
          CFI EndBlock cfiCond189
          CFI EndBlock cfiCond190
          CFI EndBlock cfiCond191
          CFI EndBlock cfiCond192
          CFI EndBlock cfiCond193
          CFI EndBlock cfiCond194
          CFI EndBlock cfiCond195
          CFI EndBlock cfiCond196
          CFI EndBlock cfiCond197
          CFI EndBlock cfiCond198
          CFI EndBlock cfiCond199
          CFI EndBlock cfiCond200
          CFI EndBlock cfiCond201
          CFI EndBlock cfiCond202
          CFI EndBlock cfiCond203
          CFI EndBlock cfiCond204
          CFI EndBlock cfiCond205
          CFI EndBlock cfiCond206
          CFI EndBlock cfiPicker207

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine55:
          CFI Block cfiCond208 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockGetLogRecordRsp
          CFI Conditional ??CrossCallReturnLabel_311
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond209 Using cfiCommon0
          CFI (cfiCond209) Function zclClosures_ProcessInDoorLockGetLogRecordRsp
          CFI (cfiCond209) Conditional ??CrossCallReturnLabel_312
          CFI (cfiCond209) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond209) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond209) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond209) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond209) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond209) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond209) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond209) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond209) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond209) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond209) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond209) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond209) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond209) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond209) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond209) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond209) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond209) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond209) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond209) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond209) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond209) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond209) CFA_SP SP+-2
          CFI (cfiCond209) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond210 Using cfiCommon0
          CFI (cfiCond210) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond210) Conditional ??CrossCallReturnLabel_313
          CFI (cfiCond210) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond210) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond210) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond210) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond210) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond210) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond210) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond210) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond210) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond210) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond210) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond210) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond210) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond210) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond210) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond210) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond210) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond210) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond210) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond210) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond210) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond210) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond210) CFA_SP SP+-2
          CFI (cfiCond210) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker211 Using cfiCommon1
          CFI (cfiPicker211) NoFunction
          CFI (cfiPicker211) Picker
        MOVX      @DPTR,A
          CFI EndBlock cfiCond208
          CFI EndBlock cfiCond209
          CFI EndBlock cfiCond210
          CFI EndBlock cfiPicker211
        REQUIRE ??Subroutine142_0
        ; // Fall through to label ??Subroutine142_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine142_0:
          CFI Block cfiCond212 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockOperationEventNotification
          CFI Conditional ??CrossCallReturnLabel_314
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond213 Using cfiCommon0
          CFI (cfiCond213) Function zclClosures_ProcessInDoorLockGetLogRecordRsp
          CFI (cfiCond213) Conditional ??CrossCallReturnLabel_311
          CFI (cfiCond213) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond213) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond213) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond213) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond213) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond213) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond213) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond213) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond213) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond213) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond213) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond213) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond213) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond213) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond213) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond213) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond213) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond213) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond213) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond213) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond213) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond213) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond213) CFA_SP SP+-2
          CFI (cfiCond213) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond214 Using cfiCommon0
          CFI (cfiCond214) Function zclClosures_ProcessInDoorLockGetLogRecordRsp
          CFI (cfiCond214) Conditional ??CrossCallReturnLabel_312
          CFI (cfiCond214) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond214) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond214) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond214) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond214) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond214) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond214) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond214) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond214) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond214) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond214) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond214) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond214) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond214) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond214) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond214) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond214) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond214) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond214) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond214) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond214) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond214) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond214) CFA_SP SP+-2
          CFI (cfiCond214) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond215 Using cfiCommon0
          CFI (cfiCond215) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond215) Conditional ??CrossCallReturnLabel_313
          CFI (cfiCond215) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond215) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond215) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond215) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond215) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond215) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond215) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond215) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond215) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond215) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond215) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond215) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond215) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond215) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond215) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond215) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond215) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond215) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond215) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond215) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond215) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond215) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond215) CFA_SP SP+-2
          CFI (cfiCond215) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker216 Using cfiCommon1
          CFI (cfiPicker216) NoFunction
          CFI (cfiPicker216) Picker
        MOV       DPL,R6
        MOV       DPH,R7
        MOVX      A,@DPTR
        MOV       R0,A
        INC       DPTR
        MOVX      A,@DPTR
        XCH       A,R0
        RET
          CFI EndBlock cfiCond212
          CFI EndBlock cfiCond213
          CFI EndBlock cfiCond214
          CFI EndBlock cfiCond215
          CFI EndBlock cfiPicker216

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine54:
          CFI Block cfiCond217 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockCmds
          CFI Conditional ??CrossCallReturnLabel_125
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond218 Using cfiCommon0
          CFI (cfiCond218) Function zclClosures_ProcessInDoorLockGetLogRecordRsp
          CFI (cfiCond218) Conditional ??CrossCallReturnLabel_126
          CFI (cfiCond218) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond218) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond218) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond218) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond218) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond218) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond218) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond218) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond218) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond218) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond218) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond218) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond218) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond218) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond218) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond218) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond218) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond218) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond218) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond218) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond218) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond218) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond218) CFA_SP SP+-2
          CFI (cfiCond218) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker219 Using cfiCommon1
          CFI (cfiPicker219) NoFunction
          CFI (cfiPicker219) Picker
        LCALL     ?Subroutine92 & 0xFFFF
??CrossCallReturnLabel_270:
        RET
          CFI EndBlock cfiCond217
          CFI EndBlock cfiCond218
          CFI EndBlock cfiPicker219

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine92:
          CFI Block cfiCond220 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockCmds
          CFI Conditional ??CrossCallReturnLabel_271, ??CrossCallReturnLabel_266
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond221 Using cfiCommon0
          CFI (cfiCond221) Function zclClosures_ProcessInDoorLockCmds
          CFI (cfiCond221) Conditional ??CrossCallReturnLabel_271, ??CrossCallReturnLabel_267
          CFI (cfiCond221) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond221) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond221) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond221) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond221) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond221) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond221) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond221) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond221) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond221) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond221) CFA_SP SP+-4
          CFI (cfiCond221) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond222 Using cfiCommon0
          CFI (cfiCond222) Function zclClosures_ProcessInDoorLockUnlockWithTimeout
          CFI (cfiCond222) Conditional ??CrossCallReturnLabel_271, ??CrossCallReturnLabel_265
          CFI (cfiCond222) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond222) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond222) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond222) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond222) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond222) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond222) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond222) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond222) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond222) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond222) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond222) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond222) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond222) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond222) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond222) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond222) CFA_SP SP+-4
          CFI (cfiCond222) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond223 Using cfiCommon0
          CFI (cfiCond223) Function zclClosures_ProcessInDoorLockCmds
          CFI (cfiCond223) Conditional ??CrossCallReturnLabel_270, ??CrossCallReturnLabel_125
          CFI (cfiCond223) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond223) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond223) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond223) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond223) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond223) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond223) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond223) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond223) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond223) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond223) CFA_SP SP+-4
          CFI (cfiCond223) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond224 Using cfiCommon0
          CFI (cfiCond224) Function zclClosures_ProcessInDoorLockGetLogRecordRsp
          CFI (cfiCond224) Conditional ??CrossCallReturnLabel_270, ??CrossCallReturnLabel_126
          CFI (cfiCond224) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond224) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond224) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond224) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond224) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond224) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond224) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond224) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond224) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond224) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond224) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond224) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond224) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond224) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond224) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond224) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond224) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond224) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond224) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond224) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond224) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond224) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond224) CFA_SP SP+-4
          CFI (cfiCond224) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond225 Using cfiCommon0
          CFI (cfiCond225) Function zclClosures_ProcessInDoorLockSetPINCode
          CFI (cfiCond225) Conditional ??CrossCallReturnLabel_268, ??CrossCallReturnLabel_4
          CFI (cfiCond225) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond225) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond225) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond225) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond225) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond225) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond225) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond225) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond225) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond225) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond225) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond225) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond225) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond225) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond225) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond225) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond225) CFA_SP SP+-4
          CFI (cfiCond225) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond226 Using cfiCommon0
          CFI (cfiCond226) Function zclClosures_ProcessInDoorLockSetRFIDCode
          CFI (cfiCond226) Conditional ??CrossCallReturnLabel_268, ??CrossCallReturnLabel_5
          CFI (cfiCond226) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond226) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond226) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond226) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond226) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond226) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond226) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond226) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond226) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond226) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond226) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond226) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond226) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond226) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond226) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond226) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond226) CFA_SP SP+-4
          CFI (cfiCond226) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond227 Using cfiCommon0
          CFI (cfiCond227) Function zclClosures_ProcessInDoorLockGetPINCodeRsp
          CFI (cfiCond227) Conditional ??CrossCallReturnLabel_268, ??CrossCallReturnLabel_6
          CFI (cfiCond227) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond227) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond227) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond227) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond227) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond227) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond227) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond227) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond227) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond227) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond227) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond227) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond227) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond227) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond227) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond227) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond227) CFA_SP SP+-4
          CFI (cfiCond227) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond228 Using cfiCommon0
          CFI (cfiCond228) Function zclClosures_ProcessInDoorLockGetRFIDCodeRsp
          CFI (cfiCond228) Conditional ??CrossCallReturnLabel_268, ??CrossCallReturnLabel_7
          CFI (cfiCond228) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond228) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond228) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond228) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond228) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond228) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond228) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond228) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond228) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond228) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond228) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond228) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond228) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond228) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond228) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond228) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond228) CFA_SP SP+-4
          CFI (cfiCond228) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond229 Using cfiCommon0
          CFI (cfiCond229) Function zclClosures_ProcessInDoorLockOperationEventNotification
          CFI (cfiCond229) Conditional ??CrossCallReturnLabel_269, ??CrossCallReturnLabel_65
          CFI (cfiCond229) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond229) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond229) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond229) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond229) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond229) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond229) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond229) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond229) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond229) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond229) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond229) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond229) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond229) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond229) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond229) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond229) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond229) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond229) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond229) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond229) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond229) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond229) CFA_SP SP+-4
          CFI (cfiCond229) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond230 Using cfiCommon0
          CFI (cfiCond230) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond230) Conditional ??CrossCallReturnLabel_269, ??CrossCallReturnLabel_66
          CFI (cfiCond230) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond230) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond230) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond230) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond230) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond230) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond230) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond230) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond230) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond230) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond230) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond230) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond230) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond230) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond230) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond230) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond230) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond230) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond230) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond230) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond230) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond230) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond230) CFA_SP SP+-4
          CFI (cfiCond230) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker231 Using cfiCommon1
          CFI (cfiPicker231) NoFunction
          CFI (cfiPicker231) Picker
        LCALL     ?Subroutine117 & 0xFFFF
??CrossCallReturnLabel_337:
        MOV       DPL,R0
        MOV       DPH,R1
        RET
          CFI EndBlock cfiCond220
          CFI EndBlock cfiCond221
          CFI EndBlock cfiCond222
          CFI EndBlock cfiCond223
          CFI EndBlock cfiCond224
          CFI EndBlock cfiCond225
          CFI EndBlock cfiCond226
          CFI EndBlock cfiCond227
          CFI EndBlock cfiCond228
          CFI EndBlock cfiCond229
          CFI EndBlock cfiCond230
          CFI EndBlock cfiPicker231

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine37:
          CFI Block cfiCond232 Using cfiCommon0
          CFI Function zclClosures_RegisterDoorLockCmdCallbacks
          CFI Conditional ??CrossCallReturnLabel_83
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond233 Using cfiCommon0
          CFI (cfiCond233) Function zclClosures_RegisterDoorLockCmdCallbacks
          CFI (cfiCond233) Conditional ??CrossCallReturnLabel_84
          CFI (cfiCond233) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond233) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond233) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond233) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond233) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond233) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond233) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond233) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond233) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond233) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond233) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond233) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond233) CFA_SP SP+-2
          CFI (cfiCond233) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond234 Using cfiCommon0
          CFI (cfiCond234) Function zclClosures_ProcessInDoorLock
          CFI (cfiCond234) Conditional ??CrossCallReturnLabel_85
          CFI (cfiCond234) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond234) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond234) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond234) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond234) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond234) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond234) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond234) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond234) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond234) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond234) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond234) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond234) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond234) CFA_SP SP+-2
          CFI (cfiCond234) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond235 Using cfiCommon0
          CFI (cfiCond235) Function zclClosures_ProcessInDoorLockUnlockWithTimeout
          CFI (cfiCond235) Conditional ??CrossCallReturnLabel_86
          CFI (cfiCond235) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond235) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond235) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond235) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond235) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond235) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond235) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond235) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond235) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond235) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond235) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond235) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond235) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond235) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond235) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond235) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond235) CFA_SP SP+-2
          CFI (cfiCond235) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond236 Using cfiCommon0
          CFI (cfiCond236) Function zclClosures_ProcessInDoorLockSetPINCode
          CFI (cfiCond236) Conditional ??CrossCallReturnLabel_87
          CFI (cfiCond236) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond236) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond236) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond236) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond236) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond236) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond236) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond236) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond236) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond236) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond236) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond236) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond236) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond236) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond236) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond236) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond236) CFA_SP SP+-2
          CFI (cfiCond236) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond237 Using cfiCommon0
          CFI (cfiCond237) Function zclClosures_ProcessInDoorLockSetRFIDCode
          CFI (cfiCond237) Conditional ??CrossCallReturnLabel_88
          CFI (cfiCond237) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond237) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond237) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond237) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond237) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond237) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond237) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond237) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond237) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond237) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond237) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond237) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond237) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond237) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond237) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond237) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond237) CFA_SP SP+-2
          CFI (cfiCond237) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond238 Using cfiCommon0
          CFI (cfiCond238) Function zclClosures_ProcessInDoorLockGetLogRecordRsp
          CFI (cfiCond238) Conditional ??CrossCallReturnLabel_89
          CFI (cfiCond238) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond238) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond238) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond238) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond238) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond238) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond238) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond238) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond238) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond238) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond238) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond238) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond238) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond238) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond238) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond238) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond238) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond238) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond238) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond238) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond238) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond238) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond238) CFA_SP SP+-2
          CFI (cfiCond238) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond239 Using cfiCommon0
          CFI (cfiCond239) Function zclClosures_ProcessInDoorLockGetPINCodeRsp
          CFI (cfiCond239) Conditional ??CrossCallReturnLabel_90
          CFI (cfiCond239) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond239) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond239) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond239) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond239) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond239) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond239) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond239) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond239) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond239) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond239) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond239) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond239) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond239) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond239) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond239) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond239) CFA_SP SP+-2
          CFI (cfiCond239) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond240 Using cfiCommon0
          CFI (cfiCond240) Function zclClosures_ProcessInDoorLockGetRFIDCodeRsp
          CFI (cfiCond240) Conditional ??CrossCallReturnLabel_91
          CFI (cfiCond240) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond240) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond240) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond240) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond240) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond240) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond240) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond240) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond240) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond240) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond240) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond240) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond240) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond240) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond240) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond240) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond240) CFA_SP SP+-2
          CFI (cfiCond240) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond241 Using cfiCommon0
          CFI (cfiCond241) Function zclClosures_ProcessInDoorLockOperationEventNotification
          CFI (cfiCond241) Conditional ??CrossCallReturnLabel_92
          CFI (cfiCond241) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond241) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond241) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond241) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond241) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond241) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond241) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond241) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond241) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond241) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond241) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond241) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond241) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond241) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond241) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond241) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond241) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond241) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond241) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond241) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond241) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond241) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond241) CFA_SP SP+-2
          CFI (cfiCond241) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond242 Using cfiCommon0
          CFI (cfiCond242) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond242) Conditional ??CrossCallReturnLabel_93
          CFI (cfiCond242) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond242) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond242) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond242) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond242) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond242) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond242) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond242) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond242) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond242) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond242) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond242) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond242) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond242) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond242) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond242) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond242) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond242) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond242) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond242) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond242) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond242) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond242) CFA_SP SP+-2
          CFI (cfiCond242) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker243 Using cfiCommon1
          CFI (cfiPicker243) NoFunction
          CFI (cfiPicker243) Picker
        MOVX      A,@DPTR
        MOV       R2,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R3,A
        RET
          CFI EndBlock cfiCond232
          CFI EndBlock cfiCond233
          CFI EndBlock cfiCond234
          CFI EndBlock cfiCond235
          CFI EndBlock cfiCond236
          CFI EndBlock cfiCond237
          CFI EndBlock cfiCond238
          CFI EndBlock cfiCond239
          CFI EndBlock cfiCond240
          CFI EndBlock cfiCond241
          CFI EndBlock cfiCond242
          CFI EndBlock cfiPicker243

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine17:
          CFI Block cfiCond244 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockUnlockWithTimeout
          CFI Conditional ??CrossCallReturnLabel_327
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond245 Using cfiCommon0
          CFI (cfiCond245) Function zclClosures_ProcessInDoorLockSetPINCode
          CFI (cfiCond245) Conditional ??CrossCallReturnLabel_328
          CFI (cfiCond245) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond245) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond245) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond245) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond245) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond245) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond245) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond245) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond245) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond245) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond245) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond245) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond245) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond245) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond245) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond245) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond245) CFA_SP SP+-2
          CFI (cfiCond245) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond246 Using cfiCommon0
          CFI (cfiCond246) Function zclClosures_ProcessInDoorLockSetRFIDCode
          CFI (cfiCond246) Conditional ??CrossCallReturnLabel_329
          CFI (cfiCond246) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond246) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond246) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond246) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond246) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond246) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond246) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond246) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond246) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond246) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond246) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond246) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond246) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond246) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond246) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond246) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond246) CFA_SP SP+-2
          CFI (cfiCond246) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond247 Using cfiCommon0
          CFI (cfiCond247) Function zclClosures_ProcessInDoorLockGetPINCodeRsp
          CFI (cfiCond247) Conditional ??CrossCallReturnLabel_330
          CFI (cfiCond247) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond247) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond247) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond247) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond247) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond247) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond247) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond247) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond247) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond247) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond247) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond247) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond247) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond247) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond247) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond247) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond247) CFA_SP SP+-2
          CFI (cfiCond247) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond248 Using cfiCommon0
          CFI (cfiCond248) Function zclClosures_ProcessInDoorLockGetRFIDCodeRsp
          CFI (cfiCond248) Conditional ??CrossCallReturnLabel_331
          CFI (cfiCond248) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond248) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond248) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond248) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond248) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond248) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond248) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond248) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond248) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond248) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond248) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond248) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond248) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond248) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond248) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond248) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond248) CFA_SP SP+-2
          CFI (cfiCond248) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker249 Using cfiCommon1
          CFI (cfiPicker249) NoFunction
          CFI (cfiPicker249) Picker
        MOV       R0,A
        CLR       A
        ADDC      A,R5
        MOV       R1,A
        MOV       ?V0,R0
        MOV       ?V1,R1
        MOV       DPL,R0
          CFI EndBlock cfiCond244
          CFI EndBlock cfiCond245
          CFI EndBlock cfiCond246
          CFI EndBlock cfiCond247
          CFI EndBlock cfiCond248
          CFI EndBlock cfiPicker249
        REQUIRE ??Subroutine143_0
        ; // Fall through to label ??Subroutine143_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine143_0:
          CFI Block cfiCond250 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockGetLogRecordRsp
          CFI Conditional ??CrossCallReturnLabel_324
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond251 Using cfiCommon0
          CFI (cfiCond251) Function zclClosures_ProcessInDoorLockOperationEventNotification
          CFI (cfiCond251) Conditional ??CrossCallReturnLabel_325
          CFI (cfiCond251) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond251) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond251) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond251) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond251) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond251) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond251) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond251) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond251) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond251) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond251) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond251) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond251) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond251) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond251) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond251) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond251) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond251) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond251) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond251) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond251) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond251) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond251) CFA_SP SP+-2
          CFI (cfiCond251) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond252 Using cfiCommon0
          CFI (cfiCond252) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond252) Conditional ??CrossCallReturnLabel_326
          CFI (cfiCond252) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond252) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond252) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond252) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond252) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond252) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond252) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond252) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond252) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond252) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond252) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond252) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond252) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond252) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond252) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond252) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond252) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond252) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond252) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond252) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond252) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond252) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond252) CFA_SP SP+-2
          CFI (cfiCond252) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond253 Using cfiCommon0
          CFI (cfiCond253) Function zclClosures_ProcessInDoorLockUnlockWithTimeout
          CFI (cfiCond253) Conditional ??CrossCallReturnLabel_327
          CFI (cfiCond253) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond253) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond253) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond253) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond253) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond253) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond253) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond253) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond253) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond253) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond253) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond253) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond253) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond253) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond253) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond253) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond253) CFA_SP SP+-2
          CFI (cfiCond253) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond254 Using cfiCommon0
          CFI (cfiCond254) Function zclClosures_ProcessInDoorLockSetPINCode
          CFI (cfiCond254) Conditional ??CrossCallReturnLabel_328
          CFI (cfiCond254) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond254) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond254) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond254) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond254) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond254) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond254) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond254) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond254) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond254) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond254) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond254) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond254) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond254) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond254) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond254) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond254) CFA_SP SP+-2
          CFI (cfiCond254) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond255 Using cfiCommon0
          CFI (cfiCond255) Function zclClosures_ProcessInDoorLockSetRFIDCode
          CFI (cfiCond255) Conditional ??CrossCallReturnLabel_329
          CFI (cfiCond255) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond255) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond255) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond255) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond255) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond255) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond255) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond255) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond255) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond255) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond255) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond255) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond255) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond255) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond255) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond255) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond255) CFA_SP SP+-2
          CFI (cfiCond255) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond256 Using cfiCommon0
          CFI (cfiCond256) Function zclClosures_ProcessInDoorLockGetPINCodeRsp
          CFI (cfiCond256) Conditional ??CrossCallReturnLabel_330
          CFI (cfiCond256) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond256) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond256) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond256) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond256) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond256) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond256) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond256) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond256) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond256) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond256) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond256) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond256) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond256) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond256) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond256) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond256) CFA_SP SP+-2
          CFI (cfiCond256) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond257 Using cfiCommon0
          CFI (cfiCond257) Function zclClosures_ProcessInDoorLockGetRFIDCodeRsp
          CFI (cfiCond257) Conditional ??CrossCallReturnLabel_331
          CFI (cfiCond257) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond257) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond257) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond257) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond257) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond257) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond257) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond257) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond257) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond257) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond257) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond257) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond257) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond257) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond257) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond257) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond257) CFA_SP SP+-2
          CFI (cfiCond257) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker258 Using cfiCommon1
          CFI (cfiPicker258) NoFunction
          CFI (cfiPicker258) Picker
        MOV       DPH,A
          CFI EndBlock cfiCond250
          CFI EndBlock cfiCond251
          CFI EndBlock cfiCond252
          CFI EndBlock cfiCond253
          CFI EndBlock cfiCond254
          CFI EndBlock cfiCond255
          CFI EndBlock cfiCond256
          CFI EndBlock cfiCond257
          CFI EndBlock cfiPicker258
        REQUIRE ??Subroutine144_0
        ; // Fall through to label ??Subroutine144_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine144_0:
          CFI Block cfiCond259 Using cfiCommon0
          CFI Function zclClosures_HdlIncoming
          CFI Conditional ??CrossCallReturnLabel_315
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond260 Using cfiCommon0
          CFI (cfiCond260) Function zclClosures_ProcessInDoorLockCmds
          CFI (cfiCond260) Conditional ??CrossCallReturnLabel_316
          CFI (cfiCond260) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond260) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond260) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond260) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond260) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond260) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond260) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond260) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond260) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond260) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond260) CFA_SP SP+-2
          CFI (cfiCond260) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond261 Using cfiCommon0
          CFI (cfiCond261) Function zclClosures_ProcessInDoorLockCmds
          CFI (cfiCond261) Conditional ??CrossCallReturnLabel_317
          CFI (cfiCond261) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond261) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond261) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond261) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond261) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond261) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond261) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond261) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond261) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond261) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond261) CFA_SP SP+-2
          CFI (cfiCond261) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond262 Using cfiCommon0
          CFI (cfiCond262) Function zclClosures_ProcessInDoorLock
          CFI (cfiCond262) Conditional ??CrossCallReturnLabel_318
          CFI (cfiCond262) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond262) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond262) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond262) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond262) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond262) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond262) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond262) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond262) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond262) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond262) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond262) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond262) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond262) CFA_SP SP+-2
          CFI (cfiCond262) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond263 Using cfiCommon0
          CFI (cfiCond263) Function zclClosures_ProcessInDoorLock
          CFI (cfiCond263) Conditional ??CrossCallReturnLabel_319
          CFI (cfiCond263) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond263) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond263) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond263) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond263) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond263) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond263) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond263) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond263) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond263) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond263) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond263) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond263) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond263) CFA_SP SP+-2
          CFI (cfiCond263) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond264 Using cfiCommon0
          CFI (cfiCond264) Function zclClosures_ProcessInDoorLockSetYearDaySchedule
          CFI (cfiCond264) Conditional ??CrossCallReturnLabel_320
          CFI (cfiCond264) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond264) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond264) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond264) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond264) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond264) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond264) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond264) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond264) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond264) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond264) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond264) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond264) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond264) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond264) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond264) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond264) CFA_SP SP+-2
          CFI (cfiCond264) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond265 Using cfiCommon0
          CFI (cfiCond265) Function zclClosures_ProcessInDoorLockSetHolidaySchedule
          CFI (cfiCond265) Conditional ??CrossCallReturnLabel_321
          CFI (cfiCond265) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond265) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond265) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond265) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond265) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond265) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond265) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond265) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond265) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond265) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond265) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond265) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond265) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond265) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond265) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond265) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond265) CFA_SP SP+-2
          CFI (cfiCond265) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond266 Using cfiCommon0
          CFI (cfiCond266) Function zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
          CFI (cfiCond266) Conditional ??CrossCallReturnLabel_322
          CFI (cfiCond266) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond266) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond266) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond266) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond266) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond266) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond266) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond266) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond266) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond266) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond266) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond266) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond266) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond266) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond266) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond266) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond266) CFA_SP SP+-2
          CFI (cfiCond266) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond267 Using cfiCommon0
          CFI (cfiCond267) Function zclClosures_ProcessInDoorLockGetHolidayScheduleRsp
          CFI (cfiCond267) Conditional ??CrossCallReturnLabel_323
          CFI (cfiCond267) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond267) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond267) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond267) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond267) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond267) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond267) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond267) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond267) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond267) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond267) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond267) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond267) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond267) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond267) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond267) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond267) CFA_SP SP+-2
          CFI (cfiCond267) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond268 Using cfiCommon0
          CFI (cfiCond268) Function zclClosures_ProcessInDoorLockGetLogRecordRsp
          CFI (cfiCond268) Conditional ??CrossCallReturnLabel_324
          CFI (cfiCond268) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond268) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond268) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond268) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond268) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond268) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond268) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond268) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond268) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond268) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond268) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond268) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond268) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond268) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond268) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond268) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond268) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond268) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond268) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond268) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond268) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond268) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond268) CFA_SP SP+-2
          CFI (cfiCond268) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond269 Using cfiCommon0
          CFI (cfiCond269) Function zclClosures_ProcessInDoorLockOperationEventNotification
          CFI (cfiCond269) Conditional ??CrossCallReturnLabel_325
          CFI (cfiCond269) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond269) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond269) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond269) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond269) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond269) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond269) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond269) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond269) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond269) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond269) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond269) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond269) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond269) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond269) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond269) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond269) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond269) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond269) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond269) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond269) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond269) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond269) CFA_SP SP+-2
          CFI (cfiCond269) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond270 Using cfiCommon0
          CFI (cfiCond270) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond270) Conditional ??CrossCallReturnLabel_326
          CFI (cfiCond270) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond270) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond270) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond270) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond270) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond270) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond270) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond270) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond270) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond270) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond270) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond270) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond270) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond270) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond270) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond270) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond270) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond270) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond270) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond270) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond270) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond270) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond270) CFA_SP SP+-2
          CFI (cfiCond270) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond271 Using cfiCommon0
          CFI (cfiCond271) Function zclClosures_ProcessInDoorLockUnlockWithTimeout
          CFI (cfiCond271) Conditional ??CrossCallReturnLabel_327
          CFI (cfiCond271) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond271) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond271) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond271) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond271) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond271) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond271) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond271) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond271) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond271) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond271) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond271) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond271) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond271) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond271) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond271) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond271) CFA_SP SP+-2
          CFI (cfiCond271) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond272 Using cfiCommon0
          CFI (cfiCond272) Function zclClosures_ProcessInDoorLockSetPINCode
          CFI (cfiCond272) Conditional ??CrossCallReturnLabel_328
          CFI (cfiCond272) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond272) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond272) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond272) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond272) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond272) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond272) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond272) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond272) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond272) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond272) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond272) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond272) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond272) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond272) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond272) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond272) CFA_SP SP+-2
          CFI (cfiCond272) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond273 Using cfiCommon0
          CFI (cfiCond273) Function zclClosures_ProcessInDoorLockSetRFIDCode
          CFI (cfiCond273) Conditional ??CrossCallReturnLabel_329
          CFI (cfiCond273) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond273) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond273) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond273) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond273) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond273) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond273) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond273) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond273) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond273) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond273) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond273) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond273) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond273) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond273) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond273) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond273) CFA_SP SP+-2
          CFI (cfiCond273) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond274 Using cfiCommon0
          CFI (cfiCond274) Function zclClosures_ProcessInDoorLockGetPINCodeRsp
          CFI (cfiCond274) Conditional ??CrossCallReturnLabel_330
          CFI (cfiCond274) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond274) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond274) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond274) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond274) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond274) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond274) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond274) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond274) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond274) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond274) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond274) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond274) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond274) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond274) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond274) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond274) CFA_SP SP+-2
          CFI (cfiCond274) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond275 Using cfiCommon0
          CFI (cfiCond275) Function zclClosures_ProcessInDoorLockGetRFIDCodeRsp
          CFI (cfiCond275) Conditional ??CrossCallReturnLabel_331
          CFI (cfiCond275) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond275) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond275) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond275) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond275) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond275) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond275) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond275) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond275) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond275) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond275) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond275) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond275) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond275) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond275) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond275) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond275) CFA_SP SP+-2
          CFI (cfiCond275) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker276 Using cfiCommon1
          CFI (cfiPicker276) NoFunction
          CFI (cfiPicker276) Picker
        LCALL     ?Subroutine100 & 0xFFFF
??CrossCallReturnLabel_334:
        ORL       A,R1
        RET
          CFI EndBlock cfiCond259
          CFI EndBlock cfiCond260
          CFI EndBlock cfiCond261
          CFI EndBlock cfiCond262
          CFI EndBlock cfiCond263
          CFI EndBlock cfiCond264
          CFI EndBlock cfiCond265
          CFI EndBlock cfiCond266
          CFI EndBlock cfiCond267
          CFI EndBlock cfiCond268
          CFI EndBlock cfiCond269
          CFI EndBlock cfiCond270
          CFI EndBlock cfiCond271
          CFI EndBlock cfiCond272
          CFI EndBlock cfiCond273
          CFI EndBlock cfiCond274
          CFI EndBlock cfiCond275
          CFI EndBlock cfiPicker276

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine100:
          CFI Block cfiCond277 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockCmds
          CFI Conditional ??CrossCallReturnLabel_333, ??CrossCallReturnLabel_273
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond278 Using cfiCommon0
          CFI (cfiCond278) Function zclClosures_ProcessInDoorLockCmds
          CFI (cfiCond278) Conditional ??CrossCallReturnLabel_333, ??CrossCallReturnLabel_274
          CFI (cfiCond278) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond278) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond278) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond278) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond278) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond278) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond278) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond278) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond278) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond278) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond278) CFA_SP SP+-4
          CFI (cfiCond278) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond279 Using cfiCommon0
          CFI (cfiCond279) Function zclClosures_ProcessInDoorLockCmds
          CFI (cfiCond279) Conditional ??CrossCallReturnLabel_333, ??CrossCallReturnLabel_275
          CFI (cfiCond279) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond279) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond279) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond279) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond279) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond279) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond279) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond279) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond279) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond279) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond279) CFA_SP SP+-4
          CFI (cfiCond279) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond280 Using cfiCommon0
          CFI (cfiCond280) Function zclClosures_ProcessInDoorLock
          CFI (cfiCond280) Conditional ??CrossCallReturnLabel_333, ??CrossCallReturnLabel_272
          CFI (cfiCond280) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond280) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond280) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond280) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond280) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond280) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond280) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond280) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond280) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond280) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond280) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond280) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond280) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond280) CFA_SP SP+-4
          CFI (cfiCond280) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond281 Using cfiCommon0
          CFI (cfiCond281) Function zclClosures_ProcessInDoorLockUnlockWithTimeout
          CFI (cfiCond281) Conditional ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_327
          CFI (cfiCond281) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond281) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond281) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond281) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond281) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond281) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond281) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond281) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond281) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond281) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond281) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond281) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond281) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond281) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond281) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond281) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond281) CFA_SP SP+-4
          CFI (cfiCond281) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond282 Using cfiCommon0
          CFI (cfiCond282) Function zclClosures_ProcessInDoorLockSetPINCode
          CFI (cfiCond282) Conditional ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_328
          CFI (cfiCond282) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond282) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond282) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond282) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond282) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond282) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond282) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond282) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond282) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond282) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond282) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond282) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond282) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond282) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond282) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond282) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond282) CFA_SP SP+-4
          CFI (cfiCond282) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond283 Using cfiCommon0
          CFI (cfiCond283) Function zclClosures_ProcessInDoorLockSetRFIDCode
          CFI (cfiCond283) Conditional ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_329
          CFI (cfiCond283) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond283) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond283) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond283) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond283) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond283) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond283) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond283) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond283) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond283) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond283) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond283) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond283) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond283) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond283) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond283) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond283) CFA_SP SP+-4
          CFI (cfiCond283) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond284 Using cfiCommon0
          CFI (cfiCond284) Function zclClosures_ProcessInDoorLockGetPINCodeRsp
          CFI (cfiCond284) Conditional ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_330
          CFI (cfiCond284) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond284) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond284) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond284) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond284) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond284) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond284) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond284) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond284) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond284) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond284) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond284) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond284) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond284) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond284) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond284) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond284) CFA_SP SP+-4
          CFI (cfiCond284) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond285 Using cfiCommon0
          CFI (cfiCond285) Function zclClosures_ProcessInDoorLockGetRFIDCodeRsp
          CFI (cfiCond285) Conditional ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_331
          CFI (cfiCond285) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond285) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond285) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond285) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond285) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond285) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond285) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond285) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond285) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond285) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond285) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond285) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond285) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond285) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond285) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond285) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond285) CFA_SP SP+-4
          CFI (cfiCond285) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond286 Using cfiCommon0
          CFI (cfiCond286) Function zclClosures_ProcessInDoorLockGetLogRecordRsp
          CFI (cfiCond286) Conditional ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_324
          CFI (cfiCond286) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond286) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond286) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond286) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond286) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond286) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond286) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond286) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond286) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond286) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond286) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond286) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond286) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond286) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond286) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond286) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond286) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond286) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond286) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond286) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond286) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond286) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond286) CFA_SP SP+-4
          CFI (cfiCond286) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond287 Using cfiCommon0
          CFI (cfiCond287) Function zclClosures_ProcessInDoorLockOperationEventNotification
          CFI (cfiCond287) Conditional ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_325
          CFI (cfiCond287) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond287) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond287) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond287) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond287) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond287) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond287) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond287) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond287) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond287) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond287) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond287) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond287) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond287) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond287) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond287) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond287) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond287) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond287) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond287) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond287) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond287) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond287) CFA_SP SP+-4
          CFI (cfiCond287) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond288 Using cfiCommon0
          CFI (cfiCond288) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond288) Conditional ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_326
          CFI (cfiCond288) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond288) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond288) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond288) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond288) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond288) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond288) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond288) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond288) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond288) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond288) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond288) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond288) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond288) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond288) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond288) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond288) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond288) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond288) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond288) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond288) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond288) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond288) CFA_SP SP+-4
          CFI (cfiCond288) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond289 Using cfiCommon0
          CFI (cfiCond289) Function zclClosures_HdlIncoming
          CFI (cfiCond289) Conditional ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_315
          CFI (cfiCond289) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond289) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond289) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond289) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond289) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond289) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond289) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond289) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond289) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond289) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond289) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond289) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond289) CFA_SP SP+-4
          CFI (cfiCond289) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond290 Using cfiCommon0
          CFI (cfiCond290) Function zclClosures_ProcessInDoorLockCmds
          CFI (cfiCond290) Conditional ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_316
          CFI (cfiCond290) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond290) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond290) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond290) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond290) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond290) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond290) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond290) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond290) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond290) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond290) CFA_SP SP+-4
          CFI (cfiCond290) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond291 Using cfiCommon0
          CFI (cfiCond291) Function zclClosures_ProcessInDoorLockCmds
          CFI (cfiCond291) Conditional ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_317
          CFI (cfiCond291) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond291) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond291) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond291) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond291) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond291) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond291) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond291) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond291) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond291) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond291) CFA_SP SP+-4
          CFI (cfiCond291) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond292 Using cfiCommon0
          CFI (cfiCond292) Function zclClosures_ProcessInDoorLock
          CFI (cfiCond292) Conditional ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_318
          CFI (cfiCond292) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond292) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond292) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond292) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond292) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond292) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond292) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond292) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond292) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond292) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond292) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond292) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond292) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond292) CFA_SP SP+-4
          CFI (cfiCond292) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond293 Using cfiCommon0
          CFI (cfiCond293) Function zclClosures_ProcessInDoorLock
          CFI (cfiCond293) Conditional ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_319
          CFI (cfiCond293) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond293) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond293) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond293) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond293) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond293) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond293) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond293) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond293) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond293) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond293) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond293) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond293) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond293) CFA_SP SP+-4
          CFI (cfiCond293) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond294 Using cfiCommon0
          CFI (cfiCond294) Function zclClosures_ProcessInDoorLockSetYearDaySchedule
          CFI (cfiCond294) Conditional ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_320
          CFI (cfiCond294) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond294) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond294) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond294) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond294) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond294) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond294) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond294) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond294) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond294) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond294) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond294) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond294) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond294) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond294) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond294) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond294) CFA_SP SP+-4
          CFI (cfiCond294) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond295 Using cfiCommon0
          CFI (cfiCond295) Function zclClosures_ProcessInDoorLockSetHolidaySchedule
          CFI (cfiCond295) Conditional ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_321
          CFI (cfiCond295) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond295) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond295) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond295) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond295) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond295) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond295) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond295) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond295) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond295) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond295) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond295) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond295) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond295) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond295) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond295) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond295) CFA_SP SP+-4
          CFI (cfiCond295) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond296 Using cfiCommon0
          CFI (cfiCond296) Function zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
          CFI (cfiCond296) Conditional ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_322
          CFI (cfiCond296) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond296) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond296) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond296) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond296) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond296) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond296) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond296) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond296) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond296) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond296) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond296) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond296) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond296) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond296) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond296) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond296) CFA_SP SP+-4
          CFI (cfiCond296) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond297 Using cfiCommon0
          CFI (cfiCond297) Function zclClosures_ProcessInDoorLockGetHolidayScheduleRsp
          CFI (cfiCond297) Conditional ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_323
          CFI (cfiCond297) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond297) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond297) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond297) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond297) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond297) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond297) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond297) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond297) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond297) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond297) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond297) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond297) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond297) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond297) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond297) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond297) CFA_SP SP+-4
          CFI (cfiCond297) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond298 Using cfiCommon0
          CFI (cfiCond298) Function zclClosures_SendDoorLockUserIDRequest
          CFI (cfiCond298) Conditional ??CrossCallReturnLabel_332
          CFI (cfiCond298) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond298) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond298) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond298) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond298) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond298) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond298) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond298) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond298) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond298) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond298) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond298) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond298) CFA_SP SP+-2
          CFI (cfiCond298) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker299 Using cfiCommon1
          CFI (cfiPicker299) NoFunction
          CFI (cfiPicker299) Picker
        LCALL     ?Subroutine117 & 0xFFFF
??CrossCallReturnLabel_338:
        MOV       A,R0
        RET
          CFI EndBlock cfiCond277
          CFI EndBlock cfiCond278
          CFI EndBlock cfiCond279
          CFI EndBlock cfiCond280
          CFI EndBlock cfiCond281
          CFI EndBlock cfiCond282
          CFI EndBlock cfiCond283
          CFI EndBlock cfiCond284
          CFI EndBlock cfiCond285
          CFI EndBlock cfiCond286
          CFI EndBlock cfiCond287
          CFI EndBlock cfiCond288
          CFI EndBlock cfiCond289
          CFI EndBlock cfiCond290
          CFI EndBlock cfiCond291
          CFI EndBlock cfiCond292
          CFI EndBlock cfiCond293
          CFI EndBlock cfiCond294
          CFI EndBlock cfiCond295
          CFI EndBlock cfiCond296
          CFI EndBlock cfiCond297
          CFI EndBlock cfiCond298
          CFI EndBlock cfiPicker299

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine117:
          CFI Block cfiCond300 Using cfiCommon0
          CFI Function zclClosures_HdlIncoming
          CFI Conditional ??CrossCallReturnLabel_336, ??CrossCallReturnLabel_223
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond301 Using cfiCommon0
          CFI (cfiCond301) Function zclClosures_ProcessInDoorLockCmds
          CFI (cfiCond301) Conditional ??CrossCallReturnLabel_336, ??CrossCallReturnLabel_224, ??CrossCallReturnLabel_116
          CFI (cfiCond301) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond301) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond301) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond301) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond301) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond301) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond301) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond301) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond301) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond301) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond301) CFA_SP SP+-6
          CFI (cfiCond301) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond302 Using cfiCommon0
          CFI (cfiCond302) Function zclClosures_ProcessInDoorLockCmds
          CFI (cfiCond302) Conditional ??CrossCallReturnLabel_336, ??CrossCallReturnLabel_224, ??CrossCallReturnLabel_117
          CFI (cfiCond302) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond302) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond302) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond302) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond302) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond302) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond302) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond302) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond302) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond302) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond302) CFA_SP SP+-6
          CFI (cfiCond302) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond303 Using cfiCommon0
          CFI (cfiCond303) Function zclClosures_ProcessInDoorLockCmds
          CFI (cfiCond303) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_271, ??CrossCallReturnLabel_266
          CFI (cfiCond303) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond303) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond303) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond303) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond303) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond303) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond303) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond303) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond303) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond303) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond303) CFA_SP SP+-6
          CFI (cfiCond303) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond304 Using cfiCommon0
          CFI (cfiCond304) Function zclClosures_ProcessInDoorLockCmds
          CFI (cfiCond304) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_271, ??CrossCallReturnLabel_267
          CFI (cfiCond304) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond304) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond304) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond304) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond304) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond304) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond304) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond304) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond304) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond304) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond304) CFA_SP SP+-6
          CFI (cfiCond304) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond305 Using cfiCommon0
          CFI (cfiCond305) Function zclClosures_ProcessInDoorLockUnlockWithTimeout
          CFI (cfiCond305) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_271, ??CrossCallReturnLabel_265
          CFI (cfiCond305) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond305) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond305) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond305) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond305) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond305) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond305) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond305) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond305) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond305) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond305) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond305) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond305) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond305) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond305) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond305) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond305) CFA_SP SP+-6
          CFI (cfiCond305) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond306 Using cfiCommon0
          CFI (cfiCond306) Function zclClosures_ProcessInDoorLockCmds
          CFI (cfiCond306) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_270, ??CrossCallReturnLabel_125
          CFI (cfiCond306) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond306) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond306) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond306) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond306) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond306) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond306) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond306) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond306) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond306) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond306) CFA_SP SP+-6
          CFI (cfiCond306) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond307 Using cfiCommon0
          CFI (cfiCond307) Function zclClosures_ProcessInDoorLockGetLogRecordRsp
          CFI (cfiCond307) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_270, ??CrossCallReturnLabel_126
          CFI (cfiCond307) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond307) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond307) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond307) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond307) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond307) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond307) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond307) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond307) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond307) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond307) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond307) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond307) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond307) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond307) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond307) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond307) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond307) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond307) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond307) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond307) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond307) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond307) CFA_SP SP+-6
          CFI (cfiCond307) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond308 Using cfiCommon0
          CFI (cfiCond308) Function zclClosures_ProcessInDoorLockSetPINCode
          CFI (cfiCond308) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_268, ??CrossCallReturnLabel_4
          CFI (cfiCond308) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond308) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond308) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond308) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond308) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond308) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond308) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond308) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond308) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond308) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond308) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond308) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond308) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond308) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond308) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond308) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond308) CFA_SP SP+-6
          CFI (cfiCond308) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond309 Using cfiCommon0
          CFI (cfiCond309) Function zclClosures_ProcessInDoorLockSetRFIDCode
          CFI (cfiCond309) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_268, ??CrossCallReturnLabel_5
          CFI (cfiCond309) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond309) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond309) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond309) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond309) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond309) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond309) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond309) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond309) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond309) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond309) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond309) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond309) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond309) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond309) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond309) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond309) CFA_SP SP+-6
          CFI (cfiCond309) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond310 Using cfiCommon0
          CFI (cfiCond310) Function zclClosures_ProcessInDoorLockGetPINCodeRsp
          CFI (cfiCond310) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_268, ??CrossCallReturnLabel_6
          CFI (cfiCond310) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond310) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond310) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond310) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond310) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond310) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond310) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond310) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond310) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond310) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond310) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond310) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond310) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond310) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond310) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond310) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond310) CFA_SP SP+-6
          CFI (cfiCond310) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond311 Using cfiCommon0
          CFI (cfiCond311) Function zclClosures_ProcessInDoorLockGetRFIDCodeRsp
          CFI (cfiCond311) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_268, ??CrossCallReturnLabel_7
          CFI (cfiCond311) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond311) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond311) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond311) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond311) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond311) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond311) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond311) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond311) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond311) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond311) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond311) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond311) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond311) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond311) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond311) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond311) CFA_SP SP+-6
          CFI (cfiCond311) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond312 Using cfiCommon0
          CFI (cfiCond312) Function zclClosures_ProcessInDoorLockOperationEventNotification
          CFI (cfiCond312) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_269, ??CrossCallReturnLabel_65
          CFI (cfiCond312) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond312) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond312) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond312) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond312) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond312) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond312) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond312) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond312) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond312) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond312) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond312) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond312) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond312) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond312) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond312) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond312) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond312) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond312) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond312) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond312) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond312) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond312) CFA_SP SP+-6
          CFI (cfiCond312) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond313 Using cfiCommon0
          CFI (cfiCond313) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond313) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_269, ??CrossCallReturnLabel_66
          CFI (cfiCond313) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond313) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond313) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond313) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond313) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond313) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond313) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond313) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond313) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond313) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond313) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond313) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond313) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond313) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond313) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond313) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond313) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond313) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond313) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond313) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond313) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond313) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond313) CFA_SP SP+-6
          CFI (cfiCond313) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond314 Using cfiCommon0
          CFI (cfiCond314) Function zclClosures_ProcessInDoorLockCmds
          CFI (cfiCond314) Conditional ??CrossCallReturnLabel_338, ??CrossCallReturnLabel_333, ??CrossCallReturnLabel_273
          CFI (cfiCond314) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond314) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond314) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond314) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond314) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond314) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond314) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond314) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond314) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond314) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond314) CFA_SP SP+-6
          CFI (cfiCond314) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond315 Using cfiCommon0
          CFI (cfiCond315) Function zclClosures_ProcessInDoorLockCmds
          CFI (cfiCond315) Conditional ??CrossCallReturnLabel_338, ??CrossCallReturnLabel_333, ??CrossCallReturnLabel_274
          CFI (cfiCond315) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond315) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond315) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond315) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond315) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond315) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond315) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond315) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond315) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond315) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond315) CFA_SP SP+-6
          CFI (cfiCond315) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond316 Using cfiCommon0
          CFI (cfiCond316) Function zclClosures_ProcessInDoorLockCmds
          CFI (cfiCond316) Conditional ??CrossCallReturnLabel_338, ??CrossCallReturnLabel_333, ??CrossCallReturnLabel_275
          CFI (cfiCond316) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond316) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond316) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond316) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond316) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond316) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond316) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond316) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond316) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond316) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond316) CFA_SP SP+-6
          CFI (cfiCond316) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond317 Using cfiCommon0
          CFI (cfiCond317) Function zclClosures_ProcessInDoorLock
          CFI (cfiCond317) Conditional ??CrossCallReturnLabel_338, ??CrossCallReturnLabel_333, ??CrossCallReturnLabel_272
          CFI (cfiCond317) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond317) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond317) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond317) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond317) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond317) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond317) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond317) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond317) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond317) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond317) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond317) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond317) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond317) CFA_SP SP+-6
          CFI (cfiCond317) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond318 Using cfiCommon0
          CFI (cfiCond318) Function zclClosures_ProcessInDoorLockUnlockWithTimeout
          CFI (cfiCond318) Conditional ??CrossCallReturnLabel_338, ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_327
          CFI (cfiCond318) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond318) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond318) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond318) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond318) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond318) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond318) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond318) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond318) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond318) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond318) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond318) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond318) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond318) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond318) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond318) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond318) CFA_SP SP+-6
          CFI (cfiCond318) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond319 Using cfiCommon0
          CFI (cfiCond319) Function zclClosures_ProcessInDoorLockSetPINCode
          CFI (cfiCond319) Conditional ??CrossCallReturnLabel_338, ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_328
          CFI (cfiCond319) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond319) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond319) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond319) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond319) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond319) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond319) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond319) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond319) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond319) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond319) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond319) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond319) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond319) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond319) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond319) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond319) CFA_SP SP+-6
          CFI (cfiCond319) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond320 Using cfiCommon0
          CFI (cfiCond320) Function zclClosures_ProcessInDoorLockSetRFIDCode
          CFI (cfiCond320) Conditional ??CrossCallReturnLabel_338, ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_329
          CFI (cfiCond320) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond320) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond320) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond320) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond320) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond320) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond320) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond320) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond320) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond320) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond320) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond320) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond320) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond320) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond320) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond320) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond320) CFA_SP SP+-6
          CFI (cfiCond320) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond321 Using cfiCommon0
          CFI (cfiCond321) Function zclClosures_ProcessInDoorLockGetPINCodeRsp
          CFI (cfiCond321) Conditional ??CrossCallReturnLabel_338, ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_330
          CFI (cfiCond321) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond321) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond321) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond321) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond321) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond321) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond321) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond321) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond321) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond321) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond321) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond321) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond321) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond321) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond321) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond321) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond321) CFA_SP SP+-6
          CFI (cfiCond321) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond322 Using cfiCommon0
          CFI (cfiCond322) Function zclClosures_ProcessInDoorLockGetRFIDCodeRsp
          CFI (cfiCond322) Conditional ??CrossCallReturnLabel_338, ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_331
          CFI (cfiCond322) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond322) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond322) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond322) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond322) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond322) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond322) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond322) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond322) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond322) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond322) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond322) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond322) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond322) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond322) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond322) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond322) CFA_SP SP+-6
          CFI (cfiCond322) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond323 Using cfiCommon0
          CFI (cfiCond323) Function zclClosures_ProcessInDoorLockGetLogRecordRsp
          CFI (cfiCond323) Conditional ??CrossCallReturnLabel_338, ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_324
          CFI (cfiCond323) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond323) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond323) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond323) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond323) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond323) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond323) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond323) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond323) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond323) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond323) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond323) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond323) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond323) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond323) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond323) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond323) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond323) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond323) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond323) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond323) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond323) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond323) CFA_SP SP+-6
          CFI (cfiCond323) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond324 Using cfiCommon0
          CFI (cfiCond324) Function zclClosures_ProcessInDoorLockOperationEventNotification
          CFI (cfiCond324) Conditional ??CrossCallReturnLabel_338, ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_325
          CFI (cfiCond324) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond324) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond324) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond324) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond324) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond324) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond324) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond324) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond324) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond324) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond324) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond324) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond324) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond324) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond324) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond324) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond324) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond324) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond324) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond324) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond324) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond324) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond324) CFA_SP SP+-6
          CFI (cfiCond324) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond325 Using cfiCommon0
          CFI (cfiCond325) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond325) Conditional ??CrossCallReturnLabel_338, ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_326
          CFI (cfiCond325) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond325) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond325) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond325) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond325) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond325) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond325) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond325) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond325) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond325) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond325) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond325) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond325) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond325) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond325) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond325) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond325) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond325) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond325) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond325) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond325) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond325) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond325) CFA_SP SP+-6
          CFI (cfiCond325) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond326 Using cfiCommon0
          CFI (cfiCond326) Function zclClosures_HdlIncoming
          CFI (cfiCond326) Conditional ??CrossCallReturnLabel_338, ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_315
          CFI (cfiCond326) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond326) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond326) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond326) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond326) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond326) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond326) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond326) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond326) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond326) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond326) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond326) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond326) CFA_SP SP+-6
          CFI (cfiCond326) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond327 Using cfiCommon0
          CFI (cfiCond327) Function zclClosures_ProcessInDoorLockCmds
          CFI (cfiCond327) Conditional ??CrossCallReturnLabel_338, ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_316
          CFI (cfiCond327) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond327) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond327) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond327) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond327) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond327) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond327) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond327) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond327) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond327) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond327) CFA_SP SP+-6
          CFI (cfiCond327) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond328 Using cfiCommon0
          CFI (cfiCond328) Function zclClosures_ProcessInDoorLockCmds
          CFI (cfiCond328) Conditional ??CrossCallReturnLabel_338, ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_317
          CFI (cfiCond328) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond328) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond328) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond328) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond328) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond328) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond328) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond328) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond328) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond328) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond328) CFA_SP SP+-6
          CFI (cfiCond328) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond329 Using cfiCommon0
          CFI (cfiCond329) Function zclClosures_ProcessInDoorLock
          CFI (cfiCond329) Conditional ??CrossCallReturnLabel_338, ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_318
          CFI (cfiCond329) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond329) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond329) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond329) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond329) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond329) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond329) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond329) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond329) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond329) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond329) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond329) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond329) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond329) CFA_SP SP+-6
          CFI (cfiCond329) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond330 Using cfiCommon0
          CFI (cfiCond330) Function zclClosures_ProcessInDoorLock
          CFI (cfiCond330) Conditional ??CrossCallReturnLabel_338, ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_319
          CFI (cfiCond330) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond330) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond330) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond330) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond330) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond330) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond330) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond330) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond330) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond330) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond330) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond330) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond330) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond330) CFA_SP SP+-6
          CFI (cfiCond330) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond331 Using cfiCommon0
          CFI (cfiCond331) Function zclClosures_ProcessInDoorLockSetYearDaySchedule
          CFI (cfiCond331) Conditional ??CrossCallReturnLabel_338, ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_320
          CFI (cfiCond331) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond331) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond331) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond331) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond331) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond331) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond331) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond331) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond331) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond331) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond331) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond331) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond331) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond331) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond331) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond331) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond331) CFA_SP SP+-6
          CFI (cfiCond331) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond332 Using cfiCommon0
          CFI (cfiCond332) Function zclClosures_ProcessInDoorLockSetHolidaySchedule
          CFI (cfiCond332) Conditional ??CrossCallReturnLabel_338, ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_321
          CFI (cfiCond332) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond332) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond332) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond332) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond332) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond332) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond332) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond332) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond332) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond332) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond332) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond332) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond332) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond332) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond332) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond332) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond332) CFA_SP SP+-6
          CFI (cfiCond332) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond333 Using cfiCommon0
          CFI (cfiCond333) Function zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
          CFI (cfiCond333) Conditional ??CrossCallReturnLabel_338, ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_322
          CFI (cfiCond333) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond333) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond333) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond333) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond333) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond333) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond333) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond333) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond333) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond333) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond333) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond333) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond333) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond333) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond333) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond333) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond333) CFA_SP SP+-6
          CFI (cfiCond333) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond334 Using cfiCommon0
          CFI (cfiCond334) Function zclClosures_ProcessInDoorLockGetHolidayScheduleRsp
          CFI (cfiCond334) Conditional ??CrossCallReturnLabel_338, ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_323
          CFI (cfiCond334) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond334) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond334) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond334) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond334) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond334) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond334) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond334) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond334) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond334) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond334) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond334) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond334) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond334) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond334) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond334) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond334) CFA_SP SP+-6
          CFI (cfiCond334) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond335 Using cfiCommon0
          CFI (cfiCond335) Function zclClosures_SendDoorLockUserIDRequest
          CFI (cfiCond335) Conditional ??CrossCallReturnLabel_338, ??CrossCallReturnLabel_332
          CFI (cfiCond335) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond335) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond335) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond335) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond335) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond335) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond335) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond335) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond335) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond335) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond335) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond335) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond335) CFA_SP SP+-4
          CFI (cfiCond335) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond336 Using cfiCommon0
          CFI (cfiCond336) Function zclClosures_SendDoorLockSetWeekDayScheduleRequest
          CFI (cfiCond336) Conditional ??CrossCallReturnLabel_335, ??CrossCallReturnLabel_118
          CFI (cfiCond336) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond336) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond336) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond336) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond336) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond336) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond336) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond336) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond336) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond336) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond336) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond336) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond336) CFA_SP SP+-4
          CFI (cfiCond336) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond337 Using cfiCommon0
          CFI (cfiCond337) Function zclClosures_SendDoorLockScheduleRequest
          CFI (cfiCond337) Conditional ??CrossCallReturnLabel_335, ??CrossCallReturnLabel_119
          CFI (cfiCond337) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond337) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond337) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond337) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond337) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond337) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond337) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond337) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond337) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond337) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond337) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond337) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond337) CFA_SP SP+-4
          CFI (cfiCond337) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond338 Using cfiCommon0
          CFI (cfiCond338) Function zclClosures_SendDoorLockSetYearDayScheduleRequest
          CFI (cfiCond338) Conditional ??CrossCallReturnLabel_335, ??CrossCallReturnLabel_120
          CFI (cfiCond338) R6 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond338) VB load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond338) V0 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond338) V1 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond338) V2 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond338) V3 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond338) V4 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond338) V5 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond338) V6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond338) V7 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond338) V8 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond338) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond338) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond338) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond338) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond338) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond338) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond338) CFA_SP SP+-4
          CFI (cfiCond338) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiPicker339 Using cfiCommon1
          CFI (cfiPicker339) NoFunction
          CFI (cfiPicker339) Picker
        MOVX      A,@DPTR
        MOV       R0,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R1,A
        RET
          CFI EndBlock cfiCond300
          CFI EndBlock cfiCond301
          CFI EndBlock cfiCond302
          CFI EndBlock cfiCond303
          CFI EndBlock cfiCond304
          CFI EndBlock cfiCond305
          CFI EndBlock cfiCond306
          CFI EndBlock cfiCond307
          CFI EndBlock cfiCond308
          CFI EndBlock cfiCond309
          CFI EndBlock cfiCond310
          CFI EndBlock cfiCond311
          CFI EndBlock cfiCond312
          CFI EndBlock cfiCond313
          CFI EndBlock cfiCond314
          CFI EndBlock cfiCond315
          CFI EndBlock cfiCond316
          CFI EndBlock cfiCond317
          CFI EndBlock cfiCond318
          CFI EndBlock cfiCond319
          CFI EndBlock cfiCond320
          CFI EndBlock cfiCond321
          CFI EndBlock cfiCond322
          CFI EndBlock cfiCond323
          CFI EndBlock cfiCond324
          CFI EndBlock cfiCond325
          CFI EndBlock cfiCond326
          CFI EndBlock cfiCond327
          CFI EndBlock cfiCond328
          CFI EndBlock cfiCond329
          CFI EndBlock cfiCond330
          CFI EndBlock cfiCond331
          CFI EndBlock cfiCond332
          CFI EndBlock cfiCond333
          CFI EndBlock cfiCond334
          CFI EndBlock cfiCond335
          CFI EndBlock cfiCond336
          CFI EndBlock cfiCond337
          CFI EndBlock cfiCond338
          CFI EndBlock cfiPicker339
// 1543 
// 1544 /*********************************************************************
// 1545  * @fn      zclClosures_ProcessInDoorLockSetPINCodeRsp
// 1546  *
// 1547  * @brief   Process in the received Set PIN Code Response cmd
// 1548  *
// 1549  * @param   pInMsg - pointer to the incoming message
// 1550  * @param   pCBs - pointer to the application callbacks
// 1551  *
// 1552  * @return  ZStatus_t
// 1553  */
// 1554 static ZStatus_t zclClosures_ProcessInDoorLockSetPINCodeRsp( zclIncoming_t *pInMsg,
// 1555                                                              zclClosures_DoorLockAppCallbacks_t *pCBs )
// 1556 {
// 1557  if ( pCBs->pfnDoorLockSetPINCodeRsp )
// 1558  {
// 1559    return ( pCBs->pfnDoorLockSetPINCodeRsp( pInMsg, pInMsg->pData[0] ) );
// 1560  }
// 1561 
// 1562  return ( ZFailure );
// 1563 }
// 1564 
// 1565 /*********************************************************************
// 1566  * @fn      zclClosures_ProcessInDoorLockGetPINCodeRsp
// 1567  *
// 1568  * @brief   Process in the received Get PIN Code Response cmd
// 1569  *
// 1570  * @param   pInMsg - pointer to the incoming message
// 1571  * @param   pCBs - pointer to the application callbacks
// 1572  *
// 1573  * @return  ZStatus_t
// 1574  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1575 static ZStatus_t zclClosures_ProcessInDoorLockGetPINCodeRsp( zclIncoming_t *pInMsg,
zclClosures_ProcessInDoorLockGetPINCodeRsp:
          CFI Block cfiBlock340 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockGetPINCodeRsp
        CODE
// 1576                                                              zclClosures_DoorLockAppCallbacks_t *pCBs )
// 1577 {
        FUNCALL zclClosures_ProcessInDoorLockGetPINCodeRsp, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclClosures_ProcessInDoorLockGetPINCodeRsp, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V6
        REQUIRE ?V7
        MOV       A,#-0x10
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 6
        MOV       A,#-0x6
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 22)
        MOV       A,R2
        MOV       R6,A
        MOV       A,R3
        MOV       R7,A
// 1578   ZStatus_t status;
// 1579 
// 1580   if ( pCBs->pfnDoorLockGetPINCodeRsp )
        MOV       A,R4
        ADD       A,#0x38
        LCALL     ?Subroutine17 & 0xFFFF
??CrossCallReturnLabel_330:
        JZ        ??zclClosures_ProcessInDoorLockGetPINCodeRsp_0
// 1581   {
// 1582     uint8 i;
// 1583     uint8 offset;
// 1584     uint8 calculatedArrayLen;
// 1585     zclDoorLockGetPINCodeRsp_t cmd;
// 1586 
// 1587     // first octet of PIN/RFID Code variable string identifies its length
// 1588     calculatedArrayLen = pInMsg->pData[4] + 1; // add first byte of string
        LCALL     ?Subroutine20 & 0xFFFF
// 1589 
// 1590     cmd.pCode = zcl_mem_alloc( calculatedArrayLen );
??CrossCallReturnLabel_53:
        LCALL     `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV       ?V6,R2
        MOV       ?V7,R3
        MOV       R0,?V6
        MOV       R1,?V7
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine61 & 0xFFFF
// 1591     if ( !cmd.pCode )
??CrossCallReturnLabel_144:
        JNZ       ??zclClosures_ProcessInDoorLockGetPINCodeRsp_1
// 1592     {
// 1593       return ( ZMemError );  // no memory
        MOV       R1,#0x10
        SJMP      ??zclClosures_ProcessInDoorLockGetPINCodeRsp_2
// 1594     }
// 1595 
// 1596     cmd.userID = BUILD_UINT16( pInMsg->pData[0], pInMsg->pData[1] );
??zclClosures_ProcessInDoorLockGetPINCodeRsp_1:
        LCALL     ?Subroutine11 & 0xFFFF
// 1597     cmd.userStatus = pInMsg->pData[2];
??CrossCallReturnLabel_6:
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        LCALL     ?Subroutine24 & 0xFFFF
// 1598     cmd.userType = pInMsg->pData[3];
??CrossCallReturnLabel_63:
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x3
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        LCALL     ?Subroutine73 & 0xFFFF
// 1599     offset = 4;
// 1600     for ( i = 0; i < calculatedArrayLen; i++ )
??CrossCallReturnLabel_170:
        SJMP      ??zclClosures_ProcessInDoorLockGetPINCodeRsp_3
// 1601     {
// 1602       cmd.pCode[i] = pInMsg->pData[offset++];
??zclClosures_ProcessInDoorLockGetPINCodeRsp_4:
        MOV       A,R1
        MOV       R2,A
        MOV       DPL,?V2
        MOV       DPH,?V3
        LCALL     ??Subroutine168_0 & 0xFFFF
// 1603     }
??CrossCallReturnLabel_423:
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,R0
        MOV       R2,A
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine19 & 0xFFFF
??CrossCallReturnLabel_47:
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
        INC       R1
        INC       R0
??zclClosures_ProcessInDoorLockGetPINCodeRsp_3:
        MOV       A,R0
        CLR       C
        SUBB      A,?V4
        JC        ??zclClosures_ProcessInDoorLockGetPINCodeRsp_4
// 1604 
// 1605     status = ( pCBs->pfnDoorLockGetPINCodeRsp( pInMsg, &cmd ) );
        ; Setup parameters for indirect call
        LCALL     ?Subroutine48 & 0xFFFF
??CrossCallReturnLabel_378:
        LCALL     ?CALL_IND
        MOV       A,R1
        MOV       R6,A
// 1606     zcl_mem_free( cmd.pCode );
        ; Setup parameters for call to function osal_mem_free
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine37 & 0xFFFF
??CrossCallReturnLabel_90:
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
// 1607     return status;
        MOV       A,R6
        MOV       R1,A
        SJMP      ??zclClosures_ProcessInDoorLockGetPINCodeRsp_2
// 1608   }
// 1609 
// 1610  return ( ZFailure );
??zclClosures_ProcessInDoorLockGetPINCodeRsp_0:
        MOV       R1,#0x1
??zclClosures_ProcessInDoorLockGetPINCodeRsp_2:
        LJMP      ?Subroutine2 & 0xFFFF
// 1611 }
          CFI EndBlock cfiBlock340

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine73:
          CFI Block cfiCond341 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockSetPINCode
          CFI Conditional ??CrossCallReturnLabel_168
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond342 Using cfiCommon0
          CFI (cfiCond342) Function zclClosures_ProcessInDoorLockSetRFIDCode
          CFI (cfiCond342) Conditional ??CrossCallReturnLabel_169
          CFI (cfiCond342) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond342) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond342) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond342) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond342) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond342) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond342) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond342) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond342) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond342) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond342) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond342) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond342) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond342) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond342) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond342) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond342) CFA_SP SP+-2
          CFI (cfiCond342) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond343 Using cfiCommon0
          CFI (cfiCond343) Function zclClosures_ProcessInDoorLockGetPINCodeRsp
          CFI (cfiCond343) Conditional ??CrossCallReturnLabel_170
          CFI (cfiCond343) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond343) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond343) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond343) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond343) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond343) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond343) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond343) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond343) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond343) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond343) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond343) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond343) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond343) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond343) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond343) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond343) CFA_SP SP+-2
          CFI (cfiCond343) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond344 Using cfiCommon0
          CFI (cfiCond344) Function zclClosures_ProcessInDoorLockGetRFIDCodeRsp
          CFI (cfiCond344) Conditional ??CrossCallReturnLabel_171
          CFI (cfiCond344) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond344) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond344) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond344) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond344) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond344) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond344) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond344) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond344) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond344) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond344) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond344) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond344) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond344) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond344) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond344) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond344) CFA_SP SP+-2
          CFI (cfiCond344) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker345 Using cfiCommon1
          CFI (cfiPicker345) NoFunction
          CFI (cfiPicker345) Picker
        MOVX      @DPTR,A
        MOV       R1,#0x4
        MOV       R0,#0x0
        RET
          CFI EndBlock cfiCond341
          CFI EndBlock cfiCond342
          CFI EndBlock cfiCond343
          CFI EndBlock cfiCond344
          CFI EndBlock cfiPicker345

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine61:
          CFI Block cfiCond346 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockUnlockWithTimeout
          CFI Conditional ??CrossCallReturnLabel_140
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond347 Using cfiCommon0
          CFI (cfiCond347) Function zclClosures_ProcessInDoorLockSetPINCode
          CFI (cfiCond347) Conditional ??CrossCallReturnLabel_141
          CFI (cfiCond347) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond347) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond347) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond347) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond347) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond347) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond347) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond347) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond347) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond347) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond347) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond347) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond347) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond347) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond347) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond347) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond347) CFA_SP SP+-2
          CFI (cfiCond347) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond348 Using cfiCommon0
          CFI (cfiCond348) Function zclClosures_ProcessInDoorLockSetRFIDCode
          CFI (cfiCond348) Conditional ??CrossCallReturnLabel_142
          CFI (cfiCond348) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond348) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond348) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond348) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond348) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond348) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond348) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond348) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond348) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond348) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond348) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond348) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond348) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond348) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond348) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond348) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond348) CFA_SP SP+-2
          CFI (cfiCond348) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond349 Using cfiCommon0
          CFI (cfiCond349) Function zclClosures_ProcessInDoorLockGetLogRecordRsp
          CFI (cfiCond349) Conditional ??CrossCallReturnLabel_143
          CFI (cfiCond349) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond349) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond349) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond349) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond349) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond349) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond349) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond349) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond349) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond349) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond349) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond349) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond349) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond349) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond349) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond349) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond349) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond349) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond349) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond349) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond349) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond349) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond349) CFA_SP SP+-2
          CFI (cfiCond349) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond350 Using cfiCommon0
          CFI (cfiCond350) Function zclClosures_ProcessInDoorLockGetPINCodeRsp
          CFI (cfiCond350) Conditional ??CrossCallReturnLabel_144
          CFI (cfiCond350) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond350) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond350) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond350) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond350) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond350) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond350) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond350) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond350) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond350) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond350) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond350) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond350) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond350) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond350) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond350) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond350) CFA_SP SP+-2
          CFI (cfiCond350) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond351 Using cfiCommon0
          CFI (cfiCond351) Function zclClosures_ProcessInDoorLockGetRFIDCodeRsp
          CFI (cfiCond351) Conditional ??CrossCallReturnLabel_145
          CFI (cfiCond351) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond351) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond351) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond351) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond351) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond351) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond351) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond351) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond351) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond351) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond351) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond351) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond351) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond351) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond351) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond351) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond351) CFA_SP SP+-2
          CFI (cfiCond351) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond352 Using cfiCommon0
          CFI (cfiCond352) Function zclClosures_ProcessInDoorLockOperationEventNotification
          CFI (cfiCond352) Conditional ??CrossCallReturnLabel_146
          CFI (cfiCond352) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond352) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond352) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond352) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond352) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond352) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond352) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond352) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond352) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond352) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond352) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond352) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond352) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond352) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond352) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond352) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond352) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond352) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond352) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond352) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond352) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond352) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond352) CFA_SP SP+-2
          CFI (cfiCond352) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond353 Using cfiCommon0
          CFI (cfiCond353) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond353) Conditional ??CrossCallReturnLabel_147
          CFI (cfiCond353) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond353) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond353) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond353) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond353) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond353) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond353) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond353) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond353) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond353) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond353) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond353) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond353) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond353) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond353) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond353) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond353) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond353) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond353) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond353) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond353) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond353) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond353) CFA_SP SP+-2
          CFI (cfiCond353) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker354 Using cfiCommon1
          CFI (cfiPicker354) NoFunction
          CFI (cfiPicker354) Picker
        MOV       A,R0
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,R1
        MOVX      @DPTR,A
        MOV       A,R0
        ORL       A,R1
        RET
          CFI EndBlock cfiCond346
          CFI EndBlock cfiCond347
          CFI EndBlock cfiCond348
          CFI EndBlock cfiCond349
          CFI EndBlock cfiCond350
          CFI EndBlock cfiCond351
          CFI EndBlock cfiCond352
          CFI EndBlock cfiCond353
          CFI EndBlock cfiPicker354

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine24:
          CFI Block cfiCond355 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockSetPINCode
          CFI Conditional ??CrossCallReturnLabel_61
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond356 Using cfiCommon0
          CFI (cfiCond356) Function zclClosures_ProcessInDoorLockSetRFIDCode
          CFI (cfiCond356) Conditional ??CrossCallReturnLabel_62
          CFI (cfiCond356) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond356) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond356) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond356) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond356) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond356) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond356) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond356) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond356) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond356) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond356) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond356) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond356) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond356) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond356) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond356) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond356) CFA_SP SP+-2
          CFI (cfiCond356) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond357 Using cfiCommon0
          CFI (cfiCond357) Function zclClosures_ProcessInDoorLockGetPINCodeRsp
          CFI (cfiCond357) Conditional ??CrossCallReturnLabel_63
          CFI (cfiCond357) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond357) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond357) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond357) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond357) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond357) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond357) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond357) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond357) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond357) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond357) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond357) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond357) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond357) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond357) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond357) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond357) CFA_SP SP+-2
          CFI (cfiCond357) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond358 Using cfiCommon0
          CFI (cfiCond358) Function zclClosures_ProcessInDoorLockGetRFIDCodeRsp
          CFI (cfiCond358) Conditional ??CrossCallReturnLabel_64
          CFI (cfiCond358) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond358) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond358) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond358) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond358) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond358) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond358) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond358) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond358) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond358) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond358) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond358) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond358) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond358) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond358) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond358) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond358) CFA_SP SP+-2
          CFI (cfiCond358) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker359 Using cfiCommon1
          CFI (cfiPicker359) NoFunction
          CFI (cfiPicker359) Picker
        MOVX      @DPTR,A
        MOV       DPL,?V2
        MOV       DPH,?V3
        LCALL     ?Subroutine94 & 0xFFFF
??CrossCallReturnLabel_220:
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond355
          CFI EndBlock cfiCond356
          CFI EndBlock cfiCond357
          CFI EndBlock cfiCond358
          CFI EndBlock cfiPicker359

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine20:
          CFI Block cfiCond360 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockSetPINCode
          CFI Conditional ??CrossCallReturnLabel_51
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond361 Using cfiCommon0
          CFI (cfiCond361) Function zclClosures_ProcessInDoorLockSetRFIDCode
          CFI (cfiCond361) Conditional ??CrossCallReturnLabel_52
          CFI (cfiCond361) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond361) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond361) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond361) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond361) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond361) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond361) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond361) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond361) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond361) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond361) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond361) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond361) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond361) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond361) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond361) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond361) CFA_SP SP+-2
          CFI (cfiCond361) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond362 Using cfiCommon0
          CFI (cfiCond362) Function zclClosures_ProcessInDoorLockGetPINCodeRsp
          CFI (cfiCond362) Conditional ??CrossCallReturnLabel_53
          CFI (cfiCond362) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond362) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond362) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond362) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond362) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond362) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond362) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond362) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond362) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond362) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond362) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond362) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond362) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond362) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond362) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond362) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond362) CFA_SP SP+-2
          CFI (cfiCond362) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond363 Using cfiCommon0
          CFI (cfiCond363) Function zclClosures_ProcessInDoorLockGetRFIDCodeRsp
          CFI (cfiCond363) Conditional ??CrossCallReturnLabel_54
          CFI (cfiCond363) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond363) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond363) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond363) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond363) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond363) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond363) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond363) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond363) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond363) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond363) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond363) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond363) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond363) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond363) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond363) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond363) CFA_SP SP+-2
          CFI (cfiCond363) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker364 Using cfiCommon1
          CFI (cfiPicker364) NoFunction
          CFI (cfiPicker364) Picker
        LCALL     ?Subroutine114 & 0xFFFF
??CrossCallReturnLabel_253:
        MOV       DPL,R0
        MOV       DPH,A
        LCALL     ?Subroutine94 & 0xFFFF
??CrossCallReturnLabel_219:
        INC       DPTR
        MOVX      A,@DPTR
        INC       A
        MOV       ?V4,A
        ; Setup parameters for call to function osal_mem_alloc
        ; Setup parameters for call to function osal_mem_alloc
        ; Setup parameters for call to function osal_mem_alloc
        ; Setup parameters for call to function osal_mem_alloc
        MOV       R2,A
        MOV       R3,#0x0
        RET
          CFI EndBlock cfiCond360
          CFI EndBlock cfiCond361
          CFI EndBlock cfiCond362
          CFI EndBlock cfiCond363
          CFI EndBlock cfiPicker364

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine94:
          CFI Block cfiCond365 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockSetPINCode
          CFI Conditional ??CrossCallReturnLabel_220, ??CrossCallReturnLabel_61
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond366 Using cfiCommon0
          CFI (cfiCond366) Function zclClosures_ProcessInDoorLockSetRFIDCode
          CFI (cfiCond366) Conditional ??CrossCallReturnLabel_220, ??CrossCallReturnLabel_62
          CFI (cfiCond366) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond366) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond366) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond366) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond366) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond366) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond366) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond366) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond366) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond366) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond366) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond366) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond366) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond366) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond366) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond366) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond366) CFA_SP SP+-4
          CFI (cfiCond366) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond367 Using cfiCommon0
          CFI (cfiCond367) Function zclClosures_ProcessInDoorLockGetPINCodeRsp
          CFI (cfiCond367) Conditional ??CrossCallReturnLabel_220, ??CrossCallReturnLabel_63
          CFI (cfiCond367) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond367) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond367) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond367) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond367) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond367) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond367) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond367) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond367) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond367) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond367) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond367) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond367) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond367) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond367) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond367) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond367) CFA_SP SP+-4
          CFI (cfiCond367) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond368 Using cfiCommon0
          CFI (cfiCond368) Function zclClosures_ProcessInDoorLockGetRFIDCodeRsp
          CFI (cfiCond368) Conditional ??CrossCallReturnLabel_220, ??CrossCallReturnLabel_64
          CFI (cfiCond368) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond368) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond368) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond368) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond368) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond368) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond368) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond368) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond368) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond368) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond368) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond368) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond368) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond368) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond368) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond368) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond368) CFA_SP SP+-4
          CFI (cfiCond368) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond369 Using cfiCommon0
          CFI (cfiCond369) Function zclClosures_ProcessInDoorLockSetPINCode
          CFI (cfiCond369) Conditional ??CrossCallReturnLabel_219, ??CrossCallReturnLabel_51
          CFI (cfiCond369) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond369) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond369) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond369) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond369) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond369) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond369) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond369) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond369) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond369) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond369) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond369) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond369) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond369) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond369) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond369) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond369) CFA_SP SP+-4
          CFI (cfiCond369) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond370 Using cfiCommon0
          CFI (cfiCond370) Function zclClosures_ProcessInDoorLockSetRFIDCode
          CFI (cfiCond370) Conditional ??CrossCallReturnLabel_219, ??CrossCallReturnLabel_52
          CFI (cfiCond370) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond370) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond370) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond370) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond370) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond370) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond370) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond370) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond370) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond370) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond370) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond370) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond370) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond370) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond370) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond370) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond370) CFA_SP SP+-4
          CFI (cfiCond370) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond371 Using cfiCommon0
          CFI (cfiCond371) Function zclClosures_ProcessInDoorLockGetPINCodeRsp
          CFI (cfiCond371) Conditional ??CrossCallReturnLabel_219, ??CrossCallReturnLabel_53
          CFI (cfiCond371) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond371) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond371) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond371) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond371) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond371) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond371) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond371) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond371) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond371) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond371) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond371) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond371) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond371) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond371) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond371) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond371) CFA_SP SP+-4
          CFI (cfiCond371) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond372 Using cfiCommon0
          CFI (cfiCond372) Function zclClosures_ProcessInDoorLockGetRFIDCodeRsp
          CFI (cfiCond372) Conditional ??CrossCallReturnLabel_219, ??CrossCallReturnLabel_54
          CFI (cfiCond372) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond372) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond372) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond372) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond372) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond372) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond372) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond372) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond372) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond372) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond372) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond372) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond372) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond372) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond372) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond372) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond372) CFA_SP SP+-4
          CFI (cfiCond372) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker373 Using cfiCommon1
          CFI (cfiPicker373) NoFunction
          CFI (cfiPicker373) Picker
        LCALL     ?Subroutine119 & 0xFFFF
??CrossCallReturnLabel_382:
        INC       DPTR
        INC       DPTR
        INC       DPTR
        RET
          CFI EndBlock cfiCond365
          CFI EndBlock cfiCond366
          CFI EndBlock cfiCond367
          CFI EndBlock cfiCond368
          CFI EndBlock cfiCond369
          CFI EndBlock cfiCond370
          CFI EndBlock cfiCond371
          CFI EndBlock cfiCond372
          CFI EndBlock cfiPicker373

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine19:
          CFI Block cfiCond374 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockUnlockWithTimeout
          CFI Conditional ??CrossCallReturnLabel_43
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond375 Using cfiCommon0
          CFI (cfiCond375) Function zclClosures_ProcessInDoorLockSetPINCode
          CFI (cfiCond375) Conditional ??CrossCallReturnLabel_44
          CFI (cfiCond375) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond375) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond375) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond375) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond375) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond375) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond375) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond375) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond375) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond375) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond375) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond375) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond375) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond375) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond375) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond375) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond375) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond376 Using cfiCommon0
          CFI (cfiCond376) Function zclClosures_ProcessInDoorLockSetRFIDCode
          CFI (cfiCond376) Conditional ??CrossCallReturnLabel_45
          CFI (cfiCond376) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond376) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond376) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond376) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond376) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond376) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond376) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond376) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond376) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond376) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond376) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond376) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond376) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond376) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond376) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond376) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond376) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond377 Using cfiCommon0
          CFI (cfiCond377) Function zclClosures_ProcessInDoorLockGetLogRecordRsp
          CFI (cfiCond377) Conditional ??CrossCallReturnLabel_46
          CFI (cfiCond377) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond377) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond377) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond377) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond377) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond377) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond377) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond377) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond377) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond377) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond377) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond377) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond377) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond377) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond377) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond377) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond377) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond377) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond377) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond377) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond377) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond377) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond377) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond378 Using cfiCommon0
          CFI (cfiCond378) Function zclClosures_ProcessInDoorLockGetPINCodeRsp
          CFI (cfiCond378) Conditional ??CrossCallReturnLabel_47
          CFI (cfiCond378) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond378) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond378) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond378) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond378) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond378) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond378) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond378) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond378) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond378) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond378) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond378) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond378) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond378) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond378) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond378) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond378) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond379 Using cfiCommon0
          CFI (cfiCond379) Function zclClosures_ProcessInDoorLockGetRFIDCodeRsp
          CFI (cfiCond379) Conditional ??CrossCallReturnLabel_48
          CFI (cfiCond379) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond379) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond379) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond379) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond379) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond379) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond379) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond379) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond379) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond379) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond379) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond379) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond379) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond379) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond379) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond379) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond379) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond380 Using cfiCommon0
          CFI (cfiCond380) Function zclClosures_ProcessInDoorLockOperationEventNotification
          CFI (cfiCond380) Conditional ??CrossCallReturnLabel_49
          CFI (cfiCond380) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond380) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond380) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond380) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond380) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond380) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond380) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond380) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond380) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond380) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond380) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond380) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond380) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond380) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond380) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond380) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond380) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond380) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond380) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond380) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond380) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond380) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond380) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond381 Using cfiCommon0
          CFI (cfiCond381) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond381) Conditional ??CrossCallReturnLabel_50
          CFI (cfiCond381) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond381) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond381) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond381) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond381) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond381) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond381) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond381) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond381) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond381) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond381) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond381) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond381) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond381) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond381) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond381) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond381) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond381) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond381) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond381) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond381) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond381) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond381) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker382 Using cfiCommon1
          CFI (cfiPicker382) NoFunction
          CFI (cfiPicker382) Picker
        LCALL     ?Subroutine96 & 0xFFFF
??CrossCallReturnLabel_435:
        RET
          CFI EndBlock cfiCond374
          CFI EndBlock cfiCond375
          CFI EndBlock cfiCond376
          CFI EndBlock cfiCond377
          CFI EndBlock cfiCond378
          CFI EndBlock cfiCond379
          CFI EndBlock cfiCond380
          CFI EndBlock cfiCond381
          CFI EndBlock cfiPicker382

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine96:
          CFI Block cfiCond383 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockUnlockWithTimeout
          CFI Conditional ??CrossCallReturnLabel_435, ??CrossCallReturnLabel_43
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-5
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond384 Using cfiCommon0
          CFI (cfiCond384) Function zclClosures_ProcessInDoorLockSetPINCode
          CFI (cfiCond384) Conditional ??CrossCallReturnLabel_435, ??CrossCallReturnLabel_44
          CFI (cfiCond384) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond384) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond384) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond384) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond384) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond384) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond384) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond384) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond384) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond384) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond384) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond384) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond384) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond384) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond384) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond384) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond384) CFA_SP SP+-5
          CFI (cfiCond384) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond385 Using cfiCommon0
          CFI (cfiCond385) Function zclClosures_ProcessInDoorLockSetRFIDCode
          CFI (cfiCond385) Conditional ??CrossCallReturnLabel_435, ??CrossCallReturnLabel_45
          CFI (cfiCond385) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond385) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond385) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond385) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond385) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond385) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond385) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond385) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond385) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond385) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond385) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond385) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond385) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond385) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond385) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond385) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond385) CFA_SP SP+-5
          CFI (cfiCond385) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond386 Using cfiCommon0
          CFI (cfiCond386) Function zclClosures_ProcessInDoorLockGetLogRecordRsp
          CFI (cfiCond386) Conditional ??CrossCallReturnLabel_435, ??CrossCallReturnLabel_46
          CFI (cfiCond386) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond386) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond386) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond386) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond386) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond386) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond386) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond386) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond386) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond386) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond386) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond386) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond386) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond386) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond386) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond386) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond386) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond386) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond386) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond386) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond386) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond386) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond386) CFA_SP SP+-5
          CFI (cfiCond386) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond387 Using cfiCommon0
          CFI (cfiCond387) Function zclClosures_ProcessInDoorLockGetPINCodeRsp
          CFI (cfiCond387) Conditional ??CrossCallReturnLabel_435, ??CrossCallReturnLabel_47
          CFI (cfiCond387) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond387) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond387) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond387) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond387) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond387) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond387) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond387) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond387) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond387) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond387) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond387) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond387) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond387) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond387) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond387) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond387) CFA_SP SP+-5
          CFI (cfiCond387) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond388 Using cfiCommon0
          CFI (cfiCond388) Function zclClosures_ProcessInDoorLockGetRFIDCodeRsp
          CFI (cfiCond388) Conditional ??CrossCallReturnLabel_435, ??CrossCallReturnLabel_48
          CFI (cfiCond388) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond388) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond388) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond388) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond388) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond388) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond388) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond388) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond388) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond388) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond388) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond388) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond388) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond388) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond388) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond388) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond388) CFA_SP SP+-5
          CFI (cfiCond388) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond389 Using cfiCommon0
          CFI (cfiCond389) Function zclClosures_ProcessInDoorLockOperationEventNotification
          CFI (cfiCond389) Conditional ??CrossCallReturnLabel_435, ??CrossCallReturnLabel_49
          CFI (cfiCond389) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond389) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond389) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond389) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond389) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond389) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond389) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond389) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond389) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond389) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond389) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond389) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond389) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond389) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond389) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond389) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond389) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond389) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond389) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond389) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond389) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond389) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond389) CFA_SP SP+-5
          CFI (cfiCond389) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond390 Using cfiCommon0
          CFI (cfiCond390) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond390) Conditional ??CrossCallReturnLabel_435, ??CrossCallReturnLabel_50
          CFI (cfiCond390) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond390) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond390) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond390) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond390) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond390) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond390) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond390) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond390) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond390) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond390) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond390) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond390) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond390) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond390) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond390) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond390) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond390) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond390) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond390) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond390) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond390) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond390) CFA_SP SP+-5
          CFI (cfiCond390) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond391 Using cfiCommon0
          CFI (cfiCond391) Function zclClosures_SendDoorLockUnlockTimeoutRequest
          CFI (cfiCond391) Conditional ??CrossCallReturnLabel_436, ??CrossCallReturnLabel_428
          CFI (cfiCond391) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond391) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond391) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond391) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond391) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond391) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond391) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond391) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond391) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond391) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond391) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond391) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond391) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond391) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond391) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond391) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond391) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond391) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond391) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond391) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond391) CFA_SP SP+-4
          CFI (cfiCond391) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond392 Using cfiCommon0
          CFI (cfiCond392) Function zclClosures_SendDoorLockSetPINCodeRequest
          CFI (cfiCond392) Conditional ??CrossCallReturnLabel_436, ??CrossCallReturnLabel_429
          CFI (cfiCond392) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond392) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond392) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond392) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond392) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond392) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond392) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond392) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond392) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond392) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond392) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond392) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond392) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond392) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond392) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond392) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond392) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond392) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond392) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond392) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond392) CFA_SP SP+-4
          CFI (cfiCond392) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond393 Using cfiCommon0
          CFI (cfiCond393) Function zclClosures_SendDoorLockSetRFIDCodeRequest
          CFI (cfiCond393) Conditional ??CrossCallReturnLabel_436, ??CrossCallReturnLabel_430
          CFI (cfiCond393) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond393) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond393) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond393) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond393) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond393) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond393) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond393) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond393) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond393) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond393) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond393) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond393) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond393) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond393) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond393) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond393) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond393) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond393) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond393) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond393) CFA_SP SP+-4
          CFI (cfiCond393) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond394 Using cfiCommon0
          CFI (cfiCond394) Function zclClosures_SendDoorLockGetPINCodeResponse
          CFI (cfiCond394) Conditional ??CrossCallReturnLabel_436, ??CrossCallReturnLabel_431
          CFI (cfiCond394) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond394) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond394) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond394) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond394) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond394) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond394) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond394) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond394) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond394) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond394) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond394) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond394) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond394) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond394) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond394) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond394) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond394) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond394) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond394) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond394) CFA_SP SP+-4
          CFI (cfiCond394) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond395 Using cfiCommon0
          CFI (cfiCond395) Function zclClosures_SendDoorLockGetRFIDCodeResponse
          CFI (cfiCond395) Conditional ??CrossCallReturnLabel_436, ??CrossCallReturnLabel_432
          CFI (cfiCond395) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond395) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond395) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond395) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond395) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond395) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond395) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond395) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond395) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond395) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond395) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond395) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond395) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond395) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond395) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond395) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond395) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond395) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond395) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond395) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond395) CFA_SP SP+-4
          CFI (cfiCond395) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond396 Using cfiCommon0
          CFI (cfiCond396) Function zclClosures_SendDoorLockOperationEventNotification
          CFI (cfiCond396) Conditional ??CrossCallReturnLabel_436, ??CrossCallReturnLabel_433
          CFI (cfiCond396) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond396) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond396) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond396) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond396) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond396) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond396) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond396) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond396) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond396) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond396) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond396) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond396) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond396) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond396) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond396) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond396) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond396) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond396) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond396) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond396) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond396) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond396) CFA_SP SP+-4
          CFI (cfiCond396) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond397 Using cfiCommon0
          CFI (cfiCond397) Function zclClosures_SendDoorLockProgrammingEventNotification
          CFI (cfiCond397) Conditional ??CrossCallReturnLabel_436, ??CrossCallReturnLabel_434
          CFI (cfiCond397) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond397) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond397) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond397) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond397) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond397) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond397) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond397) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond397) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond397) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond397) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond397) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond397) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond397) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond397) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond397) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond397) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond397) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond397) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond397) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond397) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond397) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond397) CFA_SP SP+-4
          CFI (cfiCond397) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond398 Using cfiCommon0
          CFI (cfiCond398) Function zclClosures_ProcessInDoorLockUnlockWithTimeout
          CFI (cfiCond398) Conditional ??CrossCallReturnLabel_436, ??CrossCallReturnLabel_419
          CFI (cfiCond398) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond398) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond398) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond398) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond398) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond398) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond398) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond398) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond398) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond398) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond398) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond398) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond398) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond398) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond398) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond398) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond398) CFA_SP SP+-4
          CFI (cfiCond398) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond399 Using cfiCommon0
          CFI (cfiCond399) Function zclClosures_ProcessInDoorLockSetPINCode
          CFI (cfiCond399) Conditional ??CrossCallReturnLabel_436, ??CrossCallReturnLabel_420
          CFI (cfiCond399) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond399) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond399) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond399) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond399) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond399) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond399) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond399) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond399) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond399) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond399) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond399) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond399) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond399) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond399) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond399) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond399) CFA_SP SP+-4
          CFI (cfiCond399) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond400 Using cfiCommon0
          CFI (cfiCond400) Function zclClosures_ProcessInDoorLockSetRFIDCode
          CFI (cfiCond400) Conditional ??CrossCallReturnLabel_436, ??CrossCallReturnLabel_421
          CFI (cfiCond400) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond400) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond400) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond400) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond400) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond400) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond400) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond400) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond400) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond400) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond400) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond400) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond400) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond400) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond400) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond400) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond400) CFA_SP SP+-4
          CFI (cfiCond400) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond401 Using cfiCommon0
          CFI (cfiCond401) Function zclClosures_ProcessInDoorLockGetLogRecordRsp
          CFI (cfiCond401) Conditional ??CrossCallReturnLabel_436, ??CrossCallReturnLabel_422
          CFI (cfiCond401) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond401) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond401) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond401) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond401) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond401) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond401) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond401) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond401) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond401) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond401) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond401) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond401) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond401) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond401) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond401) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond401) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond401) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond401) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond401) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond401) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond401) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond401) CFA_SP SP+-4
          CFI (cfiCond401) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond402 Using cfiCommon0
          CFI (cfiCond402) Function zclClosures_ProcessInDoorLockGetPINCodeRsp
          CFI (cfiCond402) Conditional ??CrossCallReturnLabel_436, ??CrossCallReturnLabel_423
          CFI (cfiCond402) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond402) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond402) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond402) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond402) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond402) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond402) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond402) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond402) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond402) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond402) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond402) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond402) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond402) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond402) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond402) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond402) CFA_SP SP+-4
          CFI (cfiCond402) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond403 Using cfiCommon0
          CFI (cfiCond403) Function zclClosures_ProcessInDoorLockGetRFIDCodeRsp
          CFI (cfiCond403) Conditional ??CrossCallReturnLabel_436, ??CrossCallReturnLabel_424
          CFI (cfiCond403) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond403) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond403) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond403) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond403) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond403) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond403) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond403) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond403) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond403) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond403) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond403) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond403) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond403) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond403) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond403) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond403) CFA_SP SP+-4
          CFI (cfiCond403) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond404 Using cfiCommon0
          CFI (cfiCond404) Function zclClosures_ProcessInDoorLockOperationEventNotification
          CFI (cfiCond404) Conditional ??CrossCallReturnLabel_436, ??CrossCallReturnLabel_425
          CFI (cfiCond404) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond404) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond404) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond404) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond404) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond404) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond404) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond404) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond404) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond404) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond404) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond404) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond404) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond404) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond404) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond404) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond404) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond404) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond404) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond404) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond404) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond404) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond404) CFA_SP SP+-4
          CFI (cfiCond404) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond405 Using cfiCommon0
          CFI (cfiCond405) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond405) Conditional ??CrossCallReturnLabel_436, ??CrossCallReturnLabel_426
          CFI (cfiCond405) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond405) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond405) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond405) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond405) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond405) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond405) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond405) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond405) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond405) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond405) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond405) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond405) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond405) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond405) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond405) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond405) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond405) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond405) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond405) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond405) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond405) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond405) CFA_SP SP+-4
          CFI (cfiCond405) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond406 Using cfiCommon0
          CFI (cfiCond406) Function zclClosures_SendDoorLockGetLogRecordResponse
          CFI (cfiCond406) Conditional ??CrossCallReturnLabel_436, ??CrossCallReturnLabel_427
          CFI (cfiCond406) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond406) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond406) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond406) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond406) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond406) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond406) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond406) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond406) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond406) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond406) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond406) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond406) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond406) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond406) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond406) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond406) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond406) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond406) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond406) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond406) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond406) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond406) CFA_SP SP+-4
          CFI (cfiCond406) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiPicker407 Using cfiCommon1
          CFI (cfiPicker407) NoFunction
          CFI (cfiPicker407) Picker
        MOVX      A,@DPTR
        ADD       A,R2
        MOV       R4,A
        INC       DPTR
        MOVX      A,@DPTR
        ADDC      A,#0x0
        MOV       DPL,R4
        MOV       DPH,A
        RET
          CFI EndBlock cfiCond383
          CFI EndBlock cfiCond384
          CFI EndBlock cfiCond385
          CFI EndBlock cfiCond386
          CFI EndBlock cfiCond387
          CFI EndBlock cfiCond388
          CFI EndBlock cfiCond389
          CFI EndBlock cfiCond390
          CFI EndBlock cfiCond391
          CFI EndBlock cfiCond392
          CFI EndBlock cfiCond393
          CFI EndBlock cfiCond394
          CFI EndBlock cfiCond395
          CFI EndBlock cfiCond396
          CFI EndBlock cfiCond397
          CFI EndBlock cfiCond398
          CFI EndBlock cfiCond399
          CFI EndBlock cfiCond400
          CFI EndBlock cfiCond401
          CFI EndBlock cfiCond402
          CFI EndBlock cfiCond403
          CFI EndBlock cfiCond404
          CFI EndBlock cfiCond405
          CFI EndBlock cfiCond406
          CFI EndBlock cfiPicker407

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine11:
          CFI Block cfiCond408 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockSetPINCode
          CFI Conditional ??CrossCallReturnLabel_4
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond409 Using cfiCommon0
          CFI (cfiCond409) Function zclClosures_ProcessInDoorLockSetRFIDCode
          CFI (cfiCond409) Conditional ??CrossCallReturnLabel_5
          CFI (cfiCond409) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond409) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond409) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond409) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond409) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond409) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond409) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond409) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond409) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond409) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond409) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond409) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond409) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond409) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond409) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond409) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond409) CFA_SP SP+-2
          CFI (cfiCond409) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond410 Using cfiCommon0
          CFI (cfiCond410) Function zclClosures_ProcessInDoorLockGetPINCodeRsp
          CFI (cfiCond410) Conditional ??CrossCallReturnLabel_6
          CFI (cfiCond410) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond410) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond410) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond410) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond410) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond410) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond410) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond410) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond410) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond410) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond410) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond410) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond410) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond410) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond410) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond410) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond410) CFA_SP SP+-2
          CFI (cfiCond410) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond411 Using cfiCommon0
          CFI (cfiCond411) Function zclClosures_ProcessInDoorLockGetRFIDCodeRsp
          CFI (cfiCond411) Conditional ??CrossCallReturnLabel_7
          CFI (cfiCond411) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond411) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond411) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond411) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond411) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond411) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond411) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond411) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond411) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond411) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond411) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond411) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond411) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond411) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond411) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond411) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond411) CFA_SP SP+-2
          CFI (cfiCond411) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker412 Using cfiCommon1
          CFI (cfiPicker412) NoFunction
          CFI (cfiPicker412) Picker
        MOV       DPL,?V2
        MOV       DPH,?V3
        LCALL     ?Subroutine92 & 0xFFFF
??CrossCallReturnLabel_268:
        LCALL     ?Subroutine99 & 0xFFFF
??CrossCallReturnLabel_350:
        MOV       R3,A
        MOV       A,R4
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        LCALL     ?Subroutine110 & 0xFFFF
??CrossCallReturnLabel_339:
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond408
          CFI EndBlock cfiCond409
          CFI EndBlock cfiCond410
          CFI EndBlock cfiCond411
          CFI EndBlock cfiPicker412

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine110:
          CFI Block cfiCond413 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockSetPINCode
          CFI Conditional ??CrossCallReturnLabel_339, ??CrossCallReturnLabel_4
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond414 Using cfiCommon0
          CFI (cfiCond414) Function zclClosures_ProcessInDoorLockSetRFIDCode
          CFI (cfiCond414) Conditional ??CrossCallReturnLabel_339, ??CrossCallReturnLabel_5
          CFI (cfiCond414) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond414) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond414) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond414) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond414) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond414) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond414) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond414) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond414) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond414) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond414) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond414) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond414) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond414) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond414) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond414) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond414) CFA_SP SP+-4
          CFI (cfiCond414) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond415 Using cfiCommon0
          CFI (cfiCond415) Function zclClosures_ProcessInDoorLockGetPINCodeRsp
          CFI (cfiCond415) Conditional ??CrossCallReturnLabel_339, ??CrossCallReturnLabel_6
          CFI (cfiCond415) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond415) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond415) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond415) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond415) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond415) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond415) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond415) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond415) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond415) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond415) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond415) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond415) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond415) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond415) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond415) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond415) CFA_SP SP+-4
          CFI (cfiCond415) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond416 Using cfiCommon0
          CFI (cfiCond416) Function zclClosures_ProcessInDoorLockGetRFIDCodeRsp
          CFI (cfiCond416) Conditional ??CrossCallReturnLabel_339, ??CrossCallReturnLabel_7
          CFI (cfiCond416) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond416) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond416) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond416) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond416) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond416) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond416) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond416) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond416) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond416) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond416) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond416) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond416) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond416) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond416) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond416) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond416) CFA_SP SP+-4
          CFI (cfiCond416) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond417 Using cfiCommon0
          CFI (cfiCond417) Function zclClosures_ProcessInDoorLockOperationEventNotification
          CFI (cfiCond417) Conditional ??CrossCallReturnLabel_340, ??CrossCallReturnLabel_148
          CFI (cfiCond417) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond417) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond417) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond417) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond417) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond417) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond417) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond417) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond417) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond417) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond417) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond417) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond417) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond417) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond417) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond417) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond417) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond417) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond417) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond417) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond417) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond417) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond417) CFA_SP SP+-4
          CFI (cfiCond417) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond418 Using cfiCommon0
          CFI (cfiCond418) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond418) Conditional ??CrossCallReturnLabel_340, ??CrossCallReturnLabel_149
          CFI (cfiCond418) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond418) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond418) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond418) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond418) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond418) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond418) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond418) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond418) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond418) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond418) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond418) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond418) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond418) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond418) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond418) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond418) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond418) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond418) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond418) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond418) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond418) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond418) CFA_SP SP+-4
          CFI (cfiCond418) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker419 Using cfiCommon1
          CFI (cfiPicker419) NoFunction
          CFI (cfiPicker419) Picker
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,R3
          CFI EndBlock cfiCond413
          CFI EndBlock cfiCond414
          CFI EndBlock cfiCond415
          CFI EndBlock cfiCond416
          CFI EndBlock cfiCond417
          CFI EndBlock cfiCond418
          CFI EndBlock cfiPicker419
        REQUIRE ??Subroutine145_0
        ; // Fall through to label ??Subroutine145_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine145_0:
          CFI Block cfiCond420 Using cfiCommon0
          CFI Function zclClosures_RegisterDoorLockCmdCallbacks
          CFI Conditional ??CrossCallReturnLabel_341, ??CrossCallReturnLabel_156
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond421 Using cfiCommon0
          CFI (cfiCond421) Function zclClosures_RegisterDoorLockCmdCallbacks
          CFI (cfiCond421) Conditional ??CrossCallReturnLabel_341, ??CrossCallReturnLabel_157
          CFI (cfiCond421) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond421) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond421) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond421) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond421) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond421) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond421) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond421) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond421) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond421) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond421) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond421) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond421) CFA_SP SP+-4
          CFI (cfiCond421) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond422 Using cfiCommon0
          CFI (cfiCond422) Function zclClosures_ProcessInDoorLockCmds
          CFI (cfiCond422) Conditional ??CrossCallReturnLabel_341, ??CrossCallReturnLabel_158
          CFI (cfiCond422) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond422) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond422) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond422) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond422) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond422) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond422) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond422) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond422) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond422) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond422) CFA_SP SP+-4
          CFI (cfiCond422) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond423 Using cfiCommon0
          CFI (cfiCond423) Function zclClosures_ProcessInDoorLockSetPINCode
          CFI (cfiCond423) Conditional ??CrossCallReturnLabel_339, ??CrossCallReturnLabel_4
          CFI (cfiCond423) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond423) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond423) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond423) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond423) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond423) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond423) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond423) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond423) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond423) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond423) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond423) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond423) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond423) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond423) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond423) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond423) CFA_SP SP+-4
          CFI (cfiCond423) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond424 Using cfiCommon0
          CFI (cfiCond424) Function zclClosures_ProcessInDoorLockSetRFIDCode
          CFI (cfiCond424) Conditional ??CrossCallReturnLabel_339, ??CrossCallReturnLabel_5
          CFI (cfiCond424) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond424) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond424) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond424) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond424) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond424) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond424) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond424) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond424) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond424) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond424) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond424) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond424) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond424) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond424) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond424) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond424) CFA_SP SP+-4
          CFI (cfiCond424) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond425 Using cfiCommon0
          CFI (cfiCond425) Function zclClosures_ProcessInDoorLockGetPINCodeRsp
          CFI (cfiCond425) Conditional ??CrossCallReturnLabel_339, ??CrossCallReturnLabel_6
          CFI (cfiCond425) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond425) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond425) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond425) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond425) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond425) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond425) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond425) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond425) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond425) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond425) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond425) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond425) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond425) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond425) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond425) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond425) CFA_SP SP+-4
          CFI (cfiCond425) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond426 Using cfiCommon0
          CFI (cfiCond426) Function zclClosures_ProcessInDoorLockGetRFIDCodeRsp
          CFI (cfiCond426) Conditional ??CrossCallReturnLabel_339, ??CrossCallReturnLabel_7
          CFI (cfiCond426) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond426) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond426) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond426) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond426) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond426) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond426) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond426) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond426) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond426) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond426) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond426) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond426) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond426) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond426) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond426) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond426) CFA_SP SP+-4
          CFI (cfiCond426) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond427 Using cfiCommon0
          CFI (cfiCond427) Function zclClosures_ProcessInDoorLockOperationEventNotification
          CFI (cfiCond427) Conditional ??CrossCallReturnLabel_340, ??CrossCallReturnLabel_148
          CFI (cfiCond427) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond427) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond427) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond427) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond427) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond427) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond427) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond427) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond427) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond427) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond427) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond427) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond427) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond427) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond427) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond427) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond427) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond427) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond427) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond427) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond427) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond427) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond427) CFA_SP SP+-4
          CFI (cfiCond427) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond428 Using cfiCommon0
          CFI (cfiCond428) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond428) Conditional ??CrossCallReturnLabel_340, ??CrossCallReturnLabel_149
          CFI (cfiCond428) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond428) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond428) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond428) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond428) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond428) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond428) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond428) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond428) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond428) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond428) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond428) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond428) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond428) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond428) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond428) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond428) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond428) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond428) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond428) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond428) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond428) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond428) CFA_SP SP+-4
          CFI (cfiCond428) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker429 Using cfiCommon1
          CFI (cfiPicker429) NoFunction
          CFI (cfiPicker429) Picker
        LCALL     ?Subroutine123 & 0xFFFF
??CrossCallReturnLabel_342:
        INC       DPTR
        RET
          CFI EndBlock cfiCond420
          CFI EndBlock cfiCond421
          CFI EndBlock cfiCond422
          CFI EndBlock cfiCond423
          CFI EndBlock cfiCond424
          CFI EndBlock cfiCond425
          CFI EndBlock cfiCond426
          CFI EndBlock cfiCond427
          CFI EndBlock cfiCond428
          CFI EndBlock cfiPicker429
// 1612 
// 1613 /*********************************************************************
// 1614  * @fn      zclClosures_ProcessInDoorLockClearPINCodeRsp
// 1615  *
// 1616  * @brief   Process in the received Clear PIN Code Response cmd
// 1617  *
// 1618  * @param   pInMsg - pointer to the incoming message
// 1619  * @param   pCBs - pointer to the application callbacks
// 1620  *
// 1621  * @return  ZStatus_t
// 1622  */
// 1623 static ZStatus_t zclClosures_ProcessInDoorLockClearPINCodeRsp( zclIncoming_t *pInMsg,
// 1624                                                                zclClosures_DoorLockAppCallbacks_t *pCBs )
// 1625 {
// 1626  if ( pCBs->pfnDoorLockClearPINCodeRsp )
// 1627  {
// 1628    return ( pCBs->pfnDoorLockClearPINCodeRsp( pInMsg, pInMsg->pData[0] ) );
// 1629  }
// 1630 
// 1631  return ( ZFailure );
// 1632 }
// 1633 
// 1634 /*********************************************************************
// 1635  * @fn      zclClosures_ProcessInDoorLockClearAllPINCodesRsp
// 1636  *
// 1637  * @brief   Process in the received Clear All PIN Codes Response cmd
// 1638  *
// 1639  * @param   pInMsg - pointer to the incoming message
// 1640  * @param   pCBs - pointer to the application callbacks
// 1641  *
// 1642  * @return  ZStatus_t
// 1643  */
// 1644 static ZStatus_t zclClosures_ProcessInDoorLockClearAllPINCodesRsp( zclIncoming_t *pInMsg,
// 1645                                                                    zclClosures_DoorLockAppCallbacks_t *pCBs )
// 1646 {
// 1647  if ( pCBs->pfnDoorLockClearAllPINCodesRsp )
// 1648  {
// 1649    return ( pCBs->pfnDoorLockClearAllPINCodesRsp( pInMsg, pInMsg->pData[0] ) );
// 1650  }
// 1651 
// 1652  return ( ZFailure );
// 1653 }
// 1654 
// 1655 /*********************************************************************
// 1656  * @fn      zclClosures_ProcessInDoorLockSetUserStatusRsp
// 1657  *
// 1658  * @brief   Process in the received Set User Status Response cmd
// 1659  *
// 1660  * @param   pInMsg - pointer to the incoming message
// 1661  * @param   pCBs - pointer to the application callbacks
// 1662  *
// 1663  * @return  ZStatus_t
// 1664  */
// 1665 static ZStatus_t zclClosures_ProcessInDoorLockSetUserStatusRsp( zclIncoming_t *pInMsg,
// 1666                                                                 zclClosures_DoorLockAppCallbacks_t *pCBs )
// 1667 {
// 1668  if ( pCBs->pfnDoorLockSetUserStatusRsp )
// 1669  {
// 1670    return ( pCBs->pfnDoorLockSetUserStatusRsp( pInMsg, pInMsg->pData[0] ) );
// 1671  }
// 1672 
// 1673  return ( ZFailure );
// 1674 }
// 1675 
// 1676 /*********************************************************************
// 1677  * @fn      zclClosures_ProcessInDoorLockGetUserStatusRsp
// 1678  *
// 1679  * @brief   Process in the received Get User Status Response cmd
// 1680  *
// 1681  * @param   pInMsg - pointer to the incoming message
// 1682  * @param   pCBs - pointer to the application callbacks
// 1683  *
// 1684  * @return  ZStatus_t
// 1685  */
// 1686 static ZStatus_t zclClosures_ProcessInDoorLockGetUserStatusRsp( zclIncoming_t *pInMsg,
// 1687                                                                 zclClosures_DoorLockAppCallbacks_t *pCBs )
// 1688 {
// 1689  if ( pCBs->pfnDoorLockGetUserStatusRsp )
// 1690  {
// 1691    zclDoorLockGetUserStatusRsp_t cmd;
// 1692 
// 1693    cmd.userID = BUILD_UINT16( pInMsg->pData[0], pInMsg->pData[1] );
// 1694    cmd.userStatus = pInMsg->pData[2];
// 1695 
// 1696    return ( pCBs->pfnDoorLockGetUserStatusRsp( pInMsg, &cmd ) );
// 1697  }
// 1698 
// 1699  return ( ZFailure );
// 1700 }
// 1701 
// 1702 /*********************************************************************
// 1703  * @fn      zclClosures_ProcessInDoorLockSetWeekDayScheduleRsp
// 1704  *
// 1705  * @brief   Process in the received Set Week Day Schedule Response cmd
// 1706  *
// 1707  * @param   pInMsg - pointer to the incoming message
// 1708  * @param   pCBs - pointer to the application callbacks
// 1709  *
// 1710  * @return  ZStatus_t
// 1711  */
// 1712 static ZStatus_t zclClosures_ProcessInDoorLockSetWeekDayScheduleRsp( zclIncoming_t *pInMsg,
// 1713                                                                      zclClosures_DoorLockAppCallbacks_t *pCBs )
// 1714 {
// 1715  if ( pCBs->pfnDoorLockSetWeekDayScheduleRsp )
// 1716  {
// 1717    return ( pCBs->pfnDoorLockSetWeekDayScheduleRsp( pInMsg, pInMsg->pData[0] ) );
// 1718  }
// 1719 
// 1720  return ( ZFailure );
// 1721 }
// 1722 
// 1723 /*********************************************************************
// 1724  * @fn      zclClosures_ProcessInDoorLockGetWeekDayScheduleRsp
// 1725  *
// 1726  * @brief   Process in the received Get Week Day Schedule Response cmd
// 1727  *
// 1728  * @param   pInMsg - pointer to the incoming message
// 1729  * @param   pCBs - pointer to the application callbacks
// 1730  *
// 1731  * @return  ZStatus_t
// 1732  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1733 static ZStatus_t zclClosures_ProcessInDoorLockGetWeekDayScheduleRsp( zclIncoming_t *pInMsg,
zclClosures_ProcessInDoorLockGetWeekDayScheduleRsp:
          CFI Block cfiBlock430 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockGetWeekDayScheduleRsp
        CODE
// 1734                                                                      zclClosures_DoorLockAppCallbacks_t *pCBs )
// 1735 {
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        MOV       A,#-0xc
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 9
        MOV       A,#-0x9
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 21)
// 1736  if ( pCBs->pfnDoorLockGetWeekDayScheduleRsp )
        MOV       A,R4
        ADD       A,#0x44
        LCALL     ?Subroutine25 & 0xFFFF
??CrossCallReturnLabel_282:
        JZ        ??zclClosures_ProcessInDoorLockGetWeekDaySchedu_1
// 1737  {
// 1738    zclDoorLockGetWeekDayScheduleRsp_t cmd;
// 1739 
// 1740    cmd.scheduleID = pInMsg->pData[0];
        LCALL     ?Subroutine21 & 0xFFFF
// 1741    cmd.userID = BUILD_UINT16( pInMsg->pData[1], pInMsg->pData[2] );
??CrossCallReturnLabel_56:
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine64 & 0xFFFF
// 1742    cmd.status = pInMsg->pData[3];
??CrossCallReturnLabel_151:
        MOV       R6,A
        MOV       A,#0x3
        LCALL     ?XSTACK_DISP0_8
        MOV       A,R6
        MOVX      @DPTR,A
// 1743 
// 1744    if ( cmd.status == ZCL_STATUS_SUCCESS )
        JNZ       ??zclClosures_ProcessInDoorLockGetWeekDaySchedu_2
// 1745    {
// 1746      cmd.daysMask = pInMsg->pData[4];
        LCALL     ?Subroutine45 & 0xFFFF
// 1747      cmd.startHour = pInMsg->pData[5];
// 1748      cmd.startMinute = pInMsg->pData[6];
// 1749      cmd.endHour = pInMsg->pData[7];
// 1750      cmd.endMinute = pInMsg->pData[8];
// 1751    }
??CrossCallReturnLabel_111:
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        LCALL     ?Subroutine41 & 0xFFFF
??CrossCallReturnLabel_99:
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        LCALL     ?Subroutine42 & 0xFFFF
??CrossCallReturnLabel_101:
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x6
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        LCALL     ?Subroutine112 & 0xFFFF
??CrossCallReturnLabel_247:
        ADD       A,#0x7
        MOV       DPL,A
        CLR       A
        ADDC      A,R6
        MOV       DPH,A
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x7
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        LCALL     ?Subroutine71 & 0xFFFF
??CrossCallReturnLabel_165:
        ADD       A,#0x8
        MOV       DPL,A
        CLR       A
        ADDC      A,R4
        MOV       DPH,A
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x8
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
// 1752 
// 1753    return ( pCBs->pfnDoorLockGetWeekDayScheduleRsp( pInMsg, &cmd ) );
??zclClosures_ProcessInDoorLockGetWeekDaySchedu_2:
        ; Setup parameters for indirect call
        MOV       R4,?XSP + 0
        MOV       R5,?XSP + 1
        MOV       DPL,R0
        MOV       DPH,R1
        LCALL     ??Subroutine152_0 & 0xFFFF
// 1754  }
??CrossCallReturnLabel_368:
        LCALL     ?CALL_IND
        SJMP      ??zclClosures_ProcessInDoorLockGetWeekDaySchedu_3
// 1755 
// 1756  return ( ZFailure );
??zclClosures_ProcessInDoorLockGetWeekDaySchedu_1:
        MOV       R1,#0x1
??zclClosures_ProcessInDoorLockGetWeekDaySchedu_3:
        MOV       A,#0x9
        LJMP      ??Subroutine163_0 & 0xFFFF
// 1757 }
          CFI EndBlock cfiBlock430

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine71:
          CFI Block cfiCond431 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockSetWeekDaySchedule
          CFI Conditional ??CrossCallReturnLabel_164
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond432 Using cfiCommon0
          CFI (cfiCond432) Function zclClosures_ProcessInDoorLockGetWeekDayScheduleRsp
          CFI (cfiCond432) Conditional ??CrossCallReturnLabel_165
          CFI (cfiCond432) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond432) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond432) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond432) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond432) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond432) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond432) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond432) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond432) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond432) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond432) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond432) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond432) CFA_SP SP+-2
          CFI (cfiCond432) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker433 Using cfiCommon1
          CFI (cfiPicker433) NoFunction
          CFI (cfiPicker433) Picker
        LCALL     ?Subroutine113 & 0xFFFF
??CrossCallReturnLabel_249:
        LCALL     ?Subroutine99 & 0xFFFF
??CrossCallReturnLabel_352:
        XCH       A,R4
        RET
          CFI EndBlock cfiCond431
          CFI EndBlock cfiCond432
          CFI EndBlock cfiPicker433

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine64:
          CFI Block cfiCond434 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockSetWeekDaySchedule
          CFI Conditional ??CrossCallReturnLabel_150
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond435 Using cfiCommon0
          CFI (cfiCond435) Function zclClosures_ProcessInDoorLockGetWeekDayScheduleRsp
          CFI (cfiCond435) Conditional ??CrossCallReturnLabel_151
          CFI (cfiCond435) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond435) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond435) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond435) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond435) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond435) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond435) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond435) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond435) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond435) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond435) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond435) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond435) CFA_SP SP+-2
          CFI (cfiCond435) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker436 Using cfiCommon1
          CFI (cfiPicker436) NoFunction
          CFI (cfiPicker436) Picker
        MOV       A,?V0
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,?V1
        LCALL     ?Subroutine109 & 0xFFFF
??CrossCallReturnLabel_239:
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond434
          CFI EndBlock cfiCond435
          CFI EndBlock cfiPicker436

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine45:
          CFI Block cfiCond437 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockSetWeekDaySchedule
          CFI Conditional ??CrossCallReturnLabel_110
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond438 Using cfiCommon0
          CFI (cfiCond438) Function zclClosures_ProcessInDoorLockGetWeekDayScheduleRsp
          CFI (cfiCond438) Conditional ??CrossCallReturnLabel_111
          CFI (cfiCond438) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond438) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond438) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond438) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond438) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond438) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond438) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond438) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond438) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond438) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond438) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond438) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond438) CFA_SP SP+-2
          CFI (cfiCond438) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker439 Using cfiCommon1
          CFI (cfiPicker439) NoFunction
          CFI (cfiPicker439) Picker
        LCALL     ?Subroutine93 & 0xFFFF
??CrossCallReturnLabel_218:
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond437
          CFI EndBlock cfiCond438
          CFI EndBlock cfiPicker439

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine42:
          CFI Block cfiCond440 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockSetWeekDaySchedule
          CFI Conditional ??CrossCallReturnLabel_100
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond441 Using cfiCommon0
          CFI (cfiCond441) Function zclClosures_ProcessInDoorLockGetWeekDayScheduleRsp
          CFI (cfiCond441) Conditional ??CrossCallReturnLabel_101
          CFI (cfiCond441) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond441) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond441) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond441) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond441) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond441) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond441) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond441) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond441) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond441) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond441) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond441) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond441) CFA_SP SP+-2
          CFI (cfiCond441) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker442 Using cfiCommon1
          CFI (cfiPicker442) NoFunction
          CFI (cfiPicker442) Picker
        LCALL     ?Subroutine112 & 0xFFFF
??CrossCallReturnLabel_248:
        ADD       A,#0x6
        MOV       DPL,A
        CLR       A
        ADDC      A,R6
        MOV       DPH,A
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond440
          CFI EndBlock cfiCond441
          CFI EndBlock cfiPicker442

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine112:
          CFI Block cfiCond443 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockGetWeekDayScheduleRsp
          CFI Conditional ??CrossCallReturnLabel_247
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond444 Using cfiCommon0
          CFI (cfiCond444) Function zclClosures_ProcessInDoorLockSetWeekDaySchedule
          CFI (cfiCond444) Conditional ??CrossCallReturnLabel_248, ??CrossCallReturnLabel_100
          CFI (cfiCond444) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond444) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond444) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond444) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond444) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond444) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond444) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond444) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond444) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond444) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond444) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond444) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond444) CFA_SP SP+-4
          CFI (cfiCond444) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond445 Using cfiCommon0
          CFI (cfiCond445) Function zclClosures_ProcessInDoorLockGetWeekDayScheduleRsp
          CFI (cfiCond445) Conditional ??CrossCallReturnLabel_248, ??CrossCallReturnLabel_101
          CFI (cfiCond445) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond445) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond445) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond445) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond445) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond445) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond445) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond445) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond445) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond445) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond445) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond445) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond445) CFA_SP SP+-4
          CFI (cfiCond445) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker446 Using cfiCommon1
          CFI (cfiPicker446) NoFunction
          CFI (cfiPicker446) Picker
        MOVX      @DPTR,A
        MOV       DPL,R4
        MOV       DPH,R5
        MOVX      A,@DPTR
        MOV       R6,A
        INC       DPTR
        MOVX      A,@DPTR
        XCH       A,R6
        RET
          CFI EndBlock cfiCond443
          CFI EndBlock cfiCond444
          CFI EndBlock cfiCond445
          CFI EndBlock cfiPicker446

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine41:
          CFI Block cfiCond447 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockSetWeekDaySchedule
          CFI Conditional ??CrossCallReturnLabel_98
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond448 Using cfiCommon0
          CFI (cfiCond448) Function zclClosures_ProcessInDoorLockGetWeekDayScheduleRsp
          CFI (cfiCond448) Conditional ??CrossCallReturnLabel_99
          CFI (cfiCond448) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond448) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond448) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond448) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond448) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond448) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond448) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond448) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond448) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond448) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond448) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond448) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond448) CFA_SP SP+-2
          CFI (cfiCond448) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker449 Using cfiCommon1
          CFI (cfiPicker449) NoFunction
          CFI (cfiPicker449) Picker
        MOVX      @DPTR,A
        LCALL     ?Subroutine93 & 0xFFFF
??CrossCallReturnLabel_217:
        INC       DPTR
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond447
          CFI EndBlock cfiCond448
          CFI EndBlock cfiPicker449

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine93:
          CFI Block cfiCond450 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockSetWeekDaySchedule
          CFI Conditional ??CrossCallReturnLabel_218, ??CrossCallReturnLabel_110
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond451 Using cfiCommon0
          CFI (cfiCond451) Function zclClosures_ProcessInDoorLockGetWeekDayScheduleRsp
          CFI (cfiCond451) Conditional ??CrossCallReturnLabel_218, ??CrossCallReturnLabel_111
          CFI (cfiCond451) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond451) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond451) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond451) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond451) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond451) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond451) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond451) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond451) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond451) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond451) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond451) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond451) CFA_SP SP+-4
          CFI (cfiCond451) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond452 Using cfiCommon0
          CFI (cfiCond452) Function zclClosures_ProcessInDoorLockSetWeekDaySchedule
          CFI (cfiCond452) Conditional ??CrossCallReturnLabel_217, ??CrossCallReturnLabel_98
          CFI (cfiCond452) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond452) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond452) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond452) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond452) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond452) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond452) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond452) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond452) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond452) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond452) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond452) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond452) CFA_SP SP+-4
          CFI (cfiCond452) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond453 Using cfiCommon0
          CFI (cfiCond453) Function zclClosures_ProcessInDoorLockGetWeekDayScheduleRsp
          CFI (cfiCond453) Conditional ??CrossCallReturnLabel_217, ??CrossCallReturnLabel_99
          CFI (cfiCond453) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond453) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond453) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond453) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond453) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond453) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond453) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond453) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond453) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond453) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond453) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond453) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond453) CFA_SP SP+-4
          CFI (cfiCond453) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker454 Using cfiCommon1
          CFI (cfiPicker454) NoFunction
          CFI (cfiPicker454) Picker
        LCALL     ?Subroutine120 & 0xFFFF
??CrossCallReturnLabel_260:
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        RET
          CFI EndBlock cfiCond450
          CFI EndBlock cfiCond451
          CFI EndBlock cfiCond452
          CFI EndBlock cfiCond453
          CFI EndBlock cfiPicker454

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine21:
          CFI Block cfiCond455 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockSetWeekDaySchedule
          CFI Conditional ??CrossCallReturnLabel_55
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond456 Using cfiCommon0
          CFI (cfiCond456) Function zclClosures_ProcessInDoorLockGetWeekDayScheduleRsp
          CFI (cfiCond456) Conditional ??CrossCallReturnLabel_56
          CFI (cfiCond456) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond456) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond456) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond456) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond456) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond456) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond456) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond456) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond456) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond456) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond456) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond456) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond456) CFA_SP SP+-2
          CFI (cfiCond456) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker457 Using cfiCommon1
          CFI (cfiPicker457) NoFunction
          CFI (cfiPicker457) Picker
        MOV       A,R2
        ADD       A,#0x8
        MOV       R4,A
        CLR       A
        ADDC      A,R3
        MOV       R5,A
        LCALL     ?Subroutine120 & 0xFFFF
??CrossCallReturnLabel_259:
        MOVX      A,@DPTR
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        LCALL     ?Subroutine113 & 0xFFFF
??CrossCallReturnLabel_250:
        MOVX      A,@DPTR
        MOV       R6,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R7,A
        MOV       DPL,R6
        MOV       DPH,R7
        INC       DPTR
        MOVX      A,@DPTR
        MOV       ?V2,A
        MOV       DPL,R6
        MOV       DPH,R7
        LCALL     ?Subroutine102 & 0xFFFF
??CrossCallReturnLabel_228:
        RET
          CFI EndBlock cfiCond455
          CFI EndBlock cfiCond456
          CFI EndBlock cfiPicker457

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine120:
          CFI Block cfiCond458 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockSetWeekDaySchedule
          CFI Conditional ??CrossCallReturnLabel_260, ??CrossCallReturnLabel_218, ??CrossCallReturnLabel_110
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-6
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond459 Using cfiCommon0
          CFI (cfiCond459) Function zclClosures_ProcessInDoorLockGetWeekDayScheduleRsp
          CFI (cfiCond459) Conditional ??CrossCallReturnLabel_260, ??CrossCallReturnLabel_218, ??CrossCallReturnLabel_111
          CFI (cfiCond459) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond459) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond459) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond459) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond459) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond459) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond459) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond459) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond459) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond459) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond459) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond459) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond459) CFA_SP SP+-6
          CFI (cfiCond459) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond460 Using cfiCommon0
          CFI (cfiCond460) Function zclClosures_ProcessInDoorLockSetWeekDaySchedule
          CFI (cfiCond460) Conditional ??CrossCallReturnLabel_260, ??CrossCallReturnLabel_217, ??CrossCallReturnLabel_98
          CFI (cfiCond460) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond460) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond460) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond460) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond460) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond460) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond460) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond460) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond460) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond460) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond460) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond460) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond460) CFA_SP SP+-6
          CFI (cfiCond460) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond461 Using cfiCommon0
          CFI (cfiCond461) Function zclClosures_ProcessInDoorLockGetWeekDayScheduleRsp
          CFI (cfiCond461) Conditional ??CrossCallReturnLabel_260, ??CrossCallReturnLabel_217, ??CrossCallReturnLabel_99
          CFI (cfiCond461) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond461) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond461) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond461) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond461) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond461) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond461) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond461) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond461) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond461) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond461) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond461) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond461) CFA_SP SP+-6
          CFI (cfiCond461) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond462 Using cfiCommon0
          CFI (cfiCond462) Function zclClosures_ProcessInDoorLockSetWeekDaySchedule
          CFI (cfiCond462) Conditional ??CrossCallReturnLabel_259, ??CrossCallReturnLabel_55
          CFI (cfiCond462) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond462) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond462) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond462) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond462) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond462) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond462) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond462) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond462) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond462) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond462) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond462) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond462) CFA_SP SP+-4
          CFI (cfiCond462) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond463 Using cfiCommon0
          CFI (cfiCond463) Function zclClosures_ProcessInDoorLockGetWeekDayScheduleRsp
          CFI (cfiCond463) Conditional ??CrossCallReturnLabel_259, ??CrossCallReturnLabel_56
          CFI (cfiCond463) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond463) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond463) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond463) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond463) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond463) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond463) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond463) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond463) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond463) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond463) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond463) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond463) CFA_SP SP+-4
          CFI (cfiCond463) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker464 Using cfiCommon1
          CFI (cfiPicker464) NoFunction
          CFI (cfiPicker464) Picker
        MOV       DPL,R4
        MOV       DPH,R5
        MOVX      A,@DPTR
        MOV       R6,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       DPH,A
        MOV       DPL,R6
        RET
          CFI EndBlock cfiCond458
          CFI EndBlock cfiCond459
          CFI EndBlock cfiCond460
          CFI EndBlock cfiCond461
          CFI EndBlock cfiCond462
          CFI EndBlock cfiCond463
          CFI EndBlock cfiPicker464

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine102:
          CFI Block cfiCond465 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockSetWeekDaySchedule
          CFI Conditional ??CrossCallReturnLabel_228, ??CrossCallReturnLabel_55
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond466 Using cfiCommon0
          CFI (cfiCond466) Function zclClosures_ProcessInDoorLockGetWeekDayScheduleRsp
          CFI (cfiCond466) Conditional ??CrossCallReturnLabel_228, ??CrossCallReturnLabel_56
          CFI (cfiCond466) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond466) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond466) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond466) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond466) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond466) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond466) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond466) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond466) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond466) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond466) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond466) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond466) CFA_SP SP+-4
          CFI (cfiCond466) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond467 Using cfiCommon0
          CFI (cfiCond467) Function zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
          CFI (cfiCond467) Conditional ??CrossCallReturnLabel_227
          CFI (cfiCond467) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond467) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond467) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond467) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond467) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond467) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond467) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond467) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond467) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond467) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond467) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond467) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond467) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond467) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond467) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond467) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond467) CFA_SP SP+-2
          CFI (cfiCond467) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiPicker468 Using cfiCommon1
          CFI (cfiPicker468) NoFunction
          CFI (cfiPicker468) Picker
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        MOV       ?V1,A
        MOV       A,?V2
        MOV       ?V0,A
        MOV       A,#0x1
        RET
          CFI EndBlock cfiCond465
          CFI EndBlock cfiCond466
          CFI EndBlock cfiCond467
          CFI EndBlock cfiPicker468
// 1758 
// 1759 /*********************************************************************
// 1760  * @fn      zclClosures_ProcessInDoorLockClearWeekDayScheduleRsp
// 1761  *
// 1762  * @brief   Process in the received Clear Week Day Schedule Response cmd
// 1763  *
// 1764  * @param   pInMsg - pointer to the incoming message
// 1765  * @param   pCBs - pointer to the application callbacks
// 1766  *
// 1767  * @return  ZStatus_t
// 1768  */
// 1769 static ZStatus_t zclClosures_ProcessInDoorLockClearWeekDayScheduleRsp( zclIncoming_t *pInMsg,
// 1770                                                                        zclClosures_DoorLockAppCallbacks_t *pCBs )
// 1771 {
// 1772  if ( pCBs->pfnDoorLockClearWeekDayScheduleRsp )
// 1773  {
// 1774    return ( pCBs->pfnDoorLockClearWeekDayScheduleRsp( pInMsg, pInMsg->pData[0] ) );
// 1775  }
// 1776 
// 1777  return ( ZFailure );
// 1778 }
// 1779 
// 1780 /*********************************************************************
// 1781  * @fn      zclClosures_ProcessInDoorLockSetYearDayScheduleRsp
// 1782  *
// 1783  * @brief   Process in the received Set Year Day Schedule Response cmd
// 1784  *
// 1785  * @param   pInMsg - pointer to the incoming message
// 1786  * @param   pCBs - pointer to the application callbacks
// 1787  *
// 1788  * @return  ZStatus_t
// 1789  */
// 1790 static ZStatus_t zclClosures_ProcessInDoorLockSetYearDayScheduleRsp( zclIncoming_t *pInMsg,
// 1791                                                                      zclClosures_DoorLockAppCallbacks_t *pCBs )
// 1792 {
// 1793  if ( pCBs->pfnDoorLockSetYearDayScheduleRsp )
// 1794  {
// 1795    return ( pCBs->pfnDoorLockSetYearDayScheduleRsp( pInMsg, pInMsg->pData[0] ) );
// 1796  }
// 1797 
// 1798  return ( ZFailure );
// 1799 }
// 1800 
// 1801 /*********************************************************************
// 1802  * @fn      zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
// 1803  *
// 1804  * @brief   Process in the received Get Year Day Schedule Response cmd
// 1805  *
// 1806  * @param   pInMsg - pointer to the incoming message
// 1807  * @param   pCBs - pointer to the application callbacks
// 1808  *
// 1809  * @return  ZStatus_t
// 1810  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1811 static ZStatus_t zclClosures_ProcessInDoorLockGetYearDayScheduleRsp( zclIncoming_t *pInMsg,
zclClosures_ProcessInDoorLockGetYearDayScheduleRsp:
          CFI Block cfiBlock469 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
        CODE
// 1812                                                                      zclClosures_DoorLockAppCallbacks_t *pCBs )
// 1813 {
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        MOV       A,#-0x10
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 12
        MOV       A,#-0xc
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 28)
// 1814  if ( pCBs->pfnDoorLockGetYearDayScheduleRsp )
        MOV       A,R4
        ADD       A,#0x4a
        LCALL     ?Subroutine84 & 0xFFFF
??CrossCallReturnLabel_199:
        LCALL     ??Subroutine144_0 & 0xFFFF
??CrossCallReturnLabel_322:
        JNZ       $+5
        LJMP      ??zclClosures_ProcessInDoorLockGetYearDaySchedu_1 & 0xFFFF
// 1815  {
// 1816    zclDoorLockGetYearDayScheduleRsp_t cmd;
// 1817 
// 1818    cmd.scheduleID = pInMsg->pData[0];
        LCALL     ?Subroutine29 & 0xFFFF
// 1819    cmd.userID = BUILD_UINT16( pInMsg->pData[1], pInMsg->pData[2] );
??CrossCallReturnLabel_67:
        MOV       R5,A
        MOV       DPL,R4
        MOV       DPH,R5
        INC       DPTR
        MOVX      A,@DPTR
        MOV       ?V2,A
        MOV       DPL,R4
        MOV       DPH,R5
        LCALL     ?Subroutine102 & 0xFFFF
??CrossCallReturnLabel_227:
        LCALL     ?XSTACK_DISP0_8
        MOV       A,?V0
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,?V1
        LCALL     ?Subroutine80 & 0xFFFF
// 1820    cmd.status = pInMsg->pData[3];
??CrossCallReturnLabel_188:
        MOVX      A,@DPTR
        MOV       R4,A
        MOV       A,#0x3
        LCALL     ?XSTACK_DISP0_8
        MOV       A,R4
        MOVX      @DPTR,A
// 1821 
// 1822    if ( cmd.status == ZCL_STATUS_SUCCESS )
        JZ        $+5
        LJMP      ??zclClosures_ProcessInDoorLockGetYearDaySchedu_2 & 0xFFFF
// 1823    {
// 1824      cmd.zigBeeLocalStartTime = BUILD_UINT32( pInMsg->pData[4], pInMsg->pData[5], pInMsg->pData[6], pInMsg->pData[7] );
        LCALL     ?Subroutine38 & 0xFFFF
??CrossCallReturnLabel_346:
        LCALL     ??Subroutine149_0 & 0xFFFF
??CrossCallReturnLabel_357:
        LCALL     ??Subroutine132_0 & 0xFFFF
??CrossCallReturnLabel_297:
        LCALL     ?L_SHL
        MOV       R0,#?V0
        MOV       R1,#?V4
        LCALL     ?L_ADD
        MOV       DPL,R4
        MOV       DPH,R5
        LCALL     ??Subroutine138_0 & 0xFFFF
??CrossCallReturnLabel_304:
        LCALL     ?L_SHL
        MOV       R0,#?V0
        MOV       R1,#?V4
        LCALL     ?L_ADD
        MOV       DPL,R4
        MOV       DPH,R5
        LCALL     ??Subroutine155_0 & 0xFFFF
??CrossCallReturnLabel_389:
        LCALL     ?L_SHL
        MOV       R0,#?V0
        MOV       R1,#?V4
        LCALL     ?L_ADD
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP0_8
        MOV       R0,#?V0
        LCALL     ?L_MOV_TO_X
// 1825      cmd.zigBeeLocalEndTime = BUILD_UINT32( pInMsg->pData[8], pInMsg->pData[9], pInMsg->pData[10], pInMsg->pData[11] );
        MOV       DPL,R4
        MOV       DPH,R5
        INC       DPTR
        LCALL     ?Subroutine31 & 0xFFFF
// 1826    }
??CrossCallReturnLabel_361:
        INC       DPTR
        LCALL     ?Subroutine30 & 0xFFFF
??CrossCallReturnLabel_292:
        LCALL     ?L_SHL
        MOV       R0,#?V0
        MOV       R1,#?V4
        LCALL     ?L_ADD
        MOV       DPL,R4
        MOV       DPH,R5
        INC       DPTR
        LCALL     ?Subroutine13 & 0xFFFF
??CrossCallReturnLabel_309:
        LCALL     ?L_SHL
        MOV       R0,#?V0
        MOV       R1,#?V4
        LCALL     ?L_ADD
        MOV       A,R4
        ADD       A,#0xb
        MOV       DPL,A
        CLR       A
        ADDC      A,R5
        MOV       DPH,A
        LCALL     ??Subroutine159_0 & 0xFFFF
??CrossCallReturnLabel_384:
        LCALL     ?L_SHL
        MOV       R0,#?V0
        MOV       R1,#?V4
        LCALL     ?L_ADD
        MOV       A,#0x8
        LCALL     ?XSTACK_DISP0_8
        MOV       R0,#?V0
        LCALL     ?L_MOV_TO_X
// 1827 
// 1828    return ( pCBs->pfnDoorLockGetYearDayScheduleRsp( pInMsg, &cmd ) );
??zclClosures_ProcessInDoorLockGetYearDaySchedu_2:
        ; Setup parameters for indirect call
        MOV       R4,?XSP + 0
        MOV       R5,?XSP + 1
        MOV       DPL,R6
        MOV       DPH,R7
        LCALL     ??Subroutine152_0 & 0xFFFF
// 1829  }
??CrossCallReturnLabel_369:
        LCALL     ?CALL_IND
        SJMP      ??zclClosures_ProcessInDoorLockGetYearDaySchedu_3
// 1830 
// 1831  return ( ZFailure );
??zclClosures_ProcessInDoorLockGetYearDaySchedu_1:
        MOV       R1,#0x1
??zclClosures_ProcessInDoorLockGetYearDaySchedu_3:
        MOV       A,#0xc
        LJMP      ??Subroutine127_0 & 0xFFFF
// 1832 }
          CFI EndBlock cfiBlock469

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine84:
          CFI Block cfiCond470 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockSetYearDaySchedule
          CFI Conditional ??CrossCallReturnLabel_197
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond471 Using cfiCommon0
          CFI (cfiCond471) Function zclClosures_ProcessInDoorLockSetHolidaySchedule
          CFI (cfiCond471) Conditional ??CrossCallReturnLabel_198
          CFI (cfiCond471) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond471) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond471) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond471) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond471) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond471) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond471) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond471) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond471) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond471) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond471) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond471) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond471) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond471) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond471) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond471) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond471) CFA_SP SP+-2
          CFI (cfiCond471) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond472 Using cfiCommon0
          CFI (cfiCond472) Function zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
          CFI (cfiCond472) Conditional ??CrossCallReturnLabel_199
          CFI (cfiCond472) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond472) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond472) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond472) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond472) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond472) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond472) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond472) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond472) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond472) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond472) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond472) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond472) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond472) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond472) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond472) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond472) CFA_SP SP+-2
          CFI (cfiCond472) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond473 Using cfiCommon0
          CFI (cfiCond473) Function zclClosures_ProcessInDoorLockGetHolidayScheduleRsp
          CFI (cfiCond473) Conditional ??CrossCallReturnLabel_200
          CFI (cfiCond473) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond473) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond473) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond473) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond473) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond473) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond473) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond473) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond473) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond473) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond473) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond473) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond473) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond473) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond473) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond473) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond473) CFA_SP SP+-2
          CFI (cfiCond473) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiPicker474 Using cfiCommon1
          CFI (cfiPicker474) NoFunction
          CFI (cfiPicker474) Picker
        MOV       R6,A
        CLR       A
        ADDC      A,R5
        MOV       R7,A
        MOV       DPL,R6
        MOV       DPH,R7
        RET
          CFI EndBlock cfiCond470
          CFI EndBlock cfiCond471
          CFI EndBlock cfiCond472
          CFI EndBlock cfiCond473
          CFI EndBlock cfiPicker474

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine38:
          CFI Block cfiCond475 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
          CFI Conditional ??CrossCallReturnLabel_346
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond476 Using cfiCommon0
          CFI (cfiCond476) Function zclClosures_ProcessInDoorLockGetHolidayScheduleRsp
          CFI (cfiCond476) Conditional ??CrossCallReturnLabel_347
          CFI (cfiCond476) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond476) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond476) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond476) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond476) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond476) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond476) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond476) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond476) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond476) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond476) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond476) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond476) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond476) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond476) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond476) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond476) CFA_SP SP+-2
          CFI (cfiCond476) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiPicker477 Using cfiCommon1
          CFI (cfiPicker477) NoFunction
          CFI (cfiPicker477) Picker
        MOV       DPL,R0
        MOV       DPH,R1
          CFI EndBlock cfiCond475
          CFI EndBlock cfiCond476
          CFI EndBlock cfiPicker477
        REQUIRE ??Subroutine146_0
        ; // Fall through to label ??Subroutine146_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine146_0:
          CFI Block cfiCond478 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockCmds
          CFI Conditional ??CrossCallReturnLabel_345
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond479 Using cfiCommon0
          CFI (cfiCond479) Function zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
          CFI (cfiCond479) Conditional ??CrossCallReturnLabel_346
          CFI (cfiCond479) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond479) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond479) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond479) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond479) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond479) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond479) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond479) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond479) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond479) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond479) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond479) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond479) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond479) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond479) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond479) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond479) CFA_SP SP+-2
          CFI (cfiCond479) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond480 Using cfiCommon0
          CFI (cfiCond480) Function zclClosures_ProcessInDoorLockGetHolidayScheduleRsp
          CFI (cfiCond480) Conditional ??CrossCallReturnLabel_347
          CFI (cfiCond480) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond480) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond480) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond480) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond480) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond480) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond480) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond480) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond480) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond480) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond480) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond480) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond480) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond480) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond480) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond480) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond480) CFA_SP SP+-2
          CFI (cfiCond480) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiPicker481 Using cfiCommon1
          CFI (cfiPicker481) NoFunction
          CFI (cfiPicker481) Picker
        LCALL     ?Subroutine99 & 0xFFFF
??CrossCallReturnLabel_354:
        MOV       R5,A
        MOV       DPL,R4
        MOV       DPH,R5
        RET
          CFI EndBlock cfiCond478
          CFI EndBlock cfiCond479
          CFI EndBlock cfiCond480
          CFI EndBlock cfiPicker481

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine31:
          CFI Block cfiCond482 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockSetYearDaySchedule
          CFI Conditional ??CrossCallReturnLabel_360
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond483 Using cfiCommon0
          CFI (cfiCond483) Function zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
          CFI (cfiCond483) Conditional ??CrossCallReturnLabel_361
          CFI (cfiCond483) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond483) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond483) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond483) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond483) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond483) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond483) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond483) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond483) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond483) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond483) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond483) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond483) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond483) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond483) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond483) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond483) CFA_SP SP+-2
          CFI (cfiCond483) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiPicker484 Using cfiCommon1
          CFI (cfiPicker484) NoFunction
          CFI (cfiPicker484) Picker
        INC       DPTR
          CFI EndBlock cfiCond482
          CFI EndBlock cfiCond483
          CFI EndBlock cfiPicker484
        REQUIRE ??Subroutine147_0
        ; // Fall through to label ??Subroutine147_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine147_0:
          CFI Block cfiCond485 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockGetHolidayScheduleRsp
          CFI Conditional ??CrossCallReturnLabel_359
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond486 Using cfiCommon0
          CFI (cfiCond486) Function zclClosures_ProcessInDoorLockSetYearDaySchedule
          CFI (cfiCond486) Conditional ??CrossCallReturnLabel_360
          CFI (cfiCond486) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond486) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond486) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond486) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond486) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond486) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond486) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond486) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond486) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond486) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond486) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond486) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond486) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond486) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond486) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond486) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond486) CFA_SP SP+-2
          CFI (cfiCond486) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond487 Using cfiCommon0
          CFI (cfiCond487) Function zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
          CFI (cfiCond487) Conditional ??CrossCallReturnLabel_361
          CFI (cfiCond487) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond487) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond487) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond487) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond487) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond487) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond487) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond487) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond487) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond487) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond487) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond487) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond487) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond487) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond487) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond487) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond487) CFA_SP SP+-2
          CFI (cfiCond487) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiPicker488 Using cfiCommon1
          CFI (cfiPicker488) NoFunction
          CFI (cfiPicker488) Picker
        INC       DPTR
          CFI EndBlock cfiCond485
          CFI EndBlock cfiCond486
          CFI EndBlock cfiCond487
          CFI EndBlock cfiPicker488
        REQUIRE ??Subroutine148_0
        ; // Fall through to label ??Subroutine148_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine148_0:
          CFI Block cfiCond489 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockSetHolidaySchedule
          CFI Conditional ??CrossCallReturnLabel_358
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond490 Using cfiCommon0
          CFI (cfiCond490) Function zclClosures_ProcessInDoorLockGetHolidayScheduleRsp
          CFI (cfiCond490) Conditional ??CrossCallReturnLabel_359
          CFI (cfiCond490) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond490) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond490) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond490) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond490) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond490) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond490) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond490) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond490) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond490) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond490) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond490) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond490) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond490) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond490) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond490) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond490) CFA_SP SP+-2
          CFI (cfiCond490) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond491 Using cfiCommon0
          CFI (cfiCond491) Function zclClosures_ProcessInDoorLockSetYearDaySchedule
          CFI (cfiCond491) Conditional ??CrossCallReturnLabel_360
          CFI (cfiCond491) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond491) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond491) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond491) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond491) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond491) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond491) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond491) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond491) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond491) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond491) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond491) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond491) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond491) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond491) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond491) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond491) CFA_SP SP+-2
          CFI (cfiCond491) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond492 Using cfiCommon0
          CFI (cfiCond492) Function zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
          CFI (cfiCond492) Conditional ??CrossCallReturnLabel_361
          CFI (cfiCond492) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond492) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond492) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond492) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond492) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond492) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond492) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond492) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond492) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond492) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond492) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond492) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond492) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond492) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond492) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond492) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond492) CFA_SP SP+-2
          CFI (cfiCond492) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiPicker493 Using cfiCommon1
          CFI (cfiPicker493) NoFunction
          CFI (cfiPicker493) Picker
        INC       DPTR
          CFI EndBlock cfiCond489
          CFI EndBlock cfiCond490
          CFI EndBlock cfiCond491
          CFI EndBlock cfiCond492
          CFI EndBlock cfiPicker493
        REQUIRE ??Subroutine149_0
        ; // Fall through to label ??Subroutine149_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine149_0:
          CFI Block cfiCond494 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
          CFI Conditional ??CrossCallReturnLabel_357
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond495 Using cfiCommon0
          CFI (cfiCond495) Function zclClosures_ProcessInDoorLockSetHolidaySchedule
          CFI (cfiCond495) Conditional ??CrossCallReturnLabel_358
          CFI (cfiCond495) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond495) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond495) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond495) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond495) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond495) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond495) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond495) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond495) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond495) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond495) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond495) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond495) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond495) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond495) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond495) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond495) CFA_SP SP+-2
          CFI (cfiCond495) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond496 Using cfiCommon0
          CFI (cfiCond496) Function zclClosures_ProcessInDoorLockGetHolidayScheduleRsp
          CFI (cfiCond496) Conditional ??CrossCallReturnLabel_359
          CFI (cfiCond496) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond496) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond496) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond496) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond496) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond496) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond496) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond496) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond496) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond496) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond496) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond496) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond496) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond496) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond496) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond496) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond496) CFA_SP SP+-2
          CFI (cfiCond496) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond497 Using cfiCommon0
          CFI (cfiCond497) Function zclClosures_ProcessInDoorLockSetYearDaySchedule
          CFI (cfiCond497) Conditional ??CrossCallReturnLabel_360
          CFI (cfiCond497) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond497) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond497) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond497) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond497) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond497) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond497) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond497) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond497) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond497) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond497) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond497) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond497) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond497) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond497) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond497) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond497) CFA_SP SP+-2
          CFI (cfiCond497) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond498 Using cfiCommon0
          CFI (cfiCond498) Function zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
          CFI (cfiCond498) Conditional ??CrossCallReturnLabel_361
          CFI (cfiCond498) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond498) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond498) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond498) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond498) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond498) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond498) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond498) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond498) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond498) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond498) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond498) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond498) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond498) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond498) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond498) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond498) CFA_SP SP+-2
          CFI (cfiCond498) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiPicker499 Using cfiCommon1
          CFI (cfiPicker499) NoFunction
          CFI (cfiPicker499) Picker
        INC       DPTR
          CFI EndBlock cfiCond494
          CFI EndBlock cfiCond495
          CFI EndBlock cfiCond496
          CFI EndBlock cfiCond497
          CFI EndBlock cfiCond498
          CFI EndBlock cfiPicker499
        REQUIRE ??Subroutine150_0
        ; // Fall through to label ??Subroutine150_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine150_0:
          CFI Block cfiCond500 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockSetYearDaySchedule
          CFI Conditional ??CrossCallReturnLabel_356
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond501 Using cfiCommon0
          CFI (cfiCond501) Function zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
          CFI (cfiCond501) Conditional ??CrossCallReturnLabel_357
          CFI (cfiCond501) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond501) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond501) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond501) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond501) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond501) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond501) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond501) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond501) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond501) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond501) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond501) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond501) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond501) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond501) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond501) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond501) CFA_SP SP+-2
          CFI (cfiCond501) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond502 Using cfiCommon0
          CFI (cfiCond502) Function zclClosures_ProcessInDoorLockSetHolidaySchedule
          CFI (cfiCond502) Conditional ??CrossCallReturnLabel_358
          CFI (cfiCond502) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond502) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond502) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond502) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond502) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond502) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond502) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond502) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond502) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond502) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond502) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond502) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond502) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond502) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond502) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond502) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond502) CFA_SP SP+-2
          CFI (cfiCond502) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond503 Using cfiCommon0
          CFI (cfiCond503) Function zclClosures_ProcessInDoorLockGetHolidayScheduleRsp
          CFI (cfiCond503) Conditional ??CrossCallReturnLabel_359
          CFI (cfiCond503) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond503) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond503) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond503) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond503) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond503) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond503) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond503) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond503) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond503) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond503) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond503) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond503) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond503) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond503) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond503) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond503) CFA_SP SP+-2
          CFI (cfiCond503) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond504 Using cfiCommon0
          CFI (cfiCond504) Function zclClosures_ProcessInDoorLockSetYearDaySchedule
          CFI (cfiCond504) Conditional ??CrossCallReturnLabel_360
          CFI (cfiCond504) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond504) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond504) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond504) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond504) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond504) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond504) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond504) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond504) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond504) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond504) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond504) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond504) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond504) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond504) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond504) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond504) CFA_SP SP+-2
          CFI (cfiCond504) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond505 Using cfiCommon0
          CFI (cfiCond505) Function zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
          CFI (cfiCond505) Conditional ??CrossCallReturnLabel_361
          CFI (cfiCond505) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond505) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond505) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond505) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond505) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond505) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond505) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond505) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond505) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond505) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond505) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond505) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond505) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond505) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond505) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond505) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond505) CFA_SP SP+-2
          CFI (cfiCond505) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiPicker506 Using cfiCommon1
          CFI (cfiPicker506) NoFunction
          CFI (cfiPicker506) Picker
        INC       DPTR
          CFI EndBlock cfiCond500
          CFI EndBlock cfiCond501
          CFI EndBlock cfiCond502
          CFI EndBlock cfiCond503
          CFI EndBlock cfiCond504
          CFI EndBlock cfiCond505
          CFI EndBlock cfiPicker506
        REQUIRE ??Subroutine151_0
        ; // Fall through to label ??Subroutine151_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine151_0:
          CFI Block cfiCond507 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockGetHolidayScheduleRsp
          CFI Conditional ??CrossCallReturnLabel_355
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond508 Using cfiCommon0
          CFI (cfiCond508) Function zclClosures_ProcessInDoorLockSetYearDaySchedule
          CFI (cfiCond508) Conditional ??CrossCallReturnLabel_356
          CFI (cfiCond508) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond508) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond508) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond508) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond508) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond508) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond508) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond508) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond508) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond508) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond508) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond508) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond508) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond508) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond508) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond508) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond508) CFA_SP SP+-2
          CFI (cfiCond508) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond509 Using cfiCommon0
          CFI (cfiCond509) Function zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
          CFI (cfiCond509) Conditional ??CrossCallReturnLabel_357
          CFI (cfiCond509) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond509) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond509) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond509) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond509) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond509) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond509) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond509) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond509) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond509) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond509) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond509) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond509) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond509) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond509) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond509) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond509) CFA_SP SP+-2
          CFI (cfiCond509) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond510 Using cfiCommon0
          CFI (cfiCond510) Function zclClosures_ProcessInDoorLockSetHolidaySchedule
          CFI (cfiCond510) Conditional ??CrossCallReturnLabel_358
          CFI (cfiCond510) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond510) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond510) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond510) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond510) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond510) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond510) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond510) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond510) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond510) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond510) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond510) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond510) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond510) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond510) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond510) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond510) CFA_SP SP+-2
          CFI (cfiCond510) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond511 Using cfiCommon0
          CFI (cfiCond511) Function zclClosures_ProcessInDoorLockGetHolidayScheduleRsp
          CFI (cfiCond511) Conditional ??CrossCallReturnLabel_359
          CFI (cfiCond511) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond511) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond511) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond511) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond511) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond511) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond511) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond511) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond511) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond511) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond511) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond511) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond511) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond511) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond511) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond511) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond511) CFA_SP SP+-2
          CFI (cfiCond511) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond512 Using cfiCommon0
          CFI (cfiCond512) Function zclClosures_ProcessInDoorLockSetYearDaySchedule
          CFI (cfiCond512) Conditional ??CrossCallReturnLabel_360
          CFI (cfiCond512) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond512) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond512) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond512) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond512) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond512) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond512) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond512) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond512) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond512) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond512) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond512) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond512) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond512) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond512) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond512) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond512) CFA_SP SP+-2
          CFI (cfiCond512) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond513 Using cfiCommon0
          CFI (cfiCond513) Function zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
          CFI (cfiCond513) Conditional ??CrossCallReturnLabel_361
          CFI (cfiCond513) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond513) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond513) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond513) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond513) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond513) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond513) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond513) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond513) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond513) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond513) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond513) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond513) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond513) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond513) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond513) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond513) CFA_SP SP+-2
          CFI (cfiCond513) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiPicker514 Using cfiCommon1
          CFI (cfiPicker514) NoFunction
          CFI (cfiPicker514) Picker
        LCALL     ?Subroutine98 & 0xFFFF
??CrossCallReturnLabel_401:
        MOV       DPL,R4
        MOV       DPH,R5
        RET
          CFI EndBlock cfiCond507
          CFI EndBlock cfiCond508
          CFI EndBlock cfiCond509
          CFI EndBlock cfiCond510
          CFI EndBlock cfiCond511
          CFI EndBlock cfiCond512
          CFI EndBlock cfiCond513
          CFI EndBlock cfiPicker514
// 1833 
// 1834 /*********************************************************************
// 1835  * @fn      zclClosures_ProcessInDoorLockClearYearDayScheduleRsp
// 1836  *
// 1837  * @brief   Process in the received Clear Year Day Schedule Response cmd
// 1838  *
// 1839  * @param   pInMsg - pointer to the incoming message
// 1840  * @param   pCBs - pointer to the application callbacks
// 1841  *
// 1842  * @return  ZStatus_t
// 1843  */
// 1844 static ZStatus_t zclClosures_ProcessInDoorLockClearYearDayScheduleRsp( zclIncoming_t *pInMsg,
// 1845                                                                        zclClosures_DoorLockAppCallbacks_t *pCBs )
// 1846 {
// 1847  if ( pCBs->pfnDoorLockClearYearDayScheduleRsp )
// 1848  {
// 1849    return ( pCBs->pfnDoorLockClearYearDayScheduleRsp( pInMsg, pInMsg->pData[0] ) );
// 1850  }
// 1851 
// 1852  return ( ZFailure );
// 1853 }
// 1854 
// 1855 /*********************************************************************
// 1856  * @fn      zclClosures_ProcessInDoorLockSetHolidayScheduleRsp
// 1857  *
// 1858  * @brief   Process in the received Set Holiday Schedule Response cmd
// 1859  *
// 1860  * @param   pInMsg - pointer to the incoming message
// 1861  * @param   pCBs - pointer to the application callbacks
// 1862  *
// 1863  * @return  ZStatus_t
// 1864  */
// 1865 static ZStatus_t zclClosures_ProcessInDoorLockSetHolidayScheduleRsp( zclIncoming_t *pInMsg,
// 1866                                                                      zclClosures_DoorLockAppCallbacks_t *pCBs )
// 1867 {
// 1868  if ( pCBs->pfnDoorLockSetHolidayScheduleRsp )
// 1869  {
// 1870    return ( pCBs->pfnDoorLockSetHolidayScheduleRsp( pInMsg, pInMsg->pData[0] ) );
// 1871  }
// 1872 
// 1873  return ( ZFailure );
// 1874 }
// 1875 
// 1876 /*********************************************************************
// 1877  * @fn      zclClosures_ProcessInDoorLockGetHolidayScheduleRsp
// 1878  *
// 1879  * @brief   Process in the received Get Holiday Schedule Response cmd
// 1880  *
// 1881  * @param   pInMsg - pointer to the incoming message
// 1882  * @param   pCBs - pointer to the application callbacks
// 1883  *
// 1884  * @return  ZStatus_t
// 1885  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1886 static ZStatus_t zclClosures_ProcessInDoorLockGetHolidayScheduleRsp( zclIncoming_t *pInMsg,
zclClosures_ProcessInDoorLockGetHolidayScheduleRsp:
          CFI Block cfiBlock515 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockGetHolidayScheduleRsp
        CODE
// 1887                                                                      zclClosures_DoorLockAppCallbacks_t *pCBs )
// 1888 {
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        MOV       A,#-0x10
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 11
        MOV       A,#-0xb
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 27)
// 1889  if ( pCBs->pfnDoorLockGetHolidayScheduleRsp )
        MOV       A,R4
        ADD       A,#0x50
        LCALL     ?Subroutine84 & 0xFFFF
??CrossCallReturnLabel_200:
        LCALL     ??Subroutine144_0 & 0xFFFF
??CrossCallReturnLabel_323:
        JNZ       $+5
        LJMP      ??zclClosures_ProcessInDoorLockGetHolidaySchedu_1 & 0xFFFF
// 1890  {
// 1891    zclDoorLockGetHolidayScheduleRsp_t cmd;
// 1892 
// 1893    cmd.holidayScheduleID = pInMsg->pData[0];
        LCALL     ?Subroutine29 & 0xFFFF
// 1894    cmd.status = pInMsg->pData[1];
??CrossCallReturnLabel_68:
        MOV       DPH,A
        MOV       DPL,R4
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R4,A
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP0_8
        MOV       A,R4
        MOVX      @DPTR,A
// 1895 
// 1896    if ( cmd.status == ZCL_STATUS_SUCCESS )
        JZ        $+5
        LJMP      ??zclClosures_ProcessInDoorLockGetHolidaySchedu_2 & 0xFFFF
// 1897    {
// 1898      cmd.zigBeeLocalStartTime = BUILD_UINT32( pInMsg->pData[2], pInMsg->pData[3], pInMsg->pData[4], pInMsg->pData[5] );
        LCALL     ?Subroutine38 & 0xFFFF
??CrossCallReturnLabel_347:
        LCALL     ??Subroutine151_0 & 0xFFFF
??CrossCallReturnLabel_355:
        LCALL     ??Subroutine134_0 & 0xFFFF
??CrossCallReturnLabel_295:
        LCALL     ?L_SHL
        MOV       R0,#?V0
        MOV       R1,#?V4
        LCALL     ?L_ADD
        MOV       DPL,R4
        MOV       DPH,R5
        LCALL     ??Subroutine140_0 & 0xFFFF
??CrossCallReturnLabel_302:
        LCALL     ?L_SHL
        MOV       R0,#?V0
        MOV       R1,#?V4
        LCALL     ?L_ADD
        MOV       DPL,R4
        MOV       DPH,R5
        LCALL     ??Subroutine157_0 & 0xFFFF
??CrossCallReturnLabel_387:
        LCALL     ?L_SHL
        MOV       R0,#?V0
        MOV       R1,#?V4
        LCALL     ?L_ADD
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        MOV       R0,#?V0
        LCALL     ?L_MOV_TO_X
// 1899      cmd.zigBeeLocalEndTime = BUILD_UINT32( pInMsg->pData[6], pInMsg->pData[7], pInMsg->pData[8], pInMsg->pData[9] );
        MOV       DPL,R4
        MOV       DPH,R5
        LCALL     ??Subroutine147_0 & 0xFFFF
??CrossCallReturnLabel_359:
        LCALL     ??Subroutine130_0 & 0xFFFF
??CrossCallReturnLabel_290:
        LCALL     ?L_SHL
        MOV       R0,#?V0
        MOV       R1,#?V4
        LCALL     ?L_ADD
        MOV       DPL,R4
        MOV       DPH,R5
        LCALL     ??Subroutine136_0 & 0xFFFF
??CrossCallReturnLabel_307:
        LCALL     ?L_SHL
        MOV       R0,#?V0
        MOV       R1,#?V4
        LCALL     ?L_ADD
        MOV       DPL,R4
        MOV       DPH,R5
        LCALL     ??Subroutine153_0 & 0xFFFF
??CrossCallReturnLabel_392:
        LCALL     ?L_SHL
        MOV       R0,#?V0
        MOV       R1,#?V4
        LCALL     ?L_ADD
        MOV       A,#0x6
        LCALL     ?XSTACK_DISP0_8
        MOV       R0,#?V0
        LCALL     ?L_MOV_TO_X
// 1900      cmd.operatingModeDuringHoliday = pInMsg->pData[10];
        MOV       DPL,R4
        MOV       DPH,R5
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0xa
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
// 1901    }
// 1902 
// 1903    return ( pCBs->pfnDoorLockGetHolidayScheduleRsp( pInMsg, &cmd ) );
??zclClosures_ProcessInDoorLockGetHolidaySchedu_2:
        ; Setup parameters for indirect call
        MOV       R4,?XSP + 0
        MOV       R5,?XSP + 1
        MOV       DPL,R6
        MOV       DPH,R7
        LCALL     ??Subroutine152_0 & 0xFFFF
// 1904  }
??CrossCallReturnLabel_370:
        LCALL     ?CALL_IND
        SJMP      ??zclClosures_ProcessInDoorLockGetHolidaySchedu_3
// 1905 
// 1906  return ( ZFailure );
??zclClosures_ProcessInDoorLockGetHolidaySchedu_1:
        MOV       R1,#0x1
??zclClosures_ProcessInDoorLockGetHolidaySchedu_3:
        LJMP      ?Subroutine7 & 0xFFFF
// 1907 }
          CFI EndBlock cfiBlock515

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine48:
          CFI Block cfiCond516 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLock
          CFI Conditional ??CrossCallReturnLabel_374
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond517 Using cfiCommon0
          CFI (cfiCond517) Function zclClosures_ProcessInDoorLockUnlockWithTimeout
          CFI (cfiCond517) Conditional ??CrossCallReturnLabel_375
          CFI (cfiCond517) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond517) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond517) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond517) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond517) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond517) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond517) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond517) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond517) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond517) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond517) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond517) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond517) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond517) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond517) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond517) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond517) CFA_SP SP+-2
          CFI (cfiCond517) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond518 Using cfiCommon0
          CFI (cfiCond518) Function zclClosures_ProcessInDoorLockSetPINCode
          CFI (cfiCond518) Conditional ??CrossCallReturnLabel_376
          CFI (cfiCond518) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond518) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond518) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond518) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond518) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond518) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond518) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond518) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond518) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond518) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond518) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond518) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond518) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond518) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond518) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond518) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond518) CFA_SP SP+-2
          CFI (cfiCond518) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond519 Using cfiCommon0
          CFI (cfiCond519) Function zclClosures_ProcessInDoorLockSetRFIDCode
          CFI (cfiCond519) Conditional ??CrossCallReturnLabel_377
          CFI (cfiCond519) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond519) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond519) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond519) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond519) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond519) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond519) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond519) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond519) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond519) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond519) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond519) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond519) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond519) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond519) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond519) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond519) CFA_SP SP+-2
          CFI (cfiCond519) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond520 Using cfiCommon0
          CFI (cfiCond520) Function zclClosures_ProcessInDoorLockGetPINCodeRsp
          CFI (cfiCond520) Conditional ??CrossCallReturnLabel_378
          CFI (cfiCond520) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond520) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond520) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond520) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond520) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond520) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond520) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond520) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond520) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond520) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond520) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond520) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond520) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond520) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond520) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond520) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond520) CFA_SP SP+-2
          CFI (cfiCond520) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond521 Using cfiCommon0
          CFI (cfiCond521) Function zclClosures_ProcessInDoorLockGetRFIDCodeRsp
          CFI (cfiCond521) Conditional ??CrossCallReturnLabel_379
          CFI (cfiCond521) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond521) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond521) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond521) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond521) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond521) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond521) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond521) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond521) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond521) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond521) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond521) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond521) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond521) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond521) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond521) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond521) CFA_SP SP+-2
          CFI (cfiCond521) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker522 Using cfiCommon1
          CFI (cfiPicker522) NoFunction
          CFI (cfiPicker522) Picker
        MOV       R4,?XSP + 0
        MOV       R5,?XSP + 1
        MOV       A,R6
        MOV       R2,A
        MOV       A,R7
        MOV       R3,A
        MOV       DPL,?V0
        MOV       DPH,?V1
          CFI EndBlock cfiCond516
          CFI EndBlock cfiCond517
          CFI EndBlock cfiCond518
          CFI EndBlock cfiCond519
          CFI EndBlock cfiCond520
          CFI EndBlock cfiCond521
          CFI EndBlock cfiPicker522
        REQUIRE ??Subroutine152_0
        ; // Fall through to label ??Subroutine152_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine152_0:
          CFI Block cfiCond523 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockCmds
          CFI Conditional ??CrossCallReturnLabel_362
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond524 Using cfiCommon0
          CFI (cfiCond524) Function zclClosures_ProcessInDoorLockUnlockWithTimeout
          CFI (cfiCond524) Conditional ??CrossCallReturnLabel_363
          CFI (cfiCond524) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond524) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond524) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond524) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond524) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond524) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond524) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond524) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond524) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond524) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond524) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond524) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond524) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond524) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond524) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond524) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond524) CFA_SP SP+-2
          CFI (cfiCond524) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond525 Using cfiCommon0
          CFI (cfiCond525) Function zclClosures_ProcessInDoorLockSetWeekDaySchedule
          CFI (cfiCond525) Conditional ??CrossCallReturnLabel_364
          CFI (cfiCond525) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond525) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond525) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond525) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond525) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond525) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond525) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond525) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond525) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond525) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond525) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond525) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond525) CFA_SP SP+-2
          CFI (cfiCond525) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond526 Using cfiCommon0
          CFI (cfiCond526) Function zclClosures_ProcessInDoorLockSetYearDaySchedule
          CFI (cfiCond526) Conditional ??CrossCallReturnLabel_365
          CFI (cfiCond526) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond526) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond526) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond526) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond526) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond526) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond526) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond526) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond526) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond526) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond526) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond526) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond526) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond526) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond526) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond526) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond526) CFA_SP SP+-2
          CFI (cfiCond526) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond527 Using cfiCommon0
          CFI (cfiCond527) Function zclClosures_ProcessInDoorLockSetHolidaySchedule
          CFI (cfiCond527) Conditional ??CrossCallReturnLabel_366
          CFI (cfiCond527) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond527) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond527) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond527) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond527) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond527) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond527) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond527) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond527) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond527) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond527) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond527) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond527) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond527) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond527) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond527) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond527) CFA_SP SP+-2
          CFI (cfiCond527) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond528 Using cfiCommon0
          CFI (cfiCond528) Function zclClosures_ProcessInDoorLockGetLogRecordRsp
          CFI (cfiCond528) Conditional ??CrossCallReturnLabel_367
          CFI (cfiCond528) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond528) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond528) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond528) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond528) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond528) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond528) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond528) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond528) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond528) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond528) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond528) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond528) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond528) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond528) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond528) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond528) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond528) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond528) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond528) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond528) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond528) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond528) CFA_SP SP+-2
          CFI (cfiCond528) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond529 Using cfiCommon0
          CFI (cfiCond529) Function zclClosures_ProcessInDoorLockGetWeekDayScheduleRsp
          CFI (cfiCond529) Conditional ??CrossCallReturnLabel_368
          CFI (cfiCond529) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond529) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond529) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond529) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond529) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond529) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond529) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond529) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond529) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond529) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond529) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond529) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond529) CFA_SP SP+-2
          CFI (cfiCond529) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond530 Using cfiCommon0
          CFI (cfiCond530) Function zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
          CFI (cfiCond530) Conditional ??CrossCallReturnLabel_369
          CFI (cfiCond530) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond530) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond530) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond530) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond530) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond530) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond530) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond530) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond530) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond530) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond530) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond530) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond530) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond530) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond530) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond530) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond530) CFA_SP SP+-2
          CFI (cfiCond530) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond531 Using cfiCommon0
          CFI (cfiCond531) Function zclClosures_ProcessInDoorLockGetHolidayScheduleRsp
          CFI (cfiCond531) Conditional ??CrossCallReturnLabel_370
          CFI (cfiCond531) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond531) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond531) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond531) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond531) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond531) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond531) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond531) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond531) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond531) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond531) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond531) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond531) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond531) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond531) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond531) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond531) CFA_SP SP+-2
          CFI (cfiCond531) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond532 Using cfiCommon0
          CFI (cfiCond532) Function zclClosures_ProcessInDoorLockOperationEventNotification
          CFI (cfiCond532) Conditional ??CrossCallReturnLabel_371
          CFI (cfiCond532) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond532) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond532) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond532) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond532) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond532) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond532) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond532) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond532) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond532) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond532) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond532) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond532) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond532) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond532) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond532) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond532) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond532) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond532) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond532) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond532) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond532) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond532) CFA_SP SP+-2
          CFI (cfiCond532) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond533 Using cfiCommon0
          CFI (cfiCond533) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond533) Conditional ??CrossCallReturnLabel_372
          CFI (cfiCond533) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond533) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond533) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond533) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond533) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond533) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond533) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond533) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond533) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond533) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond533) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond533) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond533) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond533) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond533) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond533) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond533) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond533) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond533) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond533) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond533) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond533) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond533) CFA_SP SP+-2
          CFI (cfiCond533) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond534 Using cfiCommon0
          CFI (cfiCond534) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond534) Conditional ??CrossCallReturnLabel_373
          CFI (cfiCond534) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond534) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond534) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond534) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond534) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond534) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond534) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond534) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond534) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond534) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond534) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond534) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond534) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond534) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond534) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond534) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond534) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond534) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond534) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond534) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond534) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond534) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond534) CFA_SP SP+-2
          CFI (cfiCond534) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond535 Using cfiCommon0
          CFI (cfiCond535) Function zclClosures_ProcessInDoorLock
          CFI (cfiCond535) Conditional ??CrossCallReturnLabel_374
          CFI (cfiCond535) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond535) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond535) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond535) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond535) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond535) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond535) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond535) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond535) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond535) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond535) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond535) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond535) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond535) CFA_SP SP+-2
          CFI (cfiCond535) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond536 Using cfiCommon0
          CFI (cfiCond536) Function zclClosures_ProcessInDoorLockUnlockWithTimeout
          CFI (cfiCond536) Conditional ??CrossCallReturnLabel_375
          CFI (cfiCond536) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond536) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond536) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond536) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond536) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond536) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond536) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond536) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond536) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond536) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond536) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond536) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond536) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond536) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond536) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond536) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond536) CFA_SP SP+-2
          CFI (cfiCond536) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond537 Using cfiCommon0
          CFI (cfiCond537) Function zclClosures_ProcessInDoorLockSetPINCode
          CFI (cfiCond537) Conditional ??CrossCallReturnLabel_376
          CFI (cfiCond537) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond537) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond537) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond537) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond537) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond537) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond537) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond537) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond537) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond537) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond537) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond537) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond537) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond537) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond537) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond537) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond537) CFA_SP SP+-2
          CFI (cfiCond537) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond538 Using cfiCommon0
          CFI (cfiCond538) Function zclClosures_ProcessInDoorLockSetRFIDCode
          CFI (cfiCond538) Conditional ??CrossCallReturnLabel_377
          CFI (cfiCond538) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond538) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond538) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond538) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond538) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond538) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond538) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond538) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond538) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond538) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond538) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond538) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond538) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond538) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond538) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond538) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond538) CFA_SP SP+-2
          CFI (cfiCond538) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond539 Using cfiCommon0
          CFI (cfiCond539) Function zclClosures_ProcessInDoorLockGetPINCodeRsp
          CFI (cfiCond539) Conditional ??CrossCallReturnLabel_378
          CFI (cfiCond539) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond539) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond539) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond539) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond539) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond539) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond539) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond539) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond539) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond539) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond539) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond539) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond539) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond539) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond539) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond539) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond539) CFA_SP SP+-2
          CFI (cfiCond539) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond540 Using cfiCommon0
          CFI (cfiCond540) Function zclClosures_ProcessInDoorLockGetRFIDCodeRsp
          CFI (cfiCond540) Conditional ??CrossCallReturnLabel_379
          CFI (cfiCond540) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond540) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond540) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond540) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond540) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond540) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond540) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond540) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond540) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond540) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond540) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond540) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond540) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond540) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond540) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond540) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond540) CFA_SP SP+-2
          CFI (cfiCond540) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker541 Using cfiCommon1
          CFI (cfiPicker541) NoFunction
          CFI (cfiPicker541) Picker
        LCALL     ?Subroutine105 & 0xFFFF
??CrossCallReturnLabel_381:
        RET
          CFI EndBlock cfiCond523
          CFI EndBlock cfiCond524
          CFI EndBlock cfiCond525
          CFI EndBlock cfiCond526
          CFI EndBlock cfiCond527
          CFI EndBlock cfiCond528
          CFI EndBlock cfiCond529
          CFI EndBlock cfiCond530
          CFI EndBlock cfiCond531
          CFI EndBlock cfiCond532
          CFI EndBlock cfiCond533
          CFI EndBlock cfiCond534
          CFI EndBlock cfiCond535
          CFI EndBlock cfiCond536
          CFI EndBlock cfiCond537
          CFI EndBlock cfiCond538
          CFI EndBlock cfiCond539
          CFI EndBlock cfiCond540
          CFI EndBlock cfiPicker541

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine105:
          CFI Block cfiCond542 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLock
          CFI Conditional ??CrossCallReturnLabel_381, ??CrossCallReturnLabel_374
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond543 Using cfiCommon0
          CFI (cfiCond543) Function zclClosures_ProcessInDoorLockUnlockWithTimeout
          CFI (cfiCond543) Conditional ??CrossCallReturnLabel_381, ??CrossCallReturnLabel_375
          CFI (cfiCond543) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond543) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond543) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond543) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond543) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond543) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond543) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond543) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond543) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond543) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond543) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond543) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond543) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond543) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond543) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond543) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond543) CFA_SP SP+-4
          CFI (cfiCond543) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond544 Using cfiCommon0
          CFI (cfiCond544) Function zclClosures_ProcessInDoorLockSetPINCode
          CFI (cfiCond544) Conditional ??CrossCallReturnLabel_381, ??CrossCallReturnLabel_376
          CFI (cfiCond544) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond544) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond544) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond544) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond544) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond544) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond544) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond544) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond544) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond544) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond544) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond544) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond544) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond544) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond544) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond544) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond544) CFA_SP SP+-4
          CFI (cfiCond544) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond545 Using cfiCommon0
          CFI (cfiCond545) Function zclClosures_ProcessInDoorLockSetRFIDCode
          CFI (cfiCond545) Conditional ??CrossCallReturnLabel_381, ??CrossCallReturnLabel_377
          CFI (cfiCond545) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond545) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond545) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond545) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond545) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond545) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond545) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond545) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond545) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond545) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond545) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond545) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond545) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond545) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond545) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond545) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond545) CFA_SP SP+-4
          CFI (cfiCond545) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond546 Using cfiCommon0
          CFI (cfiCond546) Function zclClosures_ProcessInDoorLockGetPINCodeRsp
          CFI (cfiCond546) Conditional ??CrossCallReturnLabel_381, ??CrossCallReturnLabel_378
          CFI (cfiCond546) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond546) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond546) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond546) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond546) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond546) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond546) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond546) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond546) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond546) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond546) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond546) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond546) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond546) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond546) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond546) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond546) CFA_SP SP+-4
          CFI (cfiCond546) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond547 Using cfiCommon0
          CFI (cfiCond547) Function zclClosures_ProcessInDoorLockGetRFIDCodeRsp
          CFI (cfiCond547) Conditional ??CrossCallReturnLabel_381, ??CrossCallReturnLabel_379
          CFI (cfiCond547) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond547) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond547) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond547) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond547) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond547) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond547) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond547) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond547) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond547) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond547) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond547) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond547) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond547) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond547) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond547) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond547) CFA_SP SP+-4
          CFI (cfiCond547) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond548 Using cfiCommon0
          CFI (cfiCond548) Function zclClosures_ProcessInDoorLockCmds
          CFI (cfiCond548) Conditional ??CrossCallReturnLabel_381, ??CrossCallReturnLabel_362
          CFI (cfiCond548) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond548) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond548) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond548) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond548) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond548) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond548) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond548) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond548) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond548) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond548) CFA_SP SP+-4
          CFI (cfiCond548) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond549 Using cfiCommon0
          CFI (cfiCond549) Function zclClosures_ProcessInDoorLockUnlockWithTimeout
          CFI (cfiCond549) Conditional ??CrossCallReturnLabel_381, ??CrossCallReturnLabel_363
          CFI (cfiCond549) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond549) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond549) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond549) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond549) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond549) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond549) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond549) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond549) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond549) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond549) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond549) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond549) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond549) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond549) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond549) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond549) CFA_SP SP+-4
          CFI (cfiCond549) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond550 Using cfiCommon0
          CFI (cfiCond550) Function zclClosures_ProcessInDoorLockSetWeekDaySchedule
          CFI (cfiCond550) Conditional ??CrossCallReturnLabel_381, ??CrossCallReturnLabel_364
          CFI (cfiCond550) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond550) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond550) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond550) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond550) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond550) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond550) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond550) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond550) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond550) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond550) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond550) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond550) CFA_SP SP+-4
          CFI (cfiCond550) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond551 Using cfiCommon0
          CFI (cfiCond551) Function zclClosures_ProcessInDoorLockSetYearDaySchedule
          CFI (cfiCond551) Conditional ??CrossCallReturnLabel_381, ??CrossCallReturnLabel_365
          CFI (cfiCond551) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond551) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond551) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond551) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond551) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond551) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond551) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond551) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond551) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond551) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond551) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond551) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond551) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond551) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond551) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond551) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond551) CFA_SP SP+-4
          CFI (cfiCond551) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond552 Using cfiCommon0
          CFI (cfiCond552) Function zclClosures_ProcessInDoorLockSetHolidaySchedule
          CFI (cfiCond552) Conditional ??CrossCallReturnLabel_381, ??CrossCallReturnLabel_366
          CFI (cfiCond552) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond552) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond552) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond552) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond552) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond552) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond552) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond552) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond552) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond552) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond552) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond552) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond552) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond552) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond552) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond552) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond552) CFA_SP SP+-4
          CFI (cfiCond552) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond553 Using cfiCommon0
          CFI (cfiCond553) Function zclClosures_ProcessInDoorLockGetLogRecordRsp
          CFI (cfiCond553) Conditional ??CrossCallReturnLabel_381, ??CrossCallReturnLabel_367
          CFI (cfiCond553) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond553) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond553) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond553) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond553) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond553) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond553) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond553) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond553) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond553) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond553) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond553) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond553) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond553) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond553) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond553) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond553) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond553) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond553) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond553) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond553) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond553) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond553) CFA_SP SP+-4
          CFI (cfiCond553) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond554 Using cfiCommon0
          CFI (cfiCond554) Function zclClosures_ProcessInDoorLockGetWeekDayScheduleRsp
          CFI (cfiCond554) Conditional ??CrossCallReturnLabel_381, ??CrossCallReturnLabel_368
          CFI (cfiCond554) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond554) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond554) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond554) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond554) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond554) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond554) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond554) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond554) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond554) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond554) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond554) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond554) CFA_SP SP+-4
          CFI (cfiCond554) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond555 Using cfiCommon0
          CFI (cfiCond555) Function zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
          CFI (cfiCond555) Conditional ??CrossCallReturnLabel_381, ??CrossCallReturnLabel_369
          CFI (cfiCond555) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond555) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond555) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond555) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond555) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond555) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond555) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond555) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond555) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond555) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond555) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond555) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond555) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond555) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond555) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond555) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond555) CFA_SP SP+-4
          CFI (cfiCond555) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond556 Using cfiCommon0
          CFI (cfiCond556) Function zclClosures_ProcessInDoorLockGetHolidayScheduleRsp
          CFI (cfiCond556) Conditional ??CrossCallReturnLabel_381, ??CrossCallReturnLabel_370
          CFI (cfiCond556) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond556) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond556) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond556) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond556) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond556) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond556) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond556) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond556) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond556) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond556) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond556) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond556) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond556) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond556) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond556) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond556) CFA_SP SP+-4
          CFI (cfiCond556) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond557 Using cfiCommon0
          CFI (cfiCond557) Function zclClosures_ProcessInDoorLockOperationEventNotification
          CFI (cfiCond557) Conditional ??CrossCallReturnLabel_381, ??CrossCallReturnLabel_371
          CFI (cfiCond557) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond557) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond557) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond557) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond557) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond557) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond557) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond557) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond557) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond557) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond557) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond557) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond557) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond557) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond557) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond557) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond557) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond557) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond557) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond557) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond557) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond557) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond557) CFA_SP SP+-4
          CFI (cfiCond557) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond558 Using cfiCommon0
          CFI (cfiCond558) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond558) Conditional ??CrossCallReturnLabel_381, ??CrossCallReturnLabel_372
          CFI (cfiCond558) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond558) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond558) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond558) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond558) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond558) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond558) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond558) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond558) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond558) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond558) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond558) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond558) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond558) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond558) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond558) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond558) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond558) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond558) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond558) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond558) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond558) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond558) CFA_SP SP+-4
          CFI (cfiCond558) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond559 Using cfiCommon0
          CFI (cfiCond559) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond559) Conditional ??CrossCallReturnLabel_381, ??CrossCallReturnLabel_373
          CFI (cfiCond559) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond559) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond559) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond559) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond559) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond559) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond559) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond559) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond559) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond559) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond559) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond559) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond559) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond559) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond559) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond559) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond559) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond559) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond559) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond559) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond559) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond559) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond559) CFA_SP SP+-4
          CFI (cfiCond559) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond560 Using cfiCommon0
          CFI (cfiCond560) Function zclClosures_ProcessInDoorLockOperationEventNotification
          CFI (cfiCond560) Conditional ??CrossCallReturnLabel_380, ??CrossCallReturnLabel_59
          CFI (cfiCond560) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond560) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond560) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond560) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond560) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond560) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond560) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond560) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond560) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond560) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond560) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond560) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond560) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond560) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond560) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond560) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond560) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond560) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond560) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond560) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond560) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond560) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond560) CFA_SP SP+-4
          CFI (cfiCond560) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond561 Using cfiCommon0
          CFI (cfiCond561) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond561) Conditional ??CrossCallReturnLabel_380, ??CrossCallReturnLabel_60
          CFI (cfiCond561) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond561) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond561) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond561) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond561) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond561) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond561) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond561) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond561) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond561) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond561) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond561) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond561) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond561) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond561) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond561) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond561) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond561) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond561) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond561) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond561) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond561) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond561) CFA_SP SP+-4
          CFI (cfiCond561) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker562 Using cfiCommon1
          CFI (cfiPicker562) NoFunction
          CFI (cfiPicker562) Picker
        LCALL     ?Subroutine119 & 0xFFFF
??CrossCallReturnLabel_383:
        RET
          CFI EndBlock cfiCond542
          CFI EndBlock cfiCond543
          CFI EndBlock cfiCond544
          CFI EndBlock cfiCond545
          CFI EndBlock cfiCond546
          CFI EndBlock cfiCond547
          CFI EndBlock cfiCond548
          CFI EndBlock cfiCond549
          CFI EndBlock cfiCond550
          CFI EndBlock cfiCond551
          CFI EndBlock cfiCond552
          CFI EndBlock cfiCond553
          CFI EndBlock cfiCond554
          CFI EndBlock cfiCond555
          CFI EndBlock cfiCond556
          CFI EndBlock cfiCond557
          CFI EndBlock cfiCond558
          CFI EndBlock cfiCond559
          CFI EndBlock cfiCond560
          CFI EndBlock cfiCond561
          CFI EndBlock cfiPicker562

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine119:
          CFI Block cfiCond563 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockSetPINCode
          CFI Conditional ??CrossCallReturnLabel_382, ??CrossCallReturnLabel_220, ??CrossCallReturnLabel_61
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-6
          CFI CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond564 Using cfiCommon0
          CFI (cfiCond564) Function zclClosures_ProcessInDoorLockSetRFIDCode
          CFI (cfiCond564) Conditional ??CrossCallReturnLabel_382, ??CrossCallReturnLabel_220, ??CrossCallReturnLabel_62
          CFI (cfiCond564) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond564) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond564) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond564) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond564) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond564) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond564) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond564) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond564) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond564) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond564) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond564) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond564) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond564) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond564) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond564) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond564) CFA_SP SP+-6
          CFI (cfiCond564) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond565 Using cfiCommon0
          CFI (cfiCond565) Function zclClosures_ProcessInDoorLockGetPINCodeRsp
          CFI (cfiCond565) Conditional ??CrossCallReturnLabel_382, ??CrossCallReturnLabel_220, ??CrossCallReturnLabel_63
          CFI (cfiCond565) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond565) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond565) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond565) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond565) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond565) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond565) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond565) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond565) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond565) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond565) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond565) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond565) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond565) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond565) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond565) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond565) CFA_SP SP+-6
          CFI (cfiCond565) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond566 Using cfiCommon0
          CFI (cfiCond566) Function zclClosures_ProcessInDoorLockGetRFIDCodeRsp
          CFI (cfiCond566) Conditional ??CrossCallReturnLabel_382, ??CrossCallReturnLabel_220, ??CrossCallReturnLabel_64
          CFI (cfiCond566) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond566) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond566) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond566) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond566) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond566) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond566) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond566) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond566) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond566) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond566) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond566) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond566) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond566) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond566) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond566) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond566) CFA_SP SP+-6
          CFI (cfiCond566) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond567 Using cfiCommon0
          CFI (cfiCond567) Function zclClosures_ProcessInDoorLockSetPINCode
          CFI (cfiCond567) Conditional ??CrossCallReturnLabel_382, ??CrossCallReturnLabel_219, ??CrossCallReturnLabel_51
          CFI (cfiCond567) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond567) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond567) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond567) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond567) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond567) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond567) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond567) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond567) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond567) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond567) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond567) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond567) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond567) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond567) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond567) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond567) CFA_SP SP+-6
          CFI (cfiCond567) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond568 Using cfiCommon0
          CFI (cfiCond568) Function zclClosures_ProcessInDoorLockSetRFIDCode
          CFI (cfiCond568) Conditional ??CrossCallReturnLabel_382, ??CrossCallReturnLabel_219, ??CrossCallReturnLabel_52
          CFI (cfiCond568) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond568) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond568) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond568) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond568) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond568) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond568) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond568) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond568) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond568) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond568) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond568) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond568) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond568) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond568) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond568) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond568) CFA_SP SP+-6
          CFI (cfiCond568) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond569 Using cfiCommon0
          CFI (cfiCond569) Function zclClosures_ProcessInDoorLockGetPINCodeRsp
          CFI (cfiCond569) Conditional ??CrossCallReturnLabel_382, ??CrossCallReturnLabel_219, ??CrossCallReturnLabel_53
          CFI (cfiCond569) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond569) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond569) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond569) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond569) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond569) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond569) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond569) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond569) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond569) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond569) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond569) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond569) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond569) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond569) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond569) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond569) CFA_SP SP+-6
          CFI (cfiCond569) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond570 Using cfiCommon0
          CFI (cfiCond570) Function zclClosures_ProcessInDoorLockGetRFIDCodeRsp
          CFI (cfiCond570) Conditional ??CrossCallReturnLabel_382, ??CrossCallReturnLabel_219, ??CrossCallReturnLabel_54
          CFI (cfiCond570) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond570) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond570) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond570) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond570) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond570) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond570) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond570) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond570) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond570) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond570) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond570) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond570) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond570) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond570) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond570) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond570) CFA_SP SP+-6
          CFI (cfiCond570) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond571 Using cfiCommon0
          CFI (cfiCond571) Function zclClosures_ProcessInDoorLock
          CFI (cfiCond571) Conditional ??CrossCallReturnLabel_383, ??CrossCallReturnLabel_381, ??CrossCallReturnLabel_374
          CFI (cfiCond571) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond571) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond571) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond571) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond571) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond571) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond571) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond571) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond571) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond571) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond571) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond571) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond571) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond571) CFA_SP SP+-6
          CFI (cfiCond571) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond572 Using cfiCommon0
          CFI (cfiCond572) Function zclClosures_ProcessInDoorLockUnlockWithTimeout
          CFI (cfiCond572) Conditional ??CrossCallReturnLabel_383, ??CrossCallReturnLabel_381, ??CrossCallReturnLabel_375
          CFI (cfiCond572) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond572) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond572) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond572) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond572) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond572) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond572) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond572) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond572) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond572) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond572) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond572) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond572) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond572) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond572) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond572) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond572) CFA_SP SP+-6
          CFI (cfiCond572) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond573 Using cfiCommon0
          CFI (cfiCond573) Function zclClosures_ProcessInDoorLockSetPINCode
          CFI (cfiCond573) Conditional ??CrossCallReturnLabel_383, ??CrossCallReturnLabel_381, ??CrossCallReturnLabel_376
          CFI (cfiCond573) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond573) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond573) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond573) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond573) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond573) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond573) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond573) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond573) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond573) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond573) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond573) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond573) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond573) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond573) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond573) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond573) CFA_SP SP+-6
          CFI (cfiCond573) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond574 Using cfiCommon0
          CFI (cfiCond574) Function zclClosures_ProcessInDoorLockSetRFIDCode
          CFI (cfiCond574) Conditional ??CrossCallReturnLabel_383, ??CrossCallReturnLabel_381, ??CrossCallReturnLabel_377
          CFI (cfiCond574) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond574) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond574) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond574) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond574) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond574) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond574) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond574) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond574) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond574) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond574) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond574) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond574) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond574) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond574) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond574) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond574) CFA_SP SP+-6
          CFI (cfiCond574) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond575 Using cfiCommon0
          CFI (cfiCond575) Function zclClosures_ProcessInDoorLockGetPINCodeRsp
          CFI (cfiCond575) Conditional ??CrossCallReturnLabel_383, ??CrossCallReturnLabel_381, ??CrossCallReturnLabel_378
          CFI (cfiCond575) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond575) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond575) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond575) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond575) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond575) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond575) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond575) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond575) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond575) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond575) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond575) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond575) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond575) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond575) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond575) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond575) CFA_SP SP+-6
          CFI (cfiCond575) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond576 Using cfiCommon0
          CFI (cfiCond576) Function zclClosures_ProcessInDoorLockGetRFIDCodeRsp
          CFI (cfiCond576) Conditional ??CrossCallReturnLabel_383, ??CrossCallReturnLabel_381, ??CrossCallReturnLabel_379
          CFI (cfiCond576) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond576) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond576) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond576) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond576) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond576) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond576) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond576) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond576) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond576) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond576) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond576) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond576) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond576) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond576) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond576) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond576) CFA_SP SP+-6
          CFI (cfiCond576) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond577 Using cfiCommon0
          CFI (cfiCond577) Function zclClosures_ProcessInDoorLockCmds
          CFI (cfiCond577) Conditional ??CrossCallReturnLabel_383, ??CrossCallReturnLabel_381, ??CrossCallReturnLabel_362
          CFI (cfiCond577) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond577) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond577) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond577) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond577) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond577) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond577) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond577) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond577) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond577) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond577) CFA_SP SP+-6
          CFI (cfiCond577) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond578 Using cfiCommon0
          CFI (cfiCond578) Function zclClosures_ProcessInDoorLockUnlockWithTimeout
          CFI (cfiCond578) Conditional ??CrossCallReturnLabel_383, ??CrossCallReturnLabel_381, ??CrossCallReturnLabel_363
          CFI (cfiCond578) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond578) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond578) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond578) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond578) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond578) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond578) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond578) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond578) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond578) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond578) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond578) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond578) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond578) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond578) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond578) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond578) CFA_SP SP+-6
          CFI (cfiCond578) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond579 Using cfiCommon0
          CFI (cfiCond579) Function zclClosures_ProcessInDoorLockSetWeekDaySchedule
          CFI (cfiCond579) Conditional ??CrossCallReturnLabel_383, ??CrossCallReturnLabel_381, ??CrossCallReturnLabel_364
          CFI (cfiCond579) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond579) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond579) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond579) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond579) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond579) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond579) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond579) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond579) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond579) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond579) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond579) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond579) CFA_SP SP+-6
          CFI (cfiCond579) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond580 Using cfiCommon0
          CFI (cfiCond580) Function zclClosures_ProcessInDoorLockSetYearDaySchedule
          CFI (cfiCond580) Conditional ??CrossCallReturnLabel_383, ??CrossCallReturnLabel_381, ??CrossCallReturnLabel_365
          CFI (cfiCond580) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond580) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond580) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond580) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond580) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond580) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond580) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond580) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond580) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond580) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond580) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond580) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond580) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond580) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond580) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond580) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond580) CFA_SP SP+-6
          CFI (cfiCond580) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond581 Using cfiCommon0
          CFI (cfiCond581) Function zclClosures_ProcessInDoorLockSetHolidaySchedule
          CFI (cfiCond581) Conditional ??CrossCallReturnLabel_383, ??CrossCallReturnLabel_381, ??CrossCallReturnLabel_366
          CFI (cfiCond581) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond581) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond581) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond581) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond581) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond581) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond581) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond581) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond581) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond581) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond581) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond581) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond581) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond581) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond581) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond581) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond581) CFA_SP SP+-6
          CFI (cfiCond581) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond582 Using cfiCommon0
          CFI (cfiCond582) Function zclClosures_ProcessInDoorLockGetLogRecordRsp
          CFI (cfiCond582) Conditional ??CrossCallReturnLabel_383, ??CrossCallReturnLabel_381, ??CrossCallReturnLabel_367
          CFI (cfiCond582) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond582) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond582) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond582) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond582) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond582) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond582) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond582) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond582) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond582) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond582) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond582) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond582) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond582) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond582) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond582) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond582) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond582) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond582) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond582) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond582) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond582) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond582) CFA_SP SP+-6
          CFI (cfiCond582) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond583 Using cfiCommon0
          CFI (cfiCond583) Function zclClosures_ProcessInDoorLockGetWeekDayScheduleRsp
          CFI (cfiCond583) Conditional ??CrossCallReturnLabel_383, ??CrossCallReturnLabel_381, ??CrossCallReturnLabel_368
          CFI (cfiCond583) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond583) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond583) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond583) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond583) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond583) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond583) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond583) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond583) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond583) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond583) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond583) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond583) CFA_SP SP+-6
          CFI (cfiCond583) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond584 Using cfiCommon0
          CFI (cfiCond584) Function zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
          CFI (cfiCond584) Conditional ??CrossCallReturnLabel_383, ??CrossCallReturnLabel_381, ??CrossCallReturnLabel_369
          CFI (cfiCond584) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond584) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond584) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond584) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond584) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond584) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond584) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond584) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond584) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond584) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond584) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond584) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond584) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond584) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond584) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond584) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond584) CFA_SP SP+-6
          CFI (cfiCond584) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond585 Using cfiCommon0
          CFI (cfiCond585) Function zclClosures_ProcessInDoorLockGetHolidayScheduleRsp
          CFI (cfiCond585) Conditional ??CrossCallReturnLabel_383, ??CrossCallReturnLabel_381, ??CrossCallReturnLabel_370
          CFI (cfiCond585) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond585) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond585) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond585) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond585) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond585) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond585) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond585) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond585) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond585) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond585) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond585) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond585) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond585) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond585) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond585) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond585) CFA_SP SP+-6
          CFI (cfiCond585) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond586 Using cfiCommon0
          CFI (cfiCond586) Function zclClosures_ProcessInDoorLockOperationEventNotification
          CFI (cfiCond586) Conditional ??CrossCallReturnLabel_383, ??CrossCallReturnLabel_381, ??CrossCallReturnLabel_371
          CFI (cfiCond586) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond586) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond586) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond586) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond586) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond586) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond586) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond586) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond586) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond586) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond586) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond586) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond586) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond586) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond586) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond586) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond586) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond586) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond586) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond586) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond586) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond586) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond586) CFA_SP SP+-6
          CFI (cfiCond586) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond587 Using cfiCommon0
          CFI (cfiCond587) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond587) Conditional ??CrossCallReturnLabel_383, ??CrossCallReturnLabel_381, ??CrossCallReturnLabel_372
          CFI (cfiCond587) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond587) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond587) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond587) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond587) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond587) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond587) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond587) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond587) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond587) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond587) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond587) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond587) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond587) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond587) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond587) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond587) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond587) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond587) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond587) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond587) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond587) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond587) CFA_SP SP+-6
          CFI (cfiCond587) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond588 Using cfiCommon0
          CFI (cfiCond588) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond588) Conditional ??CrossCallReturnLabel_383, ??CrossCallReturnLabel_381, ??CrossCallReturnLabel_373
          CFI (cfiCond588) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond588) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond588) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond588) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond588) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond588) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond588) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond588) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond588) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond588) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond588) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond588) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond588) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond588) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond588) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond588) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond588) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond588) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond588) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond588) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond588) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond588) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond588) CFA_SP SP+-6
          CFI (cfiCond588) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond589 Using cfiCommon0
          CFI (cfiCond589) Function zclClosures_ProcessInDoorLockOperationEventNotification
          CFI (cfiCond589) Conditional ??CrossCallReturnLabel_383, ??CrossCallReturnLabel_380, ??CrossCallReturnLabel_59
          CFI (cfiCond589) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond589) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond589) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond589) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond589) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond589) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond589) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond589) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond589) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond589) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond589) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond589) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond589) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond589) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond589) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond589) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond589) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond589) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond589) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond589) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond589) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond589) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond589) CFA_SP SP+-6
          CFI (cfiCond589) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond590 Using cfiCommon0
          CFI (cfiCond590) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond590) Conditional ??CrossCallReturnLabel_383, ??CrossCallReturnLabel_380, ??CrossCallReturnLabel_60
          CFI (cfiCond590) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond590) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond590) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond590) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond590) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond590) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond590) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond590) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond590) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond590) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond590) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond590) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond590) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond590) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond590) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond590) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond590) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond590) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond590) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond590) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond590) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond590) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond590) CFA_SP SP+-6
          CFI (cfiCond590) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker591 Using cfiCommon1
          CFI (cfiPicker591) NoFunction
          CFI (cfiPicker591) Picker
        LCALL     ?Subroutine124 & 0xFFFF
??CrossCallReturnLabel_442:
        RET
          CFI EndBlock cfiCond563
          CFI EndBlock cfiCond564
          CFI EndBlock cfiCond565
          CFI EndBlock cfiCond566
          CFI EndBlock cfiCond567
          CFI EndBlock cfiCond568
          CFI EndBlock cfiCond569
          CFI EndBlock cfiCond570
          CFI EndBlock cfiCond571
          CFI EndBlock cfiCond572
          CFI EndBlock cfiCond573
          CFI EndBlock cfiCond574
          CFI EndBlock cfiCond575
          CFI EndBlock cfiCond576
          CFI EndBlock cfiCond577
          CFI EndBlock cfiCond578
          CFI EndBlock cfiCond579
          CFI EndBlock cfiCond580
          CFI EndBlock cfiCond581
          CFI EndBlock cfiCond582
          CFI EndBlock cfiCond583
          CFI EndBlock cfiCond584
          CFI EndBlock cfiCond585
          CFI EndBlock cfiCond586
          CFI EndBlock cfiCond587
          CFI EndBlock cfiCond588
          CFI EndBlock cfiCond589
          CFI EndBlock cfiCond590
          CFI EndBlock cfiPicker591

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine124:
          CFI Block cfiCond592 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockSetPINCode
          CFI Conditional ??CrossCallReturnLabel_442, ??CrossCallReturnLabel_382, ??CrossCallReturnLabel_220, ??CrossCallReturnLabel_61
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-8
          CFI CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond593 Using cfiCommon0
          CFI (cfiCond593) Function zclClosures_ProcessInDoorLockSetRFIDCode
          CFI (cfiCond593) Conditional ??CrossCallReturnLabel_442, ??CrossCallReturnLabel_382, ??CrossCallReturnLabel_220, ??CrossCallReturnLabel_62
          CFI (cfiCond593) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond593) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond593) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond593) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond593) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond593) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond593) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond593) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond593) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond593) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond593) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond593) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond593) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond593) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond593) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond593) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond593) CFA_SP SP+-8
          CFI (cfiCond593) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond594 Using cfiCommon0
          CFI (cfiCond594) Function zclClosures_ProcessInDoorLockGetPINCodeRsp
          CFI (cfiCond594) Conditional ??CrossCallReturnLabel_442, ??CrossCallReturnLabel_382, ??CrossCallReturnLabel_220, ??CrossCallReturnLabel_63
          CFI (cfiCond594) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond594) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond594) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond594) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond594) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond594) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond594) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond594) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond594) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond594) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond594) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond594) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond594) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond594) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond594) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond594) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond594) CFA_SP SP+-8
          CFI (cfiCond594) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond595 Using cfiCommon0
          CFI (cfiCond595) Function zclClosures_ProcessInDoorLockGetRFIDCodeRsp
          CFI (cfiCond595) Conditional ??CrossCallReturnLabel_442, ??CrossCallReturnLabel_382, ??CrossCallReturnLabel_220, ??CrossCallReturnLabel_64
          CFI (cfiCond595) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond595) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond595) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond595) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond595) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond595) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond595) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond595) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond595) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond595) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond595) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond595) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond595) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond595) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond595) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond595) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond595) CFA_SP SP+-8
          CFI (cfiCond595) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond596 Using cfiCommon0
          CFI (cfiCond596) Function zclClosures_ProcessInDoorLockSetPINCode
          CFI (cfiCond596) Conditional ??CrossCallReturnLabel_442, ??CrossCallReturnLabel_382, ??CrossCallReturnLabel_219, ??CrossCallReturnLabel_51
          CFI (cfiCond596) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond596) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond596) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond596) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond596) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond596) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond596) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond596) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond596) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond596) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond596) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond596) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond596) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond596) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond596) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond596) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond596) CFA_SP SP+-8
          CFI (cfiCond596) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond597 Using cfiCommon0
          CFI (cfiCond597) Function zclClosures_ProcessInDoorLockSetRFIDCode
          CFI (cfiCond597) Conditional ??CrossCallReturnLabel_442, ??CrossCallReturnLabel_382, ??CrossCallReturnLabel_219, ??CrossCallReturnLabel_52
          CFI (cfiCond597) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond597) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond597) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond597) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond597) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond597) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond597) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond597) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond597) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond597) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond597) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond597) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond597) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond597) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond597) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond597) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond597) CFA_SP SP+-8
          CFI (cfiCond597) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond598 Using cfiCommon0
          CFI (cfiCond598) Function zclClosures_ProcessInDoorLockGetPINCodeRsp
          CFI (cfiCond598) Conditional ??CrossCallReturnLabel_442, ??CrossCallReturnLabel_382, ??CrossCallReturnLabel_219, ??CrossCallReturnLabel_53
          CFI (cfiCond598) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond598) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond598) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond598) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond598) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond598) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond598) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond598) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond598) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond598) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond598) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond598) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond598) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond598) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond598) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond598) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond598) CFA_SP SP+-8
          CFI (cfiCond598) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond599 Using cfiCommon0
          CFI (cfiCond599) Function zclClosures_ProcessInDoorLockGetRFIDCodeRsp
          CFI (cfiCond599) Conditional ??CrossCallReturnLabel_442, ??CrossCallReturnLabel_382, ??CrossCallReturnLabel_219, ??CrossCallReturnLabel_54
          CFI (cfiCond599) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond599) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond599) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond599) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond599) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond599) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond599) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond599) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond599) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond599) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond599) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond599) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond599) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond599) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond599) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond599) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond599) CFA_SP SP+-8
          CFI (cfiCond599) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond600 Using cfiCommon0
          CFI (cfiCond600) Function zclClosures_ProcessInDoorLock
          CFI (cfiCond600) Conditional ??CrossCallReturnLabel_442, ??CrossCallReturnLabel_383, ??CrossCallReturnLabel_381, ??CrossCallReturnLabel_374
          CFI (cfiCond600) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond600) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond600) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond600) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond600) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond600) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond600) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond600) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond600) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond600) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond600) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond600) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond600) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond600) CFA_SP SP+-8
          CFI (cfiCond600) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond601 Using cfiCommon0
          CFI (cfiCond601) Function zclClosures_ProcessInDoorLockUnlockWithTimeout
          CFI (cfiCond601) Conditional ??CrossCallReturnLabel_442, ??CrossCallReturnLabel_383, ??CrossCallReturnLabel_381, ??CrossCallReturnLabel_375
          CFI (cfiCond601) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond601) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond601) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond601) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond601) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond601) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond601) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond601) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond601) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond601) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond601) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond601) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond601) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond601) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond601) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond601) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond601) CFA_SP SP+-8
          CFI (cfiCond601) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond602 Using cfiCommon0
          CFI (cfiCond602) Function zclClosures_ProcessInDoorLockSetPINCode
          CFI (cfiCond602) Conditional ??CrossCallReturnLabel_442, ??CrossCallReturnLabel_383, ??CrossCallReturnLabel_381, ??CrossCallReturnLabel_376
          CFI (cfiCond602) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond602) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond602) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond602) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond602) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond602) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond602) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond602) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond602) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond602) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond602) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond602) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond602) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond602) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond602) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond602) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond602) CFA_SP SP+-8
          CFI (cfiCond602) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond603 Using cfiCommon0
          CFI (cfiCond603) Function zclClosures_ProcessInDoorLockSetRFIDCode
          CFI (cfiCond603) Conditional ??CrossCallReturnLabel_442, ??CrossCallReturnLabel_383, ??CrossCallReturnLabel_381, ??CrossCallReturnLabel_377
          CFI (cfiCond603) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond603) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond603) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond603) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond603) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond603) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond603) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond603) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond603) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond603) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond603) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond603) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond603) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond603) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond603) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond603) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond603) CFA_SP SP+-8
          CFI (cfiCond603) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond604 Using cfiCommon0
          CFI (cfiCond604) Function zclClosures_ProcessInDoorLockGetPINCodeRsp
          CFI (cfiCond604) Conditional ??CrossCallReturnLabel_442, ??CrossCallReturnLabel_383, ??CrossCallReturnLabel_381, ??CrossCallReturnLabel_378
          CFI (cfiCond604) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond604) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond604) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond604) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond604) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond604) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond604) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond604) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond604) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond604) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond604) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond604) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond604) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond604) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond604) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond604) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond604) CFA_SP SP+-8
          CFI (cfiCond604) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond605 Using cfiCommon0
          CFI (cfiCond605) Function zclClosures_ProcessInDoorLockGetRFIDCodeRsp
          CFI (cfiCond605) Conditional ??CrossCallReturnLabel_442, ??CrossCallReturnLabel_383, ??CrossCallReturnLabel_381, ??CrossCallReturnLabel_379
          CFI (cfiCond605) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond605) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond605) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond605) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond605) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond605) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond605) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond605) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond605) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond605) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond605) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond605) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond605) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond605) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond605) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond605) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond605) CFA_SP SP+-8
          CFI (cfiCond605) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond606 Using cfiCommon0
          CFI (cfiCond606) Function zclClosures_ProcessInDoorLockCmds
          CFI (cfiCond606) Conditional ??CrossCallReturnLabel_442, ??CrossCallReturnLabel_383, ??CrossCallReturnLabel_381, ??CrossCallReturnLabel_362
          CFI (cfiCond606) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond606) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond606) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond606) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond606) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond606) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond606) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond606) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond606) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond606) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond606) CFA_SP SP+-8
          CFI (cfiCond606) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond607 Using cfiCommon0
          CFI (cfiCond607) Function zclClosures_ProcessInDoorLockUnlockWithTimeout
          CFI (cfiCond607) Conditional ??CrossCallReturnLabel_442, ??CrossCallReturnLabel_383, ??CrossCallReturnLabel_381, ??CrossCallReturnLabel_363
          CFI (cfiCond607) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond607) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond607) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond607) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond607) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond607) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond607) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond607) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond607) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond607) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond607) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond607) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond607) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond607) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond607) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond607) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond607) CFA_SP SP+-8
          CFI (cfiCond607) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond608 Using cfiCommon0
          CFI (cfiCond608) Function zclClosures_ProcessInDoorLockSetWeekDaySchedule
          CFI (cfiCond608) Conditional ??CrossCallReturnLabel_442, ??CrossCallReturnLabel_383, ??CrossCallReturnLabel_381, ??CrossCallReturnLabel_364
          CFI (cfiCond608) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond608) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond608) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond608) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond608) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond608) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond608) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond608) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond608) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond608) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond608) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond608) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond608) CFA_SP SP+-8
          CFI (cfiCond608) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond609 Using cfiCommon0
          CFI (cfiCond609) Function zclClosures_ProcessInDoorLockSetYearDaySchedule
          CFI (cfiCond609) Conditional ??CrossCallReturnLabel_442, ??CrossCallReturnLabel_383, ??CrossCallReturnLabel_381, ??CrossCallReturnLabel_365
          CFI (cfiCond609) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond609) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond609) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond609) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond609) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond609) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond609) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond609) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond609) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond609) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond609) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond609) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond609) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond609) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond609) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond609) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond609) CFA_SP SP+-8
          CFI (cfiCond609) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond610 Using cfiCommon0
          CFI (cfiCond610) Function zclClosures_ProcessInDoorLockSetHolidaySchedule
          CFI (cfiCond610) Conditional ??CrossCallReturnLabel_442, ??CrossCallReturnLabel_383, ??CrossCallReturnLabel_381, ??CrossCallReturnLabel_366
          CFI (cfiCond610) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond610) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond610) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond610) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond610) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond610) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond610) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond610) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond610) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond610) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond610) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond610) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond610) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond610) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond610) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond610) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond610) CFA_SP SP+-8
          CFI (cfiCond610) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond611 Using cfiCommon0
          CFI (cfiCond611) Function zclClosures_ProcessInDoorLockGetLogRecordRsp
          CFI (cfiCond611) Conditional ??CrossCallReturnLabel_442, ??CrossCallReturnLabel_383, ??CrossCallReturnLabel_381, ??CrossCallReturnLabel_367
          CFI (cfiCond611) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond611) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond611) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond611) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond611) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond611) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond611) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond611) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond611) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond611) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond611) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond611) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond611) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond611) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond611) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond611) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond611) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond611) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond611) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond611) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond611) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond611) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond611) CFA_SP SP+-8
          CFI (cfiCond611) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond612 Using cfiCommon0
          CFI (cfiCond612) Function zclClosures_ProcessInDoorLockGetWeekDayScheduleRsp
          CFI (cfiCond612) Conditional ??CrossCallReturnLabel_442, ??CrossCallReturnLabel_383, ??CrossCallReturnLabel_381, ??CrossCallReturnLabel_368
          CFI (cfiCond612) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond612) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond612) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond612) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond612) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond612) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond612) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond612) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond612) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond612) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond612) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond612) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond612) CFA_SP SP+-8
          CFI (cfiCond612) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond613 Using cfiCommon0
          CFI (cfiCond613) Function zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
          CFI (cfiCond613) Conditional ??CrossCallReturnLabel_442, ??CrossCallReturnLabel_383, ??CrossCallReturnLabel_381, ??CrossCallReturnLabel_369
          CFI (cfiCond613) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond613) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond613) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond613) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond613) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond613) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond613) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond613) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond613) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond613) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond613) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond613) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond613) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond613) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond613) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond613) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond613) CFA_SP SP+-8
          CFI (cfiCond613) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond614 Using cfiCommon0
          CFI (cfiCond614) Function zclClosures_ProcessInDoorLockGetHolidayScheduleRsp
          CFI (cfiCond614) Conditional ??CrossCallReturnLabel_442, ??CrossCallReturnLabel_383, ??CrossCallReturnLabel_381, ??CrossCallReturnLabel_370
          CFI (cfiCond614) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond614) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond614) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond614) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond614) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond614) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond614) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond614) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond614) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond614) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond614) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond614) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond614) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond614) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond614) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond614) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond614) CFA_SP SP+-8
          CFI (cfiCond614) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond615 Using cfiCommon0
          CFI (cfiCond615) Function zclClosures_ProcessInDoorLockOperationEventNotification
          CFI (cfiCond615) Conditional ??CrossCallReturnLabel_442, ??CrossCallReturnLabel_383, ??CrossCallReturnLabel_381, ??CrossCallReturnLabel_371
          CFI (cfiCond615) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond615) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond615) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond615) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond615) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond615) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond615) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond615) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond615) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond615) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond615) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond615) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond615) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond615) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond615) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond615) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond615) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond615) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond615) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond615) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond615) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond615) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond615) CFA_SP SP+-8
          CFI (cfiCond615) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond616 Using cfiCommon0
          CFI (cfiCond616) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond616) Conditional ??CrossCallReturnLabel_442, ??CrossCallReturnLabel_383, ??CrossCallReturnLabel_381, ??CrossCallReturnLabel_372
          CFI (cfiCond616) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond616) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond616) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond616) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond616) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond616) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond616) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond616) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond616) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond616) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond616) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond616) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond616) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond616) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond616) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond616) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond616) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond616) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond616) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond616) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond616) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond616) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond616) CFA_SP SP+-8
          CFI (cfiCond616) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond617 Using cfiCommon0
          CFI (cfiCond617) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond617) Conditional ??CrossCallReturnLabel_442, ??CrossCallReturnLabel_383, ??CrossCallReturnLabel_381, ??CrossCallReturnLabel_373
          CFI (cfiCond617) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond617) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond617) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond617) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond617) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond617) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond617) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond617) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond617) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond617) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond617) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond617) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond617) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond617) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond617) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond617) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond617) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond617) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond617) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond617) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond617) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond617) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond617) CFA_SP SP+-8
          CFI (cfiCond617) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond618 Using cfiCommon0
          CFI (cfiCond618) Function zclClosures_ProcessInDoorLockOperationEventNotification
          CFI (cfiCond618) Conditional ??CrossCallReturnLabel_442, ??CrossCallReturnLabel_383, ??CrossCallReturnLabel_380, ??CrossCallReturnLabel_59
          CFI (cfiCond618) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond618) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond618) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond618) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond618) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond618) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond618) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond618) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond618) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond618) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond618) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond618) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond618) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond618) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond618) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond618) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond618) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond618) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond618) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond618) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond618) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond618) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond618) CFA_SP SP+-8
          CFI (cfiCond618) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond619 Using cfiCommon0
          CFI (cfiCond619) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond619) Conditional ??CrossCallReturnLabel_442, ??CrossCallReturnLabel_383, ??CrossCallReturnLabel_380, ??CrossCallReturnLabel_60
          CFI (cfiCond619) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond619) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond619) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond619) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond619) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond619) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond619) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond619) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond619) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond619) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond619) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond619) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond619) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond619) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond619) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond619) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond619) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond619) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond619) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond619) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond619) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond619) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond619) CFA_SP SP+-8
          CFI (cfiCond619) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond620 Using cfiCommon0
          CFI (cfiCond620) Function zclClosures_ProcessInDoorLockCmds
          CFI (cfiCond620) Conditional ??CrossCallReturnLabel_443, ??CrossCallReturnLabel_440, ??CrossCallReturnLabel_226, ??CrossCallReturnLabel_96
          CFI (cfiCond620) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond620) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond620) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond620) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond620) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond620) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond620) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond620) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond620) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond620) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond620) CFA_SP SP+-8
          CFI (cfiCond620) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond621 Using cfiCommon0
          CFI (cfiCond621) Function zclClosures_ProcessInDoorLock
          CFI (cfiCond621) Conditional ??CrossCallReturnLabel_443, ??CrossCallReturnLabel_440, ??CrossCallReturnLabel_226, ??CrossCallReturnLabel_97
          CFI (cfiCond621) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond621) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond621) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond621) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond621) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond621) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond621) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond621) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond621) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond621) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond621) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond621) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond621) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond621) CFA_SP SP+-8
          CFI (cfiCond621) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond622 Using cfiCommon0
          CFI (cfiCond622) Function zclClosures_ProcessInDoorLockOperationEventNotification
          CFI (cfiCond622) Conditional ??CrossCallReturnLabel_443, ??CrossCallReturnLabel_440, ??CrossCallReturnLabel_225, ??CrossCallReturnLabel_59
          CFI (cfiCond622) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond622) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond622) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond622) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond622) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond622) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond622) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond622) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond622) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond622) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond622) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond622) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond622) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond622) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond622) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond622) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond622) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond622) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond622) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond622) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond622) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond622) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond622) CFA_SP SP+-8
          CFI (cfiCond622) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond623 Using cfiCommon0
          CFI (cfiCond623) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond623) Conditional ??CrossCallReturnLabel_443, ??CrossCallReturnLabel_440, ??CrossCallReturnLabel_225, ??CrossCallReturnLabel_60
          CFI (cfiCond623) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond623) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond623) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond623) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond623) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond623) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond623) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond623) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond623) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond623) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond623) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond623) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond623) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond623) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond623) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond623) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond623) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond623) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond623) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond623) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond623) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond623) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond623) CFA_SP SP+-8
          CFI (cfiCond623) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond624 Using cfiCommon0
          CFI (cfiCond624) Function zclClosures_SendDoorLockSetPINCodeRequest
          CFI (cfiCond624) Conditional ??CrossCallReturnLabel_443, ??CrossCallReturnLabel_441, ??CrossCallReturnLabel_437, ??CrossCallReturnLabel_8
          CFI (cfiCond624) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond624) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond624) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond624) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond624) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond624) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond624) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond624) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond624) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond624) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond624) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond624) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond624) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond624) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond624) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond624) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond624) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond624) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond624) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond624) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond624) CFA_SP SP+-8
          CFI (cfiCond624) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond625 Using cfiCommon0
          CFI (cfiCond625) Function zclClosures_SendDoorLockSetRFIDCodeRequest
          CFI (cfiCond625) Conditional ??CrossCallReturnLabel_443, ??CrossCallReturnLabel_441, ??CrossCallReturnLabel_437, ??CrossCallReturnLabel_9
          CFI (cfiCond625) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond625) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond625) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond625) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond625) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond625) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond625) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond625) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond625) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond625) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond625) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond625) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond625) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond625) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond625) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond625) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond625) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond625) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond625) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond625) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond625) CFA_SP SP+-8
          CFI (cfiCond625) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond626 Using cfiCommon0
          CFI (cfiCond626) Function zclClosures_SendDoorLockGetPINCodeResponse
          CFI (cfiCond626) Conditional ??CrossCallReturnLabel_443, ??CrossCallReturnLabel_441, ??CrossCallReturnLabel_437, ??CrossCallReturnLabel_10
          CFI (cfiCond626) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond626) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond626) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond626) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond626) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond626) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond626) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond626) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond626) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond626) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond626) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond626) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond626) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond626) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond626) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond626) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond626) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond626) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond626) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond626) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond626) CFA_SP SP+-8
          CFI (cfiCond626) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond627 Using cfiCommon0
          CFI (cfiCond627) Function zclClosures_SendDoorLockGetRFIDCodeResponse
          CFI (cfiCond627) Conditional ??CrossCallReturnLabel_443, ??CrossCallReturnLabel_441, ??CrossCallReturnLabel_437, ??CrossCallReturnLabel_11
          CFI (cfiCond627) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond627) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond627) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond627) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond627) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond627) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond627) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond627) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond627) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond627) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond627) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond627) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond627) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond627) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond627) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond627) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond627) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond627) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond627) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond627) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond627) CFA_SP SP+-8
          CFI (cfiCond627) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond628 Using cfiCommon0
          CFI (cfiCond628) Function zclClosures_SendDoorLockOperationEventNotification
          CFI (cfiCond628) Conditional ??CrossCallReturnLabel_443, ??CrossCallReturnLabel_441, ??CrossCallReturnLabel_438, ??CrossCallReturnLabel_112
          CFI (cfiCond628) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond628) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond628) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond628) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond628) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond628) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond628) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond628) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond628) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond628) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond628) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond628) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond628) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond628) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond628) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond628) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond628) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond628) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond628) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond628) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond628) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond628) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond628) CFA_SP SP+-8
          CFI (cfiCond628) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond629 Using cfiCommon0
          CFI (cfiCond629) Function zclClosures_SendDoorLockProgrammingEventNotification
          CFI (cfiCond629) Conditional ??CrossCallReturnLabel_443, ??CrossCallReturnLabel_441, ??CrossCallReturnLabel_438, ??CrossCallReturnLabel_113
          CFI (cfiCond629) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond629) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond629) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond629) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond629) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond629) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond629) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond629) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond629) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond629) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond629) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond629) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond629) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond629) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond629) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond629) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond629) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond629) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond629) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond629) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond629) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond629) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond629) CFA_SP SP+-8
          CFI (cfiCond629) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond630 Using cfiCommon0
          CFI (cfiCond630) Function zclClosures_SendDoorLockRequest
          CFI (cfiCond630) Conditional ??CrossCallReturnLabel_443, ??CrossCallReturnLabel_441, ??CrossCallReturnLabel_439, ??CrossCallReturnLabel_404
          CFI (cfiCond630) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond630) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond630) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond630) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond630) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond630) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond630) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond630) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond630) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond630) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond630) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond630) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond630) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond630) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond630) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond630) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond630) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond630) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond630) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond630) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond630) CFA_SP SP+-8
          CFI (cfiCond630) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond631 Using cfiCommon0
          CFI (cfiCond631) Function zclClosures_SendDoorLockUnlockTimeoutRequest
          CFI (cfiCond631) Conditional ??CrossCallReturnLabel_443, ??CrossCallReturnLabel_441, ??CrossCallReturnLabel_439, ??CrossCallReturnLabel_405
          CFI (cfiCond631) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond631) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond631) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond631) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond631) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond631) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond631) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond631) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond631) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond631) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond631) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond631) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond631) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond631) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond631) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond631) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond631) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond631) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond631) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond631) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond631) CFA_SP SP+-8
          CFI (cfiCond631) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond632 Using cfiCommon0
          CFI (cfiCond632) Function zclClosures_SendDoorLockGetLogRecordResponse
          CFI (cfiCond632) Conditional ??CrossCallReturnLabel_443, ??CrossCallReturnLabel_441, ??CrossCallReturnLabel_439, ??CrossCallReturnLabel_406
          CFI (cfiCond632) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond632) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond632) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond632) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond632) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond632) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond632) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond632) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond632) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond632) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond632) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond632) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond632) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond632) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond632) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond632) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond632) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond632) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond632) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond632) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond632) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond632) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond632) CFA_SP SP+-8
          CFI (cfiCond632) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond633 Using cfiCommon0
          CFI (cfiCond633) Function zclClosures_ProcessInDoorLock
          CFI (cfiCond633) Conditional ??CrossCallReturnLabel_443, ??CrossCallReturnLabel_441, ??CrossCallReturnLabel_439, ??CrossCallReturnLabel_403
          CFI (cfiCond633) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond633) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond633) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond633) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond633) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond633) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond633) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond633) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond633) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond633) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond633) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond633) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond633) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond633) CFA_SP SP+-8
          CFI (cfiCond633) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiPicker634 Using cfiCommon1
          CFI (cfiPicker634) NoFunction
          CFI (cfiPicker634) Picker
        MOVX      A,@DPTR
        MOV       R0,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       DPH,A
        MOV       DPL,R0
        RET
          CFI EndBlock cfiCond592
          CFI EndBlock cfiCond593
          CFI EndBlock cfiCond594
          CFI EndBlock cfiCond595
          CFI EndBlock cfiCond596
          CFI EndBlock cfiCond597
          CFI EndBlock cfiCond598
          CFI EndBlock cfiCond599
          CFI EndBlock cfiCond600
          CFI EndBlock cfiCond601
          CFI EndBlock cfiCond602
          CFI EndBlock cfiCond603
          CFI EndBlock cfiCond604
          CFI EndBlock cfiCond605
          CFI EndBlock cfiCond606
          CFI EndBlock cfiCond607
          CFI EndBlock cfiCond608
          CFI EndBlock cfiCond609
          CFI EndBlock cfiCond610
          CFI EndBlock cfiCond611
          CFI EndBlock cfiCond612
          CFI EndBlock cfiCond613
          CFI EndBlock cfiCond614
          CFI EndBlock cfiCond615
          CFI EndBlock cfiCond616
          CFI EndBlock cfiCond617
          CFI EndBlock cfiCond618
          CFI EndBlock cfiCond619
          CFI EndBlock cfiCond620
          CFI EndBlock cfiCond621
          CFI EndBlock cfiCond622
          CFI EndBlock cfiCond623
          CFI EndBlock cfiCond624
          CFI EndBlock cfiCond625
          CFI EndBlock cfiCond626
          CFI EndBlock cfiCond627
          CFI EndBlock cfiCond628
          CFI EndBlock cfiCond629
          CFI EndBlock cfiCond630
          CFI EndBlock cfiCond631
          CFI EndBlock cfiCond632
          CFI EndBlock cfiCond633
          CFI EndBlock cfiPicker634

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine29:
          CFI Block cfiCond635 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
          CFI Conditional ??CrossCallReturnLabel_67
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond636 Using cfiCommon0
          CFI (cfiCond636) Function zclClosures_ProcessInDoorLockGetHolidayScheduleRsp
          CFI (cfiCond636) Conditional ??CrossCallReturnLabel_68
          CFI (cfiCond636) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond636) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond636) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond636) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond636) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond636) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond636) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond636) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond636) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond636) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond636) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond636) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond636) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond636) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond636) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond636) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond636) CFA_SP SP+-2
          CFI (cfiCond636) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiPicker637 Using cfiCommon1
          CFI (cfiPicker637) NoFunction
          CFI (cfiPicker637) Picker
        LCALL     ?Subroutine88 & 0xFFFF
??CrossCallReturnLabel_212:
        RET
          CFI EndBlock cfiCond635
          CFI EndBlock cfiCond636
          CFI EndBlock cfiPicker637

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine88:
          CFI Block cfiCond638 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockSetYearDaySchedule
          CFI Conditional ??CrossCallReturnLabel_211, ??CrossCallReturnLabel_57
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond639 Using cfiCommon0
          CFI (cfiCond639) Function zclClosures_ProcessInDoorLockSetHolidaySchedule
          CFI (cfiCond639) Conditional ??CrossCallReturnLabel_211, ??CrossCallReturnLabel_58
          CFI (cfiCond639) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond639) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond639) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond639) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond639) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond639) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond639) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond639) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond639) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond639) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond639) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond639) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond639) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond639) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond639) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond639) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond639) CFA_SP SP+-4
          CFI (cfiCond639) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond640 Using cfiCommon0
          CFI (cfiCond640) Function zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
          CFI (cfiCond640) Conditional ??CrossCallReturnLabel_212, ??CrossCallReturnLabel_67
          CFI (cfiCond640) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond640) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond640) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond640) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond640) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond640) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond640) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond640) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond640) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond640) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond640) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond640) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond640) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond640) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond640) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond640) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond640) CFA_SP SP+-4
          CFI (cfiCond640) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond641 Using cfiCommon0
          CFI (cfiCond641) Function zclClosures_ProcessInDoorLockGetHolidayScheduleRsp
          CFI (cfiCond641) Conditional ??CrossCallReturnLabel_212, ??CrossCallReturnLabel_68
          CFI (cfiCond641) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond641) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond641) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond641) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond641) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond641) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond641) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond641) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond641) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond641) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond641) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond641) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond641) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond641) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond641) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond641) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond641) CFA_SP SP+-4
          CFI (cfiCond641) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiPicker642 Using cfiCommon1
          CFI (cfiPicker642) NoFunction
          CFI (cfiPicker642) Picker
        MOV       A,R2
        ADD       A,#0x8
        MOV       R0,A
        CLR       A
        ADDC      A,R3
        MOV       R1,A
        MOV       DPL,R0
        MOV       DPH,R1
        MOVX      A,@DPTR
        MOV       R4,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       DPH,A
        MOV       DPL,R4
        LCALL     ?Subroutine121 & 0xFFFF
??CrossCallReturnLabel_261:
        MOV       DPL,R0
        MOV       DPH,R1
        MOVX      A,@DPTR
        MOV       R4,A
        INC       DPTR
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond638
          CFI EndBlock cfiCond639
          CFI EndBlock cfiCond640
          CFI EndBlock cfiCond641
          CFI EndBlock cfiPicker642

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine14:
          CFI Block cfiCond643 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockSetYearDaySchedule
          CFI Conditional ??CrossCallReturnLabel_393
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond644 Using cfiCommon0
          CFI (cfiCond644) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond644) Conditional ??CrossCallReturnLabel_394
          CFI (cfiCond644) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond644) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond644) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond644) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond644) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond644) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond644) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond644) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond644) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond644) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond644) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond644) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond644) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond644) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond644) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond644) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond644) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond644) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond644) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond644) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond644) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond644) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond644) CFA_SP SP+-2
          CFI (cfiCond644) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker645 Using cfiCommon1
          CFI (cfiPicker645) NoFunction
          CFI (cfiPicker645) Picker
        INC       DPTR
          CFI EndBlock cfiCond643
          CFI EndBlock cfiCond644
          CFI EndBlock cfiPicker645
        REQUIRE ??Subroutine153_0
        ; // Fall through to label ??Subroutine153_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine153_0:
          CFI Block cfiCond646 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockGetHolidayScheduleRsp
          CFI Conditional ??CrossCallReturnLabel_392
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond647 Using cfiCommon0
          CFI (cfiCond647) Function zclClosures_ProcessInDoorLockSetYearDaySchedule
          CFI (cfiCond647) Conditional ??CrossCallReturnLabel_393
          CFI (cfiCond647) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond647) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond647) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond647) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond647) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond647) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond647) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond647) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond647) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond647) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond647) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond647) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond647) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond647) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond647) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond647) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond647) CFA_SP SP+-2
          CFI (cfiCond647) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond648 Using cfiCommon0
          CFI (cfiCond648) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond648) Conditional ??CrossCallReturnLabel_394
          CFI (cfiCond648) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond648) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond648) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond648) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond648) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond648) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond648) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond648) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond648) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond648) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond648) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond648) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond648) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond648) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond648) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond648) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond648) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond648) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond648) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond648) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond648) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond648) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond648) CFA_SP SP+-2
          CFI (cfiCond648) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker649 Using cfiCommon1
          CFI (cfiPicker649) NoFunction
          CFI (cfiPicker649) Picker
        INC       DPTR
          CFI EndBlock cfiCond646
          CFI EndBlock cfiCond647
          CFI EndBlock cfiCond648
          CFI EndBlock cfiPicker649
        REQUIRE ??Subroutine154_0
        ; // Fall through to label ??Subroutine154_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine154_0:
          CFI Block cfiCond650 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockSetHolidaySchedule
          CFI Conditional ??CrossCallReturnLabel_390
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond651 Using cfiCommon0
          CFI (cfiCond651) Function zclClosures_ProcessInDoorLockOperationEventNotification
          CFI (cfiCond651) Conditional ??CrossCallReturnLabel_391
          CFI (cfiCond651) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond651) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond651) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond651) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond651) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond651) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond651) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond651) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond651) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond651) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond651) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond651) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond651) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond651) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond651) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond651) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond651) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond651) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond651) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond651) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond651) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond651) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond651) CFA_SP SP+-2
          CFI (cfiCond651) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond652 Using cfiCommon0
          CFI (cfiCond652) Function zclClosures_ProcessInDoorLockGetHolidayScheduleRsp
          CFI (cfiCond652) Conditional ??CrossCallReturnLabel_392
          CFI (cfiCond652) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond652) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond652) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond652) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond652) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond652) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond652) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond652) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond652) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond652) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond652) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond652) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond652) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond652) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond652) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond652) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond652) CFA_SP SP+-2
          CFI (cfiCond652) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond653 Using cfiCommon0
          CFI (cfiCond653) Function zclClosures_ProcessInDoorLockSetYearDaySchedule
          CFI (cfiCond653) Conditional ??CrossCallReturnLabel_393
          CFI (cfiCond653) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond653) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond653) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond653) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond653) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond653) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond653) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond653) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond653) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond653) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond653) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond653) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond653) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond653) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond653) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond653) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond653) CFA_SP SP+-2
          CFI (cfiCond653) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond654 Using cfiCommon0
          CFI (cfiCond654) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond654) Conditional ??CrossCallReturnLabel_394
          CFI (cfiCond654) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond654) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond654) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond654) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond654) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond654) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond654) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond654) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond654) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond654) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond654) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond654) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond654) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond654) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond654) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond654) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond654) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond654) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond654) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond654) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond654) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond654) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond654) CFA_SP SP+-2
          CFI (cfiCond654) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker655 Using cfiCommon1
          CFI (cfiPicker655) NoFunction
          CFI (cfiPicker655) Picker
        INC       DPTR
          CFI EndBlock cfiCond650
          CFI EndBlock cfiCond651
          CFI EndBlock cfiCond652
          CFI EndBlock cfiCond653
          CFI EndBlock cfiCond654
          CFI EndBlock cfiPicker655
        REQUIRE ??Subroutine155_0
        ; // Fall through to label ??Subroutine155_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine155_0:
          CFI Block cfiCond656 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
          CFI Conditional ??CrossCallReturnLabel_389
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond657 Using cfiCommon0
          CFI (cfiCond657) Function zclClosures_ProcessInDoorLockSetHolidaySchedule
          CFI (cfiCond657) Conditional ??CrossCallReturnLabel_390
          CFI (cfiCond657) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond657) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond657) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond657) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond657) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond657) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond657) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond657) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond657) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond657) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond657) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond657) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond657) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond657) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond657) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond657) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond657) CFA_SP SP+-2
          CFI (cfiCond657) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond658 Using cfiCommon0
          CFI (cfiCond658) Function zclClosures_ProcessInDoorLockOperationEventNotification
          CFI (cfiCond658) Conditional ??CrossCallReturnLabel_391
          CFI (cfiCond658) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond658) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond658) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond658) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond658) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond658) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond658) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond658) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond658) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond658) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond658) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond658) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond658) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond658) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond658) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond658) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond658) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond658) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond658) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond658) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond658) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond658) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond658) CFA_SP SP+-2
          CFI (cfiCond658) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond659 Using cfiCommon0
          CFI (cfiCond659) Function zclClosures_ProcessInDoorLockGetHolidayScheduleRsp
          CFI (cfiCond659) Conditional ??CrossCallReturnLabel_392
          CFI (cfiCond659) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond659) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond659) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond659) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond659) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond659) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond659) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond659) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond659) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond659) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond659) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond659) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond659) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond659) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond659) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond659) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond659) CFA_SP SP+-2
          CFI (cfiCond659) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond660 Using cfiCommon0
          CFI (cfiCond660) Function zclClosures_ProcessInDoorLockSetYearDaySchedule
          CFI (cfiCond660) Conditional ??CrossCallReturnLabel_393
          CFI (cfiCond660) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond660) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond660) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond660) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond660) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond660) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond660) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond660) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond660) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond660) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond660) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond660) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond660) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond660) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond660) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond660) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond660) CFA_SP SP+-2
          CFI (cfiCond660) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond661 Using cfiCommon0
          CFI (cfiCond661) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond661) Conditional ??CrossCallReturnLabel_394
          CFI (cfiCond661) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond661) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond661) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond661) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond661) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond661) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond661) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond661) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond661) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond661) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond661) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond661) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond661) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond661) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond661) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond661) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond661) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond661) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond661) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond661) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond661) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond661) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond661) CFA_SP SP+-2
          CFI (cfiCond661) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker662 Using cfiCommon1
          CFI (cfiPicker662) NoFunction
          CFI (cfiPicker662) Picker
        INC       DPTR
          CFI EndBlock cfiCond656
          CFI EndBlock cfiCond657
          CFI EndBlock cfiCond658
          CFI EndBlock cfiCond659
          CFI EndBlock cfiCond660
          CFI EndBlock cfiCond661
          CFI EndBlock cfiPicker662
        REQUIRE ??Subroutine156_0
        ; // Fall through to label ??Subroutine156_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine156_0:
          CFI Block cfiCond663 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockSetYearDaySchedule
          CFI Conditional ??CrossCallReturnLabel_388
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond664 Using cfiCommon0
          CFI (cfiCond664) Function zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
          CFI (cfiCond664) Conditional ??CrossCallReturnLabel_389
          CFI (cfiCond664) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond664) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond664) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond664) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond664) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond664) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond664) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond664) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond664) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond664) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond664) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond664) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond664) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond664) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond664) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond664) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond664) CFA_SP SP+-2
          CFI (cfiCond664) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond665 Using cfiCommon0
          CFI (cfiCond665) Function zclClosures_ProcessInDoorLockSetHolidaySchedule
          CFI (cfiCond665) Conditional ??CrossCallReturnLabel_390
          CFI (cfiCond665) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond665) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond665) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond665) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond665) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond665) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond665) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond665) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond665) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond665) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond665) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond665) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond665) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond665) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond665) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond665) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond665) CFA_SP SP+-2
          CFI (cfiCond665) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond666 Using cfiCommon0
          CFI (cfiCond666) Function zclClosures_ProcessInDoorLockOperationEventNotification
          CFI (cfiCond666) Conditional ??CrossCallReturnLabel_391
          CFI (cfiCond666) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond666) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond666) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond666) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond666) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond666) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond666) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond666) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond666) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond666) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond666) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond666) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond666) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond666) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond666) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond666) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond666) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond666) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond666) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond666) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond666) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond666) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond666) CFA_SP SP+-2
          CFI (cfiCond666) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond667 Using cfiCommon0
          CFI (cfiCond667) Function zclClosures_ProcessInDoorLockGetHolidayScheduleRsp
          CFI (cfiCond667) Conditional ??CrossCallReturnLabel_392
          CFI (cfiCond667) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond667) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond667) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond667) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond667) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond667) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond667) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond667) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond667) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond667) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond667) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond667) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond667) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond667) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond667) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond667) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond667) CFA_SP SP+-2
          CFI (cfiCond667) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond668 Using cfiCommon0
          CFI (cfiCond668) Function zclClosures_ProcessInDoorLockSetYearDaySchedule
          CFI (cfiCond668) Conditional ??CrossCallReturnLabel_393
          CFI (cfiCond668) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond668) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond668) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond668) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond668) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond668) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond668) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond668) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond668) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond668) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond668) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond668) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond668) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond668) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond668) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond668) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond668) CFA_SP SP+-2
          CFI (cfiCond668) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond669 Using cfiCommon0
          CFI (cfiCond669) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond669) Conditional ??CrossCallReturnLabel_394
          CFI (cfiCond669) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond669) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond669) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond669) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond669) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond669) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond669) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond669) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond669) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond669) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond669) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond669) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond669) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond669) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond669) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond669) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond669) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond669) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond669) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond669) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond669) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond669) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond669) CFA_SP SP+-2
          CFI (cfiCond669) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker670 Using cfiCommon1
          CFI (cfiPicker670) NoFunction
          CFI (cfiPicker670) Picker
        INC       DPTR
          CFI EndBlock cfiCond663
          CFI EndBlock cfiCond664
          CFI EndBlock cfiCond665
          CFI EndBlock cfiCond666
          CFI EndBlock cfiCond667
          CFI EndBlock cfiCond668
          CFI EndBlock cfiCond669
          CFI EndBlock cfiPicker670
        REQUIRE ??Subroutine157_0
        ; // Fall through to label ??Subroutine157_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine157_0:
          CFI Block cfiCond671 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockGetLogRecordRsp
          CFI Conditional ??CrossCallReturnLabel_386
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond672 Using cfiCommon0
          CFI (cfiCond672) Function zclClosures_ProcessInDoorLockGetHolidayScheduleRsp
          CFI (cfiCond672) Conditional ??CrossCallReturnLabel_387
          CFI (cfiCond672) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond672) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond672) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond672) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond672) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond672) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond672) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond672) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond672) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond672) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond672) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond672) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond672) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond672) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond672) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond672) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond672) CFA_SP SP+-2
          CFI (cfiCond672) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond673 Using cfiCommon0
          CFI (cfiCond673) Function zclClosures_ProcessInDoorLockSetYearDaySchedule
          CFI (cfiCond673) Conditional ??CrossCallReturnLabel_388
          CFI (cfiCond673) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond673) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond673) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond673) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond673) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond673) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond673) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond673) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond673) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond673) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond673) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond673) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond673) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond673) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond673) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond673) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond673) CFA_SP SP+-2
          CFI (cfiCond673) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond674 Using cfiCommon0
          CFI (cfiCond674) Function zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
          CFI (cfiCond674) Conditional ??CrossCallReturnLabel_389
          CFI (cfiCond674) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond674) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond674) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond674) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond674) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond674) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond674) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond674) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond674) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond674) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond674) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond674) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond674) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond674) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond674) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond674) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond674) CFA_SP SP+-2
          CFI (cfiCond674) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond675 Using cfiCommon0
          CFI (cfiCond675) Function zclClosures_ProcessInDoorLockSetHolidaySchedule
          CFI (cfiCond675) Conditional ??CrossCallReturnLabel_390
          CFI (cfiCond675) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond675) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond675) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond675) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond675) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond675) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond675) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond675) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond675) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond675) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond675) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond675) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond675) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond675) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond675) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond675) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond675) CFA_SP SP+-2
          CFI (cfiCond675) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond676 Using cfiCommon0
          CFI (cfiCond676) Function zclClosures_ProcessInDoorLockOperationEventNotification
          CFI (cfiCond676) Conditional ??CrossCallReturnLabel_391
          CFI (cfiCond676) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond676) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond676) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond676) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond676) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond676) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond676) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond676) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond676) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond676) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond676) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond676) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond676) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond676) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond676) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond676) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond676) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond676) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond676) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond676) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond676) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond676) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond676) CFA_SP SP+-2
          CFI (cfiCond676) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond677 Using cfiCommon0
          CFI (cfiCond677) Function zclClosures_ProcessInDoorLockGetHolidayScheduleRsp
          CFI (cfiCond677) Conditional ??CrossCallReturnLabel_392
          CFI (cfiCond677) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond677) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond677) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond677) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond677) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond677) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond677) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond677) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond677) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond677) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond677) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond677) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond677) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond677) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond677) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond677) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond677) CFA_SP SP+-2
          CFI (cfiCond677) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond678 Using cfiCommon0
          CFI (cfiCond678) Function zclClosures_ProcessInDoorLockSetYearDaySchedule
          CFI (cfiCond678) Conditional ??CrossCallReturnLabel_393
          CFI (cfiCond678) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond678) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond678) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond678) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond678) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond678) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond678) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond678) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond678) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond678) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond678) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond678) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond678) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond678) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond678) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond678) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond678) CFA_SP SP+-2
          CFI (cfiCond678) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond679 Using cfiCommon0
          CFI (cfiCond679) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond679) Conditional ??CrossCallReturnLabel_394
          CFI (cfiCond679) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond679) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond679) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond679) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond679) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond679) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond679) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond679) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond679) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond679) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond679) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond679) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond679) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond679) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond679) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond679) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond679) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond679) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond679) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond679) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond679) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond679) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond679) CFA_SP SP+-2
          CFI (cfiCond679) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker680 Using cfiCommon1
          CFI (cfiPicker680) NoFunction
          CFI (cfiPicker680) Picker
        INC       DPTR
          CFI EndBlock cfiCond671
          CFI EndBlock cfiCond672
          CFI EndBlock cfiCond673
          CFI EndBlock cfiCond674
          CFI EndBlock cfiCond675
          CFI EndBlock cfiCond676
          CFI EndBlock cfiCond677
          CFI EndBlock cfiCond678
          CFI EndBlock cfiCond679
          CFI EndBlock cfiPicker680
        REQUIRE ??Subroutine158_0
        ; // Fall through to label ??Subroutine158_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine158_0:
          CFI Block cfiCond681 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockSetHolidaySchedule
          CFI Conditional ??CrossCallReturnLabel_385
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond682 Using cfiCommon0
          CFI (cfiCond682) Function zclClosures_ProcessInDoorLockGetLogRecordRsp
          CFI (cfiCond682) Conditional ??CrossCallReturnLabel_386
          CFI (cfiCond682) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond682) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond682) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond682) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond682) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond682) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond682) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond682) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond682) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond682) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond682) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond682) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond682) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond682) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond682) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond682) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond682) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond682) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond682) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond682) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond682) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond682) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond682) CFA_SP SP+-2
          CFI (cfiCond682) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond683 Using cfiCommon0
          CFI (cfiCond683) Function zclClosures_ProcessInDoorLockGetHolidayScheduleRsp
          CFI (cfiCond683) Conditional ??CrossCallReturnLabel_387
          CFI (cfiCond683) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond683) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond683) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond683) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond683) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond683) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond683) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond683) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond683) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond683) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond683) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond683) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond683) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond683) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond683) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond683) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond683) CFA_SP SP+-2
          CFI (cfiCond683) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond684 Using cfiCommon0
          CFI (cfiCond684) Function zclClosures_ProcessInDoorLockSetYearDaySchedule
          CFI (cfiCond684) Conditional ??CrossCallReturnLabel_388
          CFI (cfiCond684) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond684) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond684) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond684) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond684) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond684) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond684) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond684) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond684) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond684) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond684) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond684) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond684) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond684) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond684) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond684) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond684) CFA_SP SP+-2
          CFI (cfiCond684) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond685 Using cfiCommon0
          CFI (cfiCond685) Function zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
          CFI (cfiCond685) Conditional ??CrossCallReturnLabel_389
          CFI (cfiCond685) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond685) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond685) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond685) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond685) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond685) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond685) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond685) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond685) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond685) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond685) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond685) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond685) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond685) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond685) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond685) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond685) CFA_SP SP+-2
          CFI (cfiCond685) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond686 Using cfiCommon0
          CFI (cfiCond686) Function zclClosures_ProcessInDoorLockSetHolidaySchedule
          CFI (cfiCond686) Conditional ??CrossCallReturnLabel_390
          CFI (cfiCond686) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond686) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond686) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond686) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond686) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond686) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond686) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond686) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond686) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond686) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond686) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond686) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond686) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond686) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond686) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond686) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond686) CFA_SP SP+-2
          CFI (cfiCond686) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond687 Using cfiCommon0
          CFI (cfiCond687) Function zclClosures_ProcessInDoorLockOperationEventNotification
          CFI (cfiCond687) Conditional ??CrossCallReturnLabel_391
          CFI (cfiCond687) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond687) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond687) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond687) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond687) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond687) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond687) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond687) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond687) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond687) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond687) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond687) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond687) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond687) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond687) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond687) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond687) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond687) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond687) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond687) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond687) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond687) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond687) CFA_SP SP+-2
          CFI (cfiCond687) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond688 Using cfiCommon0
          CFI (cfiCond688) Function zclClosures_ProcessInDoorLockGetHolidayScheduleRsp
          CFI (cfiCond688) Conditional ??CrossCallReturnLabel_392
          CFI (cfiCond688) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond688) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond688) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond688) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond688) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond688) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond688) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond688) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond688) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond688) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond688) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond688) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond688) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond688) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond688) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond688) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond688) CFA_SP SP+-2
          CFI (cfiCond688) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond689 Using cfiCommon0
          CFI (cfiCond689) Function zclClosures_ProcessInDoorLockSetYearDaySchedule
          CFI (cfiCond689) Conditional ??CrossCallReturnLabel_393
          CFI (cfiCond689) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond689) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond689) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond689) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond689) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond689) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond689) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond689) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond689) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond689) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond689) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond689) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond689) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond689) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond689) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond689) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond689) CFA_SP SP+-2
          CFI (cfiCond689) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond690 Using cfiCommon0
          CFI (cfiCond690) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond690) Conditional ??CrossCallReturnLabel_394
          CFI (cfiCond690) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond690) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond690) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond690) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond690) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond690) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond690) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond690) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond690) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond690) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond690) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond690) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond690) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond690) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond690) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond690) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond690) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond690) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond690) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond690) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond690) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond690) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond690) CFA_SP SP+-2
          CFI (cfiCond690) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker691 Using cfiCommon1
          CFI (cfiPicker691) NoFunction
          CFI (cfiPicker691) Picker
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
          CFI EndBlock cfiCond681
          CFI EndBlock cfiCond682
          CFI EndBlock cfiCond683
          CFI EndBlock cfiCond684
          CFI EndBlock cfiCond685
          CFI EndBlock cfiCond686
          CFI EndBlock cfiCond687
          CFI EndBlock cfiCond688
          CFI EndBlock cfiCond689
          CFI EndBlock cfiCond690
          CFI EndBlock cfiPicker691
        REQUIRE ??Subroutine159_0
        ; // Fall through to label ??Subroutine159_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine159_0:
          CFI Block cfiCond692 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
          CFI Conditional ??CrossCallReturnLabel_384
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond693 Using cfiCommon0
          CFI (cfiCond693) Function zclClosures_ProcessInDoorLockSetHolidaySchedule
          CFI (cfiCond693) Conditional ??CrossCallReturnLabel_385
          CFI (cfiCond693) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond693) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond693) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond693) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond693) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond693) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond693) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond693) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond693) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond693) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond693) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond693) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond693) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond693) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond693) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond693) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond693) CFA_SP SP+-2
          CFI (cfiCond693) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond694 Using cfiCommon0
          CFI (cfiCond694) Function zclClosures_ProcessInDoorLockGetLogRecordRsp
          CFI (cfiCond694) Conditional ??CrossCallReturnLabel_386
          CFI (cfiCond694) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond694) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond694) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond694) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond694) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond694) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond694) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond694) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond694) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond694) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond694) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond694) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond694) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond694) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond694) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond694) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond694) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond694) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond694) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond694) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond694) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond694) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond694) CFA_SP SP+-2
          CFI (cfiCond694) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond695 Using cfiCommon0
          CFI (cfiCond695) Function zclClosures_ProcessInDoorLockGetHolidayScheduleRsp
          CFI (cfiCond695) Conditional ??CrossCallReturnLabel_387
          CFI (cfiCond695) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond695) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond695) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond695) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond695) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond695) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond695) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond695) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond695) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond695) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond695) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond695) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond695) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond695) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond695) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond695) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond695) CFA_SP SP+-2
          CFI (cfiCond695) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond696 Using cfiCommon0
          CFI (cfiCond696) Function zclClosures_ProcessInDoorLockSetYearDaySchedule
          CFI (cfiCond696) Conditional ??CrossCallReturnLabel_388
          CFI (cfiCond696) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond696) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond696) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond696) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond696) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond696) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond696) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond696) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond696) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond696) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond696) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond696) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond696) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond696) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond696) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond696) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond696) CFA_SP SP+-2
          CFI (cfiCond696) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond697 Using cfiCommon0
          CFI (cfiCond697) Function zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
          CFI (cfiCond697) Conditional ??CrossCallReturnLabel_389
          CFI (cfiCond697) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond697) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond697) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond697) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond697) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond697) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond697) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond697) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond697) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond697) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond697) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond697) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond697) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond697) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond697) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond697) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond697) CFA_SP SP+-2
          CFI (cfiCond697) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond698 Using cfiCommon0
          CFI (cfiCond698) Function zclClosures_ProcessInDoorLockSetHolidaySchedule
          CFI (cfiCond698) Conditional ??CrossCallReturnLabel_390
          CFI (cfiCond698) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond698) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond698) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond698) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond698) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond698) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond698) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond698) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond698) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond698) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond698) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond698) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond698) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond698) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond698) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond698) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond698) CFA_SP SP+-2
          CFI (cfiCond698) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond699 Using cfiCommon0
          CFI (cfiCond699) Function zclClosures_ProcessInDoorLockOperationEventNotification
          CFI (cfiCond699) Conditional ??CrossCallReturnLabel_391
          CFI (cfiCond699) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond699) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond699) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond699) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond699) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond699) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond699) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond699) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond699) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond699) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond699) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond699) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond699) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond699) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond699) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond699) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond699) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond699) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond699) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond699) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond699) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond699) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond699) CFA_SP SP+-2
          CFI (cfiCond699) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond700 Using cfiCommon0
          CFI (cfiCond700) Function zclClosures_ProcessInDoorLockGetHolidayScheduleRsp
          CFI (cfiCond700) Conditional ??CrossCallReturnLabel_392
          CFI (cfiCond700) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond700) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond700) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond700) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond700) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond700) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond700) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond700) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond700) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond700) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond700) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond700) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond700) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond700) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond700) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond700) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond700) CFA_SP SP+-2
          CFI (cfiCond700) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond701 Using cfiCommon0
          CFI (cfiCond701) Function zclClosures_ProcessInDoorLockSetYearDaySchedule
          CFI (cfiCond701) Conditional ??CrossCallReturnLabel_393
          CFI (cfiCond701) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond701) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond701) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond701) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond701) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond701) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond701) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond701) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond701) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond701) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond701) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond701) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond701) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond701) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond701) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond701) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond701) CFA_SP SP+-2
          CFI (cfiCond701) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond702 Using cfiCommon0
          CFI (cfiCond702) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond702) Conditional ??CrossCallReturnLabel_394
          CFI (cfiCond702) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond702) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond702) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond702) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond702) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond702) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond702) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond702) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond702) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond702) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond702) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond702) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond702) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond702) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond702) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond702) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond702) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond702) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond702) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond702) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond702) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond702) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond702) CFA_SP SP+-2
          CFI (cfiCond702) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker703 Using cfiCommon1
          CFI (cfiPicker703) NoFunction
          CFI (cfiPicker703) Picker
        MOVX      A,@DPTR
        MOV       ?V4,A
        CLR       A
        MOV       ?V6,A
        MOV       A,#0x18
        MOV       R0,#?V4
        RET
          CFI EndBlock cfiCond692
          CFI EndBlock cfiCond693
          CFI EndBlock cfiCond694
          CFI EndBlock cfiCond695
          CFI EndBlock cfiCond696
          CFI EndBlock cfiCond697
          CFI EndBlock cfiCond698
          CFI EndBlock cfiCond699
          CFI EndBlock cfiCond700
          CFI EndBlock cfiCond701
          CFI EndBlock cfiCond702
          CFI EndBlock cfiPicker703
// 1908 
// 1909 /*********************************************************************
// 1910  * @fn      zclClosures_ProcessInDoorLockClearHolidayScheduleRsp
// 1911  *
// 1912  * @brief   Process in the received Clear Holiday Schedule Response cmd
// 1913  *
// 1914  * @param   pInMsg - pointer to the incoming message
// 1915  * @param   pCBs - pointer to the application callbacks
// 1916  *
// 1917  * @return  ZStatus_t
// 1918  */
// 1919 static ZStatus_t zclClosures_ProcessInDoorLockClearHolidayScheduleRsp( zclIncoming_t *pInMsg,
// 1920                                                                        zclClosures_DoorLockAppCallbacks_t *pCBs )
// 1921 {
// 1922  if ( pCBs->pfnDoorLockClearHolidayScheduleRsp )
// 1923  {
// 1924    return ( pCBs->pfnDoorLockClearHolidayScheduleRsp( pInMsg, pInMsg->pData[0] ) );
// 1925  }
// 1926 
// 1927  return ( ZFailure );
// 1928 }
// 1929 
// 1930 /*********************************************************************
// 1931  * @fn      zclClosures_ProcessInDoorLockSetUserTypeRsp
// 1932  *
// 1933  * @brief   Process in the received Set User Type Response cmd
// 1934  *
// 1935  * @param   pInMsg - pointer to the incoming message
// 1936  * @param   pCBs - pointer to the application callbacks
// 1937  *
// 1938  * @return  ZStatus_t
// 1939  */
// 1940 static ZStatus_t zclClosures_ProcessInDoorLockSetUserTypeRsp( zclIncoming_t *pInMsg,
// 1941                                                               zclClosures_DoorLockAppCallbacks_t *pCBs )
// 1942 {
// 1943  if ( pCBs->pfnDoorLockSetUserTypeRsp )
// 1944  {
// 1945    return ( pCBs->pfnDoorLockSetUserTypeRsp( pInMsg, pInMsg->pData[0] ) );
// 1946  }
// 1947 
// 1948  return ( ZFailure );
// 1949 }
// 1950 
// 1951 /*********************************************************************
// 1952  * @fn      zclClosures_ProcessInDoorLockGetUserTypeRsp
// 1953  *
// 1954  * @brief   Process in the received Get User Type Response cmd
// 1955  *
// 1956  * @param   pInMsg - pointer to the incoming message
// 1957  * @param   pCBs - pointer to the application callbacks
// 1958  *
// 1959  * @return  ZStatus_t
// 1960  */
// 1961 static ZStatus_t zclClosures_ProcessInDoorLockGetUserTypeRsp( zclIncoming_t *pInMsg,
// 1962                                                               zclClosures_DoorLockAppCallbacks_t *pCBs )
// 1963 {
// 1964  if ( pCBs->pfnDoorLockGetUserTypeRsp )
// 1965  {
// 1966    zclDoorLockGetUserTypeRsp_t cmd;
// 1967 
// 1968    cmd.userID = BUILD_UINT16( pInMsg->pData[0], pInMsg->pData[1] );
// 1969    cmd.userType = pInMsg->pData[2];
// 1970 
// 1971    return ( pCBs->pfnDoorLockGetUserTypeRsp( pInMsg, &cmd ) );
// 1972  }
// 1973 
// 1974  return ( ZFailure );
// 1975 }
// 1976 
// 1977 /*********************************************************************
// 1978  * @fn      zclClosures_ProcessInDoorLockSetRFIDCodeRsp
// 1979  *
// 1980  * @brief   Process in the received Set RFID Code Response cmd
// 1981  *
// 1982  * @param   pInMsg - pointer to the incoming message
// 1983  * @param   pCBs - pointer to the application callbacks
// 1984  *
// 1985  * @return  ZStatus_t
// 1986  */
// 1987 static ZStatus_t zclClosures_ProcessInDoorLockSetRFIDCodeRsp( zclIncoming_t *pInMsg,
// 1988                                                               zclClosures_DoorLockAppCallbacks_t *pCBs )
// 1989 {
// 1990  if ( pCBs->pfnDoorLockSetRFIDCodeRsp )
// 1991  {
// 1992    return ( pCBs->pfnDoorLockSetRFIDCodeRsp( pInMsg, pInMsg->pData[0] ) );
// 1993  }
// 1994 
// 1995  return ( ZFailure );
// 1996 }
// 1997 
// 1998 /*********************************************************************
// 1999  * @fn      zclClosures_ProcessInDoorLockGetRFIDCodeRsp
// 2000  *
// 2001  * @brief   Process in the received Get RFID Code Response cmd
// 2002  *
// 2003  * @param   pInMsg - pointer to the incoming message
// 2004  * @param   pCBs - pointer to the application callbacks
// 2005  *
// 2006  * @return  ZStatus_t
// 2007  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2008 static ZStatus_t zclClosures_ProcessInDoorLockGetRFIDCodeRsp( zclIncoming_t *pInMsg,
zclClosures_ProcessInDoorLockGetRFIDCodeRsp:
          CFI Block cfiBlock704 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockGetRFIDCodeRsp
        CODE
// 2009                                                               zclClosures_DoorLockAppCallbacks_t *pCBs )
// 2010 {
        FUNCALL zclClosures_ProcessInDoorLockGetRFIDCodeRsp, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclClosures_ProcessInDoorLockGetRFIDCodeRsp, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V6
        REQUIRE ?V7
        MOV       A,#-0x10
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 6
        MOV       A,#-0x6
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 22)
        MOV       A,R2
        MOV       R6,A
        MOV       A,R3
        MOV       R7,A
// 2011   ZStatus_t status;
// 2012 
// 2013   if ( pCBs->pfnDoorLockGetRFIDCodeRsp )
        MOV       A,R4
        ADD       A,#0x5a
        LCALL     ?Subroutine17 & 0xFFFF
??CrossCallReturnLabel_331:
        JZ        ??zclClosures_ProcessInDoorLockGetRFIDCodeRsp_0
// 2014   {
// 2015     uint8 i;
// 2016     uint8 offset;
// 2017     uint8 calculatedArrayLen;
// 2018     zclDoorLockGetRFIDCodeRsp_t cmd;
// 2019 
// 2020     // first octet of PIN/RFID Code variable string identifies its length
// 2021     calculatedArrayLen = pInMsg->pData[4] + 1; // add first byte of string
        LCALL     ?Subroutine20 & 0xFFFF
// 2022 
// 2023     cmd.pRfidCode = zcl_mem_alloc( calculatedArrayLen );
??CrossCallReturnLabel_54:
        LCALL     `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV       ?V6,R2
        MOV       ?V7,R3
        MOV       R0,?V6
        MOV       R1,?V7
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine61 & 0xFFFF
// 2024     if ( !cmd.pRfidCode )
??CrossCallReturnLabel_145:
        JNZ       ??zclClosures_ProcessInDoorLockGetRFIDCodeRsp_1
// 2025     {
// 2026       return ( ZMemError );  // no memory
        MOV       R1,#0x10
        SJMP      ??zclClosures_ProcessInDoorLockGetRFIDCodeRsp_2
// 2027     }
// 2028 
// 2029     cmd.userID = BUILD_UINT16( pInMsg->pData[0], pInMsg->pData[1] );
??zclClosures_ProcessInDoorLockGetRFIDCodeRsp_1:
        LCALL     ?Subroutine11 & 0xFFFF
// 2030     cmd.userStatus = pInMsg->pData[2];
??CrossCallReturnLabel_7:
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        LCALL     ?Subroutine24 & 0xFFFF
// 2031     cmd.userType = pInMsg->pData[3];
??CrossCallReturnLabel_64:
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x3
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        LCALL     ?Subroutine73 & 0xFFFF
// 2032     offset = 4;
// 2033     for ( i = 0; i < calculatedArrayLen; i++ )
??CrossCallReturnLabel_171:
        SJMP      ??zclClosures_ProcessInDoorLockGetRFIDCodeRsp_3
// 2034     {
// 2035       cmd.pRfidCode[i] = pInMsg->pData[offset++];
??zclClosures_ProcessInDoorLockGetRFIDCodeRsp_4:
        MOV       A,R1
        MOV       R2,A
        MOV       DPL,?V2
        MOV       DPH,?V3
        LCALL     ??Subroutine168_0 & 0xFFFF
// 2036     }
??CrossCallReturnLabel_424:
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,R0
        MOV       R2,A
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine19 & 0xFFFF
??CrossCallReturnLabel_48:
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
        INC       R1
        INC       R0
??zclClosures_ProcessInDoorLockGetRFIDCodeRsp_3:
        MOV       A,R0
        CLR       C
        SUBB      A,?V4
        JC        ??zclClosures_ProcessInDoorLockGetRFIDCodeRsp_4
// 2037 
// 2038     status = ( pCBs->pfnDoorLockGetRFIDCodeRsp( pInMsg, &cmd ) );
        ; Setup parameters for indirect call
        LCALL     ?Subroutine48 & 0xFFFF
??CrossCallReturnLabel_379:
        LCALL     ?CALL_IND
        MOV       A,R1
        MOV       R6,A
// 2039     zcl_mem_free( cmd.pRfidCode );
        ; Setup parameters for call to function osal_mem_free
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine37 & 0xFFFF
??CrossCallReturnLabel_91:
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
// 2040     return status;
        MOV       A,R6
        MOV       R1,A
        SJMP      ??zclClosures_ProcessInDoorLockGetRFIDCodeRsp_2
// 2041   }
// 2042 
// 2043  return ( ZFailure );
??zclClosures_ProcessInDoorLockGetRFIDCodeRsp_0:
        MOV       R1,#0x1
??zclClosures_ProcessInDoorLockGetRFIDCodeRsp_2:
        LJMP      ?Subroutine2 & 0xFFFF
// 2044 }
          CFI EndBlock cfiBlock704
// 2045 
// 2046 /*********************************************************************
// 2047  * @fn      zclClosures_ProcessInDoorLockClearRFIDCodeRsp
// 2048  *
// 2049  * @brief   Process in the received Clear RFID Code Response cmd
// 2050  *
// 2051  * @param   pInMsg - pointer to the incoming message
// 2052  * @param   pCBs - pointer to the application callbacks
// 2053  *
// 2054  * @return  ZStatus_t
// 2055  */
// 2056 static ZStatus_t zclClosures_ProcessInDoorLockClearRFIDCodeRsp( zclIncoming_t *pInMsg,
// 2057                                                                 zclClosures_DoorLockAppCallbacks_t *pCBs )
// 2058 {
// 2059  if ( pCBs->pfnDoorLockClearRFIDCodeRsp )
// 2060  {
// 2061    return ( pCBs->pfnDoorLockClearRFIDCodeRsp( pInMsg, pInMsg->pData[0] ) );
// 2062  }
// 2063 
// 2064  return ( ZFailure );
// 2065 }
// 2066 
// 2067 /*********************************************************************
// 2068  * @fn      zclClosures_ProcessInDoorLockClearAllRFIDCodesRsp
// 2069  *
// 2070  * @brief   Process in the received Clear All RFID Codes Response cmd
// 2071  *
// 2072  * @param   pInMsg - pointer to the incoming message
// 2073  * @param   pCBs - pointer to the application callbacks
// 2074  *
// 2075  * @return  ZStatus_t
// 2076  */
// 2077 static ZStatus_t zclClosures_ProcessInDoorLockClearAllRFIDCodesRsp( zclIncoming_t *pInMsg,
// 2078                                                                     zclClosures_DoorLockAppCallbacks_t *pCBs )
// 2079 {
// 2080  if ( pCBs->pfnDoorLockClearAllRFIDCodesRsp )
// 2081  {
// 2082    return ( pCBs->pfnDoorLockClearAllRFIDCodesRsp( pInMsg, pInMsg->pData[0] ) );
// 2083  }
// 2084 
// 2085  return ( ZFailure );
// 2086 }
// 2087 
// 2088 /*********************************************************************
// 2089  * @fn      zclClosures_ProcessInDoorLockOperationEventNotification
// 2090  *
// 2091  * @brief   Process in the received Operation Event Notification cmd
// 2092  *
// 2093  * @param   pInMsg - pointer to the incoming message
// 2094  * @param   pCBs - pointer to the application callbacks
// 2095  *
// 2096  * @return  ZStatus_t
// 2097  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2098 static ZStatus_t zclClosures_ProcessInDoorLockOperationEventNotification( zclIncoming_t *pInMsg,
zclClosures_ProcessInDoorLockOperationEventNotification:
          CFI Block cfiBlock705 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockOperationEventNotification
        CODE
// 2099                                                                           zclClosures_DoorLockAppCallbacks_t *pCBs )
// 2100 {
        FUNCALL zclClosures_ProcessInDoorLockOperationEventNotification, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 33, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 33, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclClosures_ProcessInDoorLockOperationEventNotification, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 33, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 33, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V10
        REQUIRE ?V11
        REQUIRE ?V12
        REQUIRE ?V13
        MOV       A,#-0x16
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 22)
        ; Saved register size: 22
        ; Auto size: 11
        MOV       A,#-0xb
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 33)
        MOV       ?V12,R2
        MOV       ?V13,R3
// 2101   uint8 i;
// 2102   uint8 offset;
// 2103   uint8 calculatedArrayLen;
// 2104   zclDoorLockOperationEventNotification_t cmd;
// 2105   ZStatus_t status;
// 2106 
// 2107  if ( pCBs->pfnDoorLockOperationEventNotification )
        MOV       A,R4
        ADD       A,#0x60
        MOV       ?V10,A
        CLR       A
        ADDC      A,R5
        MOV       ?V11,A
        MOV       DPL,?V10
        LCALL     ??Subroutine143_0 & 0xFFFF
??CrossCallReturnLabel_325:
        JNZ       $+5
        LJMP      ??zclClosures_ProcessInDoorLockOperationEventNo_1 & 0xFFFF
// 2108  {
// 2109     calculatedArrayLen = pInMsg->pData[9] + 1;  // add first byte of string
        MOV       A,R2
        ADD       A,#0x8
        MOV       R6,A
        CLR       A
        ADDC      A,?V13
        MOV       R7,A
        LCALL     ??Subroutine142_0 & 0xFFFF
??CrossCallReturnLabel_314:
        ADD       A,#0x9
        MOV       DPL,A
        CLR       A
        ADDC      A,R0
        MOV       DPH,A
        MOVX      A,@DPTR
        INC       A
        MOV       ?V8,A
// 2110 
// 2111     cmd.pData = zcl_mem_alloc( calculatedArrayLen );
        ; Setup parameters for call to function osal_mem_alloc
        MOV       R2,A
        MOV       R3,#0x0
        LCALL     `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV       ?V0,R2
        MOV       ?V1,R3
        MOV       R0,?V0
        MOV       R1,?V1
        MOV       A,#0x9
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine61 & 0xFFFF
// 2112     if ( !cmd.pData )
??CrossCallReturnLabel_146:
        JNZ       ??zclClosures_ProcessInDoorLockOperationEventNo_2
// 2113     {
// 2114       return ( ZMemError );  // no memory
        MOV       R1,#0x10
        LJMP      ??zclClosures_ProcessInDoorLockOperationEventNo_3 & 0xFFFF
// 2115     }
// 2116 
// 2117     cmd.operationEventSource = pInMsg->pData[0];
??zclClosures_ProcessInDoorLockOperationEventNo_2:
        LCALL     ?Subroutine23 & 0xFFFF
// 2118     cmd.operationEventCode = pInMsg->pData[1];
??CrossCallReturnLabel_59:
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        LCALL     ?Subroutine27 & 0xFFFF
// 2119     cmd.userID = BUILD_UINT16( pInMsg->pData[2], pInMsg->pData[3] );
??CrossCallReturnLabel_65:
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine63 & 0xFFFF
// 2120     cmd.pin = pInMsg->pData[4];
??CrossCallReturnLabel_148:
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        LCALL     ?Subroutine36 & 0xFFFF
// 2121     cmd.zigBeeLocalTime = BUILD_UINT32( pInMsg->pData[5], pInMsg->pData[6], pInMsg->pData[7], pInMsg->pData[8] );
??CrossCallReturnLabel_395:
        LCALL     ?Subroutine28 & 0xFFFF
??CrossCallReturnLabel_399:
        LCALL     ?Subroutine15 & 0xFFFF
??CrossCallReturnLabel_298:
        LCALL     ?L_SHL
        MOV       R0,#?V0
        MOV       R1,#?V4
        LCALL     ?L_ADD
        MOV       DPL,R2
        MOV       DPH,R3
        LCALL     ??Subroutine137_0 & 0xFFFF
??CrossCallReturnLabel_306:
        LCALL     ?L_SHL
        MOV       R0,#?V0
        MOV       R1,#?V4
        LCALL     ?L_ADD
        MOV       DPL,R2
        MOV       DPH,R3
        LCALL     ??Subroutine154_0 & 0xFFFF
??CrossCallReturnLabel_391:
        LCALL     ?L_SHL
        MOV       R0,#?V0
        MOV       R1,#?V4
        LCALL     ?L_ADD
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine65 & 0xFFFF
// 2122     offset = 9;
??CrossCallReturnLabel_152:
        MOV       R1,#0x9
// 2123     for ( i = 0; i < calculatedArrayLen; i++ )
        MOV       R0,#0x0
        SJMP      ??zclClosures_ProcessInDoorLockOperationEventNo_4
// 2124     {
// 2125       cmd.pData[i] = pInMsg->pData[offset++];
??zclClosures_ProcessInDoorLockOperationEventNo_5:
        MOV       A,R1
        MOV       R2,A
        MOV       DPL,R6
        MOV       DPH,R7
        LCALL     ??Subroutine168_0 & 0xFFFF
// 2126     }
??CrossCallReturnLabel_425:
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,R0
        MOV       R2,A
        MOV       A,#0x9
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine19 & 0xFFFF
??CrossCallReturnLabel_49:
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
        INC       R1
        INC       R0
??zclClosures_ProcessInDoorLockOperationEventNo_4:
        MOV       A,R0
        CLR       C
        SUBB      A,?V8
        JC        ??zclClosures_ProcessInDoorLockOperationEventNo_5
// 2127 
// 2128     status = ( pCBs->pfnDoorLockOperationEventNotification( pInMsg, &cmd ) );
        ; Setup parameters for indirect call
        MOV       R4,?XSP + 0
        MOV       R5,?XSP + 1
        MOV       R2,?V12
        MOV       R3,?V13
        MOV       DPL,?V10
        MOV       DPH,?V11
        LCALL     ??Subroutine152_0 & 0xFFFF
??CrossCallReturnLabel_371:
        LCALL     ?CALL_IND
        MOV       A,R1
        MOV       R6,A
// 2129     zcl_mem_free( cmd.pData );
        ; Setup parameters for call to function osal_mem_free
        MOV       A,#0x9
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine37 & 0xFFFF
??CrossCallReturnLabel_92:
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
// 2130     return status;
        MOV       A,R6
        MOV       R1,A
        SJMP      ??zclClosures_ProcessInDoorLockOperationEventNo_3
// 2131   }
// 2132  return ( ZFailure );
??zclClosures_ProcessInDoorLockOperationEventNo_1:
        MOV       R1,#0x1
??zclClosures_ProcessInDoorLockOperationEventNo_3:
        MOV       A,#0xb
        LJMP      ??Subroutine169_0 & 0xFFFF
// 2133 }
          CFI EndBlock cfiBlock705

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine36:
          CFI Block cfiCond706 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockOperationEventNotification
          CFI Conditional ??CrossCallReturnLabel_395
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond707 Using cfiCommon0
          CFI (cfiCond707) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond707) Conditional ??CrossCallReturnLabel_396
          CFI (cfiCond707) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond707) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond707) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond707) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond707) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond707) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond707) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond707) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond707) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond707) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond707) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond707) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond707) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond707) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond707) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond707) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond707) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond707) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond707) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond707) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond707) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond707) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond707) CFA_SP SP+-2
          CFI (cfiCond707) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker708 Using cfiCommon1
          CFI (cfiPicker708) NoFunction
          CFI (cfiPicker708) Picker
        MOVX      @DPTR,A
          CFI EndBlock cfiCond706
          CFI EndBlock cfiCond707
          CFI EndBlock cfiPicker708
        REQUIRE ??Subroutine160_0
        ; // Fall through to label ??Subroutine160_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine160_0:
          CFI Block cfiCond709 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockGetLogRecordRsp
          CFI Conditional ??CrossCallReturnLabel_397
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond710 Using cfiCommon0
          CFI (cfiCond710) Function zclClosures_ProcessInDoorLockOperationEventNotification
          CFI (cfiCond710) Conditional ??CrossCallReturnLabel_395
          CFI (cfiCond710) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond710) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond710) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond710) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond710) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond710) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond710) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond710) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond710) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond710) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond710) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond710) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond710) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond710) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond710) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond710) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond710) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond710) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond710) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond710) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond710) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond710) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond710) CFA_SP SP+-2
          CFI (cfiCond710) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond711 Using cfiCommon0
          CFI (cfiCond711) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond711) Conditional ??CrossCallReturnLabel_396
          CFI (cfiCond711) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond711) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond711) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond711) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond711) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond711) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond711) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond711) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond711) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond711) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond711) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond711) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond711) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond711) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond711) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond711) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond711) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond711) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond711) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond711) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond711) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond711) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond711) CFA_SP SP+-2
          CFI (cfiCond711) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker712 Using cfiCommon1
          CFI (cfiPicker712) NoFunction
          CFI (cfiPicker712) Picker
        MOV       DPL,R6
        MOV       DPH,R7
        MOVX      A,@DPTR
        MOV       R2,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R3,A
        MOV       DPL,R2
        MOV       DPH,R3
        RET
          CFI EndBlock cfiCond709
          CFI EndBlock cfiCond710
          CFI EndBlock cfiCond711
          CFI EndBlock cfiPicker712

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine28:
          CFI Block cfiCond713 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockOperationEventNotification
          CFI Conditional ??CrossCallReturnLabel_399
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond714 Using cfiCommon0
          CFI (cfiCond714) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond714) Conditional ??CrossCallReturnLabel_400
          CFI (cfiCond714) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond714) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond714) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond714) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond714) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond714) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond714) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond714) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond714) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond714) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond714) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond714) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond714) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond714) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond714) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond714) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond714) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond714) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond714) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond714) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond714) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond714) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond714) CFA_SP SP+-2
          CFI (cfiCond714) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker715 Using cfiCommon1
          CFI (cfiPicker715) NoFunction
          CFI (cfiPicker715) Picker
        INC       DPTR
        INC       DPTR
        INC       DPTR
          CFI EndBlock cfiCond713
          CFI EndBlock cfiCond714
          CFI EndBlock cfiPicker715
        REQUIRE ??Subroutine161_0
        ; // Fall through to label ??Subroutine161_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine161_0:
          CFI Block cfiCond716 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockGetLogRecordRsp
          CFI Conditional ??CrossCallReturnLabel_398
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond717 Using cfiCommon0
          CFI (cfiCond717) Function zclClosures_ProcessInDoorLockOperationEventNotification
          CFI (cfiCond717) Conditional ??CrossCallReturnLabel_399
          CFI (cfiCond717) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond717) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond717) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond717) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond717) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond717) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond717) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond717) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond717) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond717) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond717) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond717) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond717) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond717) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond717) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond717) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond717) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond717) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond717) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond717) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond717) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond717) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond717) CFA_SP SP+-2
          CFI (cfiCond717) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond718 Using cfiCommon0
          CFI (cfiCond718) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond718) Conditional ??CrossCallReturnLabel_400
          CFI (cfiCond718) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond718) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond718) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond718) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond718) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond718) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond718) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond718) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond718) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond718) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond718) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond718) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond718) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond718) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond718) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond718) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond718) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond718) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond718) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond718) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond718) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond718) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond718) CFA_SP SP+-2
          CFI (cfiCond718) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker719 Using cfiCommon1
          CFI (cfiPicker719) NoFunction
          CFI (cfiPicker719) Picker
        LCALL     ?Subroutine98 & 0xFFFF
??CrossCallReturnLabel_402:
        MOV       DPL,R2
        MOV       DPH,R3
        RET
          CFI EndBlock cfiCond716
          CFI EndBlock cfiCond717
          CFI EndBlock cfiCond718
          CFI EndBlock cfiPicker719

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine98:
          CFI Block cfiCond720 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockSetYearDaySchedule
          CFI Conditional ??CrossCallReturnLabel_401, ??CrossCallReturnLabel_360
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond721 Using cfiCommon0
          CFI (cfiCond721) Function zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
          CFI (cfiCond721) Conditional ??CrossCallReturnLabel_401, ??CrossCallReturnLabel_361
          CFI (cfiCond721) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond721) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond721) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond721) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond721) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond721) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond721) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond721) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond721) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond721) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond721) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond721) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond721) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond721) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond721) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond721) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond721) CFA_SP SP+-4
          CFI (cfiCond721) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond722 Using cfiCommon0
          CFI (cfiCond722) Function zclClosures_ProcessInDoorLockGetHolidayScheduleRsp
          CFI (cfiCond722) Conditional ??CrossCallReturnLabel_401, ??CrossCallReturnLabel_359
          CFI (cfiCond722) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond722) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond722) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond722) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond722) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond722) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond722) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond722) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond722) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond722) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond722) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond722) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond722) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond722) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond722) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond722) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond722) CFA_SP SP+-4
          CFI (cfiCond722) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond723 Using cfiCommon0
          CFI (cfiCond723) Function zclClosures_ProcessInDoorLockSetHolidaySchedule
          CFI (cfiCond723) Conditional ??CrossCallReturnLabel_401, ??CrossCallReturnLabel_358
          CFI (cfiCond723) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond723) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond723) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond723) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond723) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond723) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond723) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond723) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond723) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond723) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond723) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond723) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond723) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond723) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond723) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond723) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond723) CFA_SP SP+-4
          CFI (cfiCond723) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond724 Using cfiCommon0
          CFI (cfiCond724) Function zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
          CFI (cfiCond724) Conditional ??CrossCallReturnLabel_401, ??CrossCallReturnLabel_357
          CFI (cfiCond724) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond724) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond724) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond724) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond724) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond724) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond724) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond724) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond724) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond724) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond724) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond724) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond724) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond724) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond724) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond724) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond724) CFA_SP SP+-4
          CFI (cfiCond724) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond725 Using cfiCommon0
          CFI (cfiCond725) Function zclClosures_ProcessInDoorLockSetYearDaySchedule
          CFI (cfiCond725) Conditional ??CrossCallReturnLabel_401, ??CrossCallReturnLabel_356
          CFI (cfiCond725) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond725) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond725) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond725) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond725) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond725) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond725) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond725) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond725) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond725) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond725) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond725) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond725) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond725) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond725) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond725) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond725) CFA_SP SP+-4
          CFI (cfiCond725) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond726 Using cfiCommon0
          CFI (cfiCond726) Function zclClosures_ProcessInDoorLockGetHolidayScheduleRsp
          CFI (cfiCond726) Conditional ??CrossCallReturnLabel_401, ??CrossCallReturnLabel_355
          CFI (cfiCond726) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond726) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond726) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond726) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond726) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond726) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond726) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond726) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond726) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond726) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond726) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond726) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond726) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond726) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond726) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond726) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond726) CFA_SP SP+-4
          CFI (cfiCond726) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond727 Using cfiCommon0
          CFI (cfiCond727) Function zclClosures_ProcessInDoorLockOperationEventNotification
          CFI (cfiCond727) Conditional ??CrossCallReturnLabel_402, ??CrossCallReturnLabel_399
          CFI (cfiCond727) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond727) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond727) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond727) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond727) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond727) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond727) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond727) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond727) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond727) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond727) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond727) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond727) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond727) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond727) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond727) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond727) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond727) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond727) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond727) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond727) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond727) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond727) CFA_SP SP+-4
          CFI (cfiCond727) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond728 Using cfiCommon0
          CFI (cfiCond728) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond728) Conditional ??CrossCallReturnLabel_402, ??CrossCallReturnLabel_400
          CFI (cfiCond728) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond728) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond728) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond728) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond728) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond728) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond728) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond728) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond728) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond728) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond728) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond728) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond728) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond728) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond728) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond728) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond728) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond728) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond728) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond728) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond728) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond728) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond728) CFA_SP SP+-4
          CFI (cfiCond728) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond729 Using cfiCommon0
          CFI (cfiCond729) Function zclClosures_ProcessInDoorLockGetLogRecordRsp
          CFI (cfiCond729) Conditional ??CrossCallReturnLabel_402, ??CrossCallReturnLabel_398
          CFI (cfiCond729) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond729) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond729) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond729) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond729) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond729) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond729) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond729) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond729) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond729) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond729) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond729) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond729) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond729) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond729) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond729) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond729) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond729) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond729) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond729) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond729) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond729) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond729) CFA_SP SP+-4
          CFI (cfiCond729) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker730 Using cfiCommon1
          CFI (cfiPicker730) NoFunction
          CFI (cfiPicker730) Picker
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        MOV       ?V0,A
        CLR       A
        MOV       ?V1,A
        MOV       ?V2,A
        MOV       ?V3,A
        RET
          CFI EndBlock cfiCond720
          CFI EndBlock cfiCond721
          CFI EndBlock cfiCond722
          CFI EndBlock cfiCond723
          CFI EndBlock cfiCond724
          CFI EndBlock cfiCond725
          CFI EndBlock cfiCond726
          CFI EndBlock cfiCond727
          CFI EndBlock cfiCond728
          CFI EndBlock cfiCond729
          CFI EndBlock cfiPicker730
// 2134 
// 2135 /*********************************************************************
// 2136  * @fn      zclClosures_ProcessInDoorLockProgrammingEventNotification
// 2137  *
// 2138  * @brief   Process in the received Programming Event Notification cmd
// 2139  *
// 2140  * @param   pInMsg - pointer to the incoming message
// 2141  * @param   pCBs - pointer to the application callbacks
// 2142  *
// 2143  * @return  ZStatus_t
// 2144  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2145 static ZStatus_t zclClosures_ProcessInDoorLockProgrammingEventNotification( zclIncoming_t *pInMsg,
zclClosures_ProcessInDoorLockProgrammingEventNotification:
          CFI Block cfiBlock731 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockProgrammingEventNotification
        CODE
// 2146                                                                             zclClosures_DoorLockAppCallbacks_t *pCBs )
// 2147 {
        FUNCALL zclClosures_ProcessInDoorLockProgrammingEventNotification, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 35, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 35, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclClosures_ProcessInDoorLockProgrammingEventNotification, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 35, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 35, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        REQUIRE ?V10
        REQUIRE ?V12
        REQUIRE ?V13
        MOV       A,#-0x16
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 22)
        ; Saved register size: 22
        ; Auto size: 13
        MOV       A,#-0xd
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 35)
        MOV       ?V12,R2
        MOV       ?V13,R3
// 2148   uint8 i;
// 2149   uint8 offset;
// 2150   uint8 calculatedArrayLen;
// 2151   zclDoorLockProgrammingEventNotification_t cmd;
// 2152   ZStatus_t status;
// 2153 
// 2154   if ( pCBs->pfnDoorLockProgrammingEventNotification )
        MOV       A,R4
        ADD       A,#0x62
        MOV       ?V8,A
        CLR       A
        ADDC      A,R5
        MOV       ?V9,A
        MOV       DPL,?V8
        LCALL     ??Subroutine143_0 & 0xFFFF
??CrossCallReturnLabel_326:
        JNZ       $+5
        LJMP      ??zclClosures_ProcessInDoorLockProgrammingEvent_1 & 0xFFFF
// 2155   {
// 2156     calculatedArrayLen = pInMsg->pData[11] + 1; // add first byte of string
        LCALL     ?Subroutine39 & 0xFFFF
??CrossCallReturnLabel_95:
        MOV       ?V10,A
// 2157 
// 2158     cmd.pData = zcl_mem_alloc( calculatedArrayLen );
        ; Setup parameters for call to function osal_mem_alloc
        MOV       R2,A
        MOV       R3,#0x0
        LCALL     `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV       ?V0,R2
        MOV       ?V1,R3
        MOV       R0,?V0
        MOV       R1,?V1
        MOV       A,#0xb
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine61 & 0xFFFF
// 2159     if ( !cmd.pData )
??CrossCallReturnLabel_147:
        JNZ       ??zclClosures_ProcessInDoorLockProgrammingEvent_2
// 2160     {
// 2161       return ( ZMemError );  // no memory
        MOV       R1,#0x10
        LJMP      ??zclClosures_ProcessInDoorLockProgrammingEvent_3 & 0xFFFF
// 2162     }
// 2163 
// 2164     cmd.programEventSource = pInMsg->pData[0];
??zclClosures_ProcessInDoorLockProgrammingEvent_2:
        LCALL     ?Subroutine23 & 0xFFFF
// 2165     cmd.programEventCode = pInMsg->pData[1];
??CrossCallReturnLabel_60:
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        LCALL     ?Subroutine27 & 0xFFFF
// 2166     cmd.userID = BUILD_UINT16( pInMsg->pData[2], pInMsg->pData[3] );
??CrossCallReturnLabel_66:
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine63 & 0xFFFF
// 2167     cmd.pin = pInMsg->pData[4];
??CrossCallReturnLabel_149:
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        LCALL     ?Subroutine75 & 0xFFFF
// 2168     cmd.userType = pInMsg->pData[5];
??CrossCallReturnLabel_176:
        LCALL     ??Subroutine152_0 & 0xFFFF
??CrossCallReturnLabel_372:
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        LCALL     ?Subroutine55 & 0xFFFF
// 2169     cmd.userStatus = pInMsg->pData[6];
??CrossCallReturnLabel_313:
        ADD       A,#0x6
        MOV       DPL,A
        CLR       A
        ADDC      A,R0
        MOV       DPH,A
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x6
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        LCALL     ?Subroutine36 & 0xFFFF
// 2170     cmd.zigBeeLocalTime = BUILD_UINT32( pInMsg->pData[7], pInMsg->pData[8], pInMsg->pData[9], pInMsg->pData[10] );
??CrossCallReturnLabel_396:
        INC       DPTR
        INC       DPTR
        LCALL     ?Subroutine28 & 0xFFFF
??CrossCallReturnLabel_400:
        INC       DPTR
        INC       DPTR
        LCALL     ?Subroutine15 & 0xFFFF
??CrossCallReturnLabel_299:
        LCALL     ?L_SHL
        MOV       R0,#?V0
        MOV       R1,#?V4
        LCALL     ?L_ADD
        MOV       DPL,R2
        MOV       DPH,R3
        LCALL     ?Subroutine13 & 0xFFFF
??CrossCallReturnLabel_310:
        LCALL     ?L_SHL
        MOV       R0,#?V0
        MOV       R1,#?V4
        LCALL     ?L_ADD
        MOV       DPL,R2
        MOV       DPH,R3
        LCALL     ?Subroutine14 & 0xFFFF
??CrossCallReturnLabel_394:
        LCALL     ?L_SHL
        MOV       R0,#?V0
        MOV       R1,#?V4
        LCALL     ?L_ADD
        MOV       A,#0x7
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine65 & 0xFFFF
// 2171     offset = 11;
??CrossCallReturnLabel_153:
        MOV       R1,#0xb
// 2172     for ( i = 0; i < calculatedArrayLen; i++ )
        MOV       R0,#0x0
        SJMP      ??zclClosures_ProcessInDoorLockProgrammingEvent_4
// 2173     {
// 2174       cmd.pData[i] = pInMsg->pData[offset++];
??zclClosures_ProcessInDoorLockProgrammingEvent_5:
        MOV       A,R1
        MOV       R2,A
        MOV       DPL,R6
        MOV       DPH,R7
        LCALL     ??Subroutine168_0 & 0xFFFF
// 2175     }
??CrossCallReturnLabel_426:
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,R0
        MOV       R2,A
        MOV       A,#0xb
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine19 & 0xFFFF
??CrossCallReturnLabel_50:
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
        INC       R1
        INC       R0
??zclClosures_ProcessInDoorLockProgrammingEvent_4:
        MOV       A,R0
        CLR       C
        SUBB      A,?V10
        JC        ??zclClosures_ProcessInDoorLockProgrammingEvent_5
// 2176 
// 2177     status = ( pCBs->pfnDoorLockProgrammingEventNotification( pInMsg, &cmd ) );
        ; Setup parameters for indirect call
        MOV       R4,?XSP + 0
        MOV       R5,?XSP + 1
        MOV       R2,?V12
        MOV       R3,?V13
        MOV       DPL,?V8
        MOV       DPH,?V9
        LCALL     ??Subroutine152_0 & 0xFFFF
??CrossCallReturnLabel_373:
        LCALL     ?CALL_IND
        MOV       A,R1
        MOV       R6,A
// 2178     zcl_mem_free( cmd.pData );
        ; Setup parameters for call to function osal_mem_free
        MOV       A,#0xb
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine37 & 0xFFFF
??CrossCallReturnLabel_93:
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
// 2179     return status;
        MOV       A,R6
        MOV       R1,A
        SJMP      ??zclClosures_ProcessInDoorLockProgrammingEvent_3
// 2180   }
// 2181 
// 2182  return ( ZFailure );
??zclClosures_ProcessInDoorLockProgrammingEvent_1:
        MOV       R1,#0x1
??zclClosures_ProcessInDoorLockProgrammingEvent_3:
        LJMP      ?Subroutine3 & 0xFFFF
// 2183 }
          CFI EndBlock cfiBlock731

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine75:
          CFI Block cfiCond732 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockGetLogRecordRsp
          CFI Conditional ??CrossCallReturnLabel_175
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond733 Using cfiCommon0
          CFI (cfiCond733) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond733) Conditional ??CrossCallReturnLabel_176
          CFI (cfiCond733) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond733) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond733) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond733) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond733) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond733) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond733) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond733) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond733) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond733) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond733) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond733) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond733) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond733) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond733) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond733) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond733) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond733) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond733) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond733) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond733) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond733) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond733) CFA_SP SP+-2
          CFI (cfiCond733) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond734 Using cfiCommon0
          CFI (cfiCond734) Function zclClosures_SendDoorLockGetLogRecordResponse
          CFI (cfiCond734) Conditional ??CrossCallReturnLabel_177
          CFI (cfiCond734) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond734) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond734) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond734) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond734) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond734) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond734) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond734) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond734) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond734) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond734) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond734) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond734) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond734) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond734) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond734) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond734) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond734) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond734) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond734) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond734) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond734) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond734) CFA_SP SP+-2
          CFI (cfiCond734) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond735 Using cfiCommon0
          CFI (cfiCond735) Function zclClosures_SendDoorLockGetLogRecordResponse
          CFI (cfiCond735) Conditional ??CrossCallReturnLabel_178
          CFI (cfiCond735) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond735) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond735) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond735) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond735) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond735) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond735) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond735) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond735) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond735) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond735) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond735) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond735) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond735) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond735) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond735) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond735) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond735) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond735) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond735) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond735) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond735) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond735) CFA_SP SP+-2
          CFI (cfiCond735) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiPicker736 Using cfiCommon1
          CFI (cfiPicker736) NoFunction
          CFI (cfiPicker736) Picker
        LCALL     ?Subroutine109 & 0xFFFF
??CrossCallReturnLabel_240:
        RET
          CFI EndBlock cfiCond732
          CFI EndBlock cfiCond733
          CFI EndBlock cfiCond734
          CFI EndBlock cfiCond735
          CFI EndBlock cfiPicker736

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine109:
          CFI Block cfiCond737 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockSetWeekDaySchedule
          CFI Conditional ??CrossCallReturnLabel_239, ??CrossCallReturnLabel_150
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond738 Using cfiCommon0
          CFI (cfiCond738) Function zclClosures_ProcessInDoorLockGetWeekDayScheduleRsp
          CFI (cfiCond738) Conditional ??CrossCallReturnLabel_239, ??CrossCallReturnLabel_151
          CFI (cfiCond738) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond738) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond738) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond738) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond738) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond738) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond738) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond738) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond738) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond738) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond738) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond738) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond738) CFA_SP SP+-4
          CFI (cfiCond738) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond739 Using cfiCommon0
          CFI (cfiCond739) Function zclClosures_ProcessInDoorLockGetLogRecordRsp
          CFI (cfiCond739) Conditional ??CrossCallReturnLabel_240, ??CrossCallReturnLabel_175
          CFI (cfiCond739) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond739) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond739) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond739) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond739) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond739) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond739) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond739) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond739) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond739) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond739) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond739) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond739) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond739) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond739) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond739) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond739) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond739) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond739) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond739) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond739) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond739) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond739) CFA_SP SP+-4
          CFI (cfiCond739) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond740 Using cfiCommon0
          CFI (cfiCond740) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond740) Conditional ??CrossCallReturnLabel_240, ??CrossCallReturnLabel_176
          CFI (cfiCond740) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond740) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond740) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond740) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond740) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond740) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond740) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond740) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond740) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond740) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond740) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond740) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond740) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond740) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond740) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond740) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond740) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond740) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond740) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond740) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond740) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond740) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond740) CFA_SP SP+-4
          CFI (cfiCond740) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond741 Using cfiCommon0
          CFI (cfiCond741) Function zclClosures_SendDoorLockGetLogRecordResponse
          CFI (cfiCond741) Conditional ??CrossCallReturnLabel_240, ??CrossCallReturnLabel_177
          CFI (cfiCond741) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond741) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond741) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond741) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond741) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond741) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond741) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond741) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond741) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond741) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond741) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond741) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond741) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond741) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond741) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond741) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond741) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond741) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond741) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond741) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond741) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond741) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond741) CFA_SP SP+-4
          CFI (cfiCond741) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond742 Using cfiCommon0
          CFI (cfiCond742) Function zclClosures_SendDoorLockGetLogRecordResponse
          CFI (cfiCond742) Conditional ??CrossCallReturnLabel_240, ??CrossCallReturnLabel_178
          CFI (cfiCond742) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond742) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond742) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond742) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond742) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond742) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond742) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond742) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond742) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond742) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond742) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond742) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond742) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond742) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond742) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond742) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond742) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond742) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond742) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond742) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond742) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond742) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond742) CFA_SP SP+-4
          CFI (cfiCond742) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond743 Using cfiCommon0
          CFI (cfiCond743) Function zclClosures_ProcessInDoorLockOperationEventNotification
          CFI (cfiCond743) Conditional ??CrossCallReturnLabel_241, ??CrossCallReturnLabel_65
          CFI (cfiCond743) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond743) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond743) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond743) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond743) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond743) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond743) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond743) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond743) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond743) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond743) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond743) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond743) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond743) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond743) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond743) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond743) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond743) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond743) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond743) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond743) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond743) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond743) CFA_SP SP+-4
          CFI (cfiCond743) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond744 Using cfiCommon0
          CFI (cfiCond744) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond744) Conditional ??CrossCallReturnLabel_241, ??CrossCallReturnLabel_66
          CFI (cfiCond744) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond744) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond744) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond744) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond744) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond744) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond744) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond744) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond744) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond744) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond744) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond744) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond744) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond744) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond744) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond744) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond744) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond744) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond744) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond744) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond744) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond744) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond744) CFA_SP SP+-4
          CFI (cfiCond744) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond745 Using cfiCommon0
          CFI (cfiCond745) Function zclClosures_ProcessInDoorLockOperationEventNotification
          CFI (cfiCond745) Conditional ??CrossCallReturnLabel_242, ??CrossCallReturnLabel_59
          CFI (cfiCond745) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond745) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond745) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond745) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond745) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond745) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond745) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond745) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond745) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond745) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond745) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond745) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond745) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond745) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond745) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond745) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond745) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond745) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond745) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond745) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond745) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond745) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond745) CFA_SP SP+-4
          CFI (cfiCond745) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond746 Using cfiCommon0
          CFI (cfiCond746) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond746) Conditional ??CrossCallReturnLabel_242, ??CrossCallReturnLabel_60
          CFI (cfiCond746) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond746) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond746) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond746) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond746) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond746) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond746) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond746) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond746) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond746) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond746) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond746) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond746) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond746) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond746) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond746) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond746) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond746) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond746) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond746) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond746) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond746) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond746) CFA_SP SP+-4
          CFI (cfiCond746) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond747 Using cfiCommon0
          CFI (cfiCond747) Function zclClosures_SendDoorLockGetLogRecordResponse
          CFI (cfiCond747) Conditional ??CrossCallReturnLabel_243, ??CrossCallReturnLabel_172
          CFI (cfiCond747) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond747) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond747) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond747) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond747) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond747) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond747) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond747) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond747) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond747) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond747) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond747) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond747) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond747) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond747) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond747) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond747) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond747) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond747) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond747) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond747) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond747) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond747) CFA_SP SP+-4
          CFI (cfiCond747) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond748 Using cfiCommon0
          CFI (cfiCond748) Function zclClosures_SendDoorLockGetLogRecordResponse
          CFI (cfiCond748) Conditional ??CrossCallReturnLabel_243, ??CrossCallReturnLabel_173
          CFI (cfiCond748) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond748) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond748) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond748) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond748) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond748) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond748) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond748) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond748) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond748) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond748) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond748) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond748) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond748) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond748) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond748) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond748) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond748) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond748) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond748) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond748) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond748) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond748) CFA_SP SP+-4
          CFI (cfiCond748) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond749 Using cfiCommon0
          CFI (cfiCond749) Function zclClosures_SendDoorLockProgrammingEventNotification
          CFI (cfiCond749) Conditional ??CrossCallReturnLabel_243, ??CrossCallReturnLabel_174
          CFI (cfiCond749) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond749) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond749) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond749) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond749) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond749) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond749) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond749) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond749) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond749) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond749) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond749) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond749) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond749) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond749) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond749) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond749) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond749) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond749) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond749) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond749) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond749) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond749) CFA_SP SP+-4
          CFI (cfiCond749) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond750 Using cfiCommon0
          CFI (cfiCond750) Function zclClosures_SendDoorLockOperationEventNotification
          CFI (cfiCond750) Conditional ??CrossCallReturnLabel_244, ??CrossCallReturnLabel_12
          CFI (cfiCond750) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond750) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond750) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond750) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond750) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond750) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond750) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond750) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond750) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond750) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond750) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond750) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond750) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond750) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond750) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond750) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond750) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond750) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond750) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond750) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond750) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond750) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond750) CFA_SP SP+-4
          CFI (cfiCond750) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond751 Using cfiCommon0
          CFI (cfiCond751) Function zclClosures_SendDoorLockProgrammingEventNotification
          CFI (cfiCond751) Conditional ??CrossCallReturnLabel_244, ??CrossCallReturnLabel_13
          CFI (cfiCond751) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond751) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond751) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond751) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond751) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond751) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond751) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond751) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond751) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond751) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond751) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond751) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond751) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond751) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond751) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond751) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond751) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond751) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond751) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond751) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond751) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond751) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond751) CFA_SP SP+-4
          CFI (cfiCond751) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker752 Using cfiCommon1
          CFI (cfiPicker752) NoFunction
          CFI (cfiPicker752) Picker
        MOVX      @DPTR,A
        MOV       DPL,R6
        MOV       DPH,R7
        RET
          CFI EndBlock cfiCond737
          CFI EndBlock cfiCond738
          CFI EndBlock cfiCond739
          CFI EndBlock cfiCond740
          CFI EndBlock cfiCond741
          CFI EndBlock cfiCond742
          CFI EndBlock cfiCond743
          CFI EndBlock cfiCond744
          CFI EndBlock cfiCond745
          CFI EndBlock cfiCond746
          CFI EndBlock cfiCond747
          CFI EndBlock cfiCond748
          CFI EndBlock cfiCond749
          CFI EndBlock cfiCond750
          CFI EndBlock cfiCond751
          CFI EndBlock cfiPicker752

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine65:
          CFI Block cfiCond753 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockOperationEventNotification
          CFI Conditional ??CrossCallReturnLabel_152
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond754 Using cfiCommon0
          CFI (cfiCond754) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond754) Conditional ??CrossCallReturnLabel_153
          CFI (cfiCond754) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond754) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond754) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond754) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond754) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond754) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond754) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond754) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond754) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond754) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond754) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond754) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond754) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond754) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond754) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond754) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond754) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond754) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond754) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond754) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond754) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond754) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond754) CFA_SP SP+-2
          CFI (cfiCond754) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker755 Using cfiCommon1
          CFI (cfiPicker755) NoFunction
          CFI (cfiPicker755) Picker
        MOV       A,?V0
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,?V1
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,?V2
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,?V3
        MOVX      @DPTR,A
        RET
          CFI EndBlock cfiCond753
          CFI EndBlock cfiCond754
          CFI EndBlock cfiPicker755

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine63:
          CFI Block cfiCond756 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockOperationEventNotification
          CFI Conditional ??CrossCallReturnLabel_148
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond757 Using cfiCommon0
          CFI (cfiCond757) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond757) Conditional ??CrossCallReturnLabel_149
          CFI (cfiCond757) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond757) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond757) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond757) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond757) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond757) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond757) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond757) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond757) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond757) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond757) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond757) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond757) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond757) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond757) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond757) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond757) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond757) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond757) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond757) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond757) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond757) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond757) CFA_SP SP+-2
          CFI (cfiCond757) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker758 Using cfiCommon1
          CFI (cfiPicker758) NoFunction
          CFI (cfiPicker758) Picker
        MOV       A,R2
        LCALL     ?Subroutine110 & 0xFFFF
??CrossCallReturnLabel_340:
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond756
          CFI EndBlock cfiCond757
          CFI EndBlock cfiPicker758

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine39:
          CFI Block cfiCond759 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockGetLogRecordRsp
          CFI Conditional ??CrossCallReturnLabel_94
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond760 Using cfiCommon0
          CFI (cfiCond760) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond760) Conditional ??CrossCallReturnLabel_95
          CFI (cfiCond760) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond760) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond760) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond760) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond760) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond760) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond760) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond760) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond760) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond760) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond760) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond760) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond760) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond760) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond760) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond760) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond760) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond760) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond760) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond760) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond760) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond760) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond760) CFA_SP SP+-2
          CFI (cfiCond760) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker761 Using cfiCommon1
          CFI (cfiPicker761) NoFunction
          CFI (cfiPicker761) Picker
        MOV       A,R2
        ADD       A,#0x8
        MOV       R6,A
        CLR       A
        ADDC      A,?V13
        MOV       R7,A
        MOV       DPL,R6
        MOV       DPH,R7
        MOVX      A,@DPTR
        MOV       R0,A
        INC       DPTR
        MOVX      A,@DPTR
        XCH       A,R0
        ADD       A,#0xb
        MOV       DPL,A
        CLR       A
        ADDC      A,R0
        MOV       DPH,A
        MOVX      A,@DPTR
        INC       A
        RET
          CFI EndBlock cfiCond759
          CFI EndBlock cfiCond760
          CFI EndBlock cfiPicker761

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine27:
          CFI Block cfiCond762 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockOperationEventNotification
          CFI Conditional ??CrossCallReturnLabel_65
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond763 Using cfiCommon0
          CFI (cfiCond763) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond763) Conditional ??CrossCallReturnLabel_66
          CFI (cfiCond763) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond763) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond763) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond763) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond763) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond763) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond763) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond763) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond763) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond763) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond763) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond763) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond763) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond763) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond763) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond763) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond763) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond763) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond763) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond763) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond763) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond763) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond763) CFA_SP SP+-2
          CFI (cfiCond763) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker764 Using cfiCommon1
          CFI (cfiPicker764) NoFunction
          CFI (cfiPicker764) Picker
        LCALL     ?Subroutine109 & 0xFFFF
??CrossCallReturnLabel_241:
        LCALL     ?Subroutine92 & 0xFFFF
??CrossCallReturnLabel_269:
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R4,A
        MOV       DPL,R0
        MOV       DPH,R1
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R3,A
        MOV       A,R4
        MOV       R2,A
        MOV       A,#0x2
        RET
          CFI EndBlock cfiCond762
          CFI EndBlock cfiCond763
          CFI EndBlock cfiPicker764

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine23:
          CFI Block cfiCond765 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockOperationEventNotification
          CFI Conditional ??CrossCallReturnLabel_59
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond766 Using cfiCommon0
          CFI (cfiCond766) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond766) Conditional ??CrossCallReturnLabel_60
          CFI (cfiCond766) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond766) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond766) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond766) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond766) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond766) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond766) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond766) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond766) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond766) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond766) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond766) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond766) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond766) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond766) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond766) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond766) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond766) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond766) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond766) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond766) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond766) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond766) CFA_SP SP+-2
          CFI (cfiCond766) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker767 Using cfiCommon1
          CFI (cfiPicker767) NoFunction
          CFI (cfiPicker767) Picker
        MOV       DPL,R6
        MOV       DPH,R7
        LCALL     ?Subroutine101 & 0xFFFF
??CrossCallReturnLabel_225:
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        LCALL     ?Subroutine109 & 0xFFFF
??CrossCallReturnLabel_242:
        LCALL     ?Subroutine105 & 0xFFFF
??CrossCallReturnLabel_380:
        INC       DPTR
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond765
          CFI EndBlock cfiCond766
          CFI EndBlock cfiPicker767

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine101:
          CFI Block cfiCond768 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockCmds
          CFI Conditional ??CrossCallReturnLabel_226, ??CrossCallReturnLabel_96
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond769 Using cfiCommon0
          CFI (cfiCond769) Function zclClosures_ProcessInDoorLock
          CFI (cfiCond769) Conditional ??CrossCallReturnLabel_226, ??CrossCallReturnLabel_97
          CFI (cfiCond769) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond769) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond769) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond769) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond769) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond769) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond769) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond769) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond769) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond769) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond769) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond769) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond769) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond769) CFA_SP SP+-4
          CFI (cfiCond769) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond770 Using cfiCommon0
          CFI (cfiCond770) Function zclClosures_ProcessInDoorLockOperationEventNotification
          CFI (cfiCond770) Conditional ??CrossCallReturnLabel_225, ??CrossCallReturnLabel_59
          CFI (cfiCond770) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond770) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond770) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond770) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond770) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond770) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond770) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond770) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond770) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond770) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond770) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond770) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond770) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond770) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond770) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond770) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond770) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond770) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond770) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond770) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond770) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond770) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond770) CFA_SP SP+-4
          CFI (cfiCond770) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond771 Using cfiCommon0
          CFI (cfiCond771) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond771) Conditional ??CrossCallReturnLabel_225, ??CrossCallReturnLabel_60
          CFI (cfiCond771) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond771) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond771) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond771) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond771) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond771) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond771) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond771) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond771) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond771) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond771) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond771) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond771) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond771) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond771) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond771) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond771) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond771) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond771) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond771) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond771) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond771) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond771) CFA_SP SP+-4
          CFI (cfiCond771) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker772 Using cfiCommon1
          CFI (cfiPicker772) NoFunction
          CFI (cfiPicker772) Picker
        LCALL     ?Subroutine118 & 0xFFFF
??CrossCallReturnLabel_440:
        RET
          CFI EndBlock cfiCond768
          CFI EndBlock cfiCond769
          CFI EndBlock cfiCond770
          CFI EndBlock cfiCond771
          CFI EndBlock cfiPicker772

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine118:
          CFI Block cfiCond773 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockCmds
          CFI Conditional ??CrossCallReturnLabel_440, ??CrossCallReturnLabel_226, ??CrossCallReturnLabel_96
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-6
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond774 Using cfiCommon0
          CFI (cfiCond774) Function zclClosures_ProcessInDoorLock
          CFI (cfiCond774) Conditional ??CrossCallReturnLabel_440, ??CrossCallReturnLabel_226, ??CrossCallReturnLabel_97
          CFI (cfiCond774) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond774) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond774) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond774) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond774) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond774) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond774) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond774) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond774) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond774) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond774) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond774) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond774) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond774) CFA_SP SP+-6
          CFI (cfiCond774) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond775 Using cfiCommon0
          CFI (cfiCond775) Function zclClosures_ProcessInDoorLockOperationEventNotification
          CFI (cfiCond775) Conditional ??CrossCallReturnLabel_440, ??CrossCallReturnLabel_225, ??CrossCallReturnLabel_59
          CFI (cfiCond775) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond775) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond775) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond775) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond775) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond775) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond775) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond775) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond775) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond775) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond775) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond775) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond775) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond775) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond775) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond775) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond775) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond775) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond775) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond775) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond775) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond775) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond775) CFA_SP SP+-6
          CFI (cfiCond775) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond776 Using cfiCommon0
          CFI (cfiCond776) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond776) Conditional ??CrossCallReturnLabel_440, ??CrossCallReturnLabel_225, ??CrossCallReturnLabel_60
          CFI (cfiCond776) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond776) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond776) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond776) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond776) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond776) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond776) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond776) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond776) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond776) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond776) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond776) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond776) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond776) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond776) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond776) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond776) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond776) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond776) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond776) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond776) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond776) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond776) CFA_SP SP+-6
          CFI (cfiCond776) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond777 Using cfiCommon0
          CFI (cfiCond777) Function zclClosures_SendDoorLockSetPINCodeRequest
          CFI (cfiCond777) Conditional ??CrossCallReturnLabel_441, ??CrossCallReturnLabel_437, ??CrossCallReturnLabel_8
          CFI (cfiCond777) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond777) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond777) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond777) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond777) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond777) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond777) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond777) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond777) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond777) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond777) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond777) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond777) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond777) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond777) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond777) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond777) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond777) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond777) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond777) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond777) CFA_SP SP+-6
          CFI (cfiCond777) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond778 Using cfiCommon0
          CFI (cfiCond778) Function zclClosures_SendDoorLockSetRFIDCodeRequest
          CFI (cfiCond778) Conditional ??CrossCallReturnLabel_441, ??CrossCallReturnLabel_437, ??CrossCallReturnLabel_9
          CFI (cfiCond778) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond778) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond778) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond778) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond778) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond778) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond778) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond778) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond778) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond778) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond778) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond778) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond778) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond778) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond778) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond778) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond778) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond778) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond778) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond778) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond778) CFA_SP SP+-6
          CFI (cfiCond778) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond779 Using cfiCommon0
          CFI (cfiCond779) Function zclClosures_SendDoorLockGetPINCodeResponse
          CFI (cfiCond779) Conditional ??CrossCallReturnLabel_441, ??CrossCallReturnLabel_437, ??CrossCallReturnLabel_10
          CFI (cfiCond779) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond779) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond779) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond779) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond779) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond779) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond779) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond779) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond779) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond779) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond779) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond779) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond779) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond779) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond779) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond779) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond779) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond779) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond779) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond779) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond779) CFA_SP SP+-6
          CFI (cfiCond779) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond780 Using cfiCommon0
          CFI (cfiCond780) Function zclClosures_SendDoorLockGetRFIDCodeResponse
          CFI (cfiCond780) Conditional ??CrossCallReturnLabel_441, ??CrossCallReturnLabel_437, ??CrossCallReturnLabel_11
          CFI (cfiCond780) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond780) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond780) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond780) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond780) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond780) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond780) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond780) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond780) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond780) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond780) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond780) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond780) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond780) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond780) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond780) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond780) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond780) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond780) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond780) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond780) CFA_SP SP+-6
          CFI (cfiCond780) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond781 Using cfiCommon0
          CFI (cfiCond781) Function zclClosures_SendDoorLockOperationEventNotification
          CFI (cfiCond781) Conditional ??CrossCallReturnLabel_441, ??CrossCallReturnLabel_438, ??CrossCallReturnLabel_112
          CFI (cfiCond781) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond781) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond781) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond781) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond781) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond781) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond781) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond781) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond781) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond781) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond781) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond781) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond781) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond781) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond781) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond781) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond781) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond781) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond781) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond781) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond781) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond781) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond781) CFA_SP SP+-6
          CFI (cfiCond781) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond782 Using cfiCommon0
          CFI (cfiCond782) Function zclClosures_SendDoorLockProgrammingEventNotification
          CFI (cfiCond782) Conditional ??CrossCallReturnLabel_441, ??CrossCallReturnLabel_438, ??CrossCallReturnLabel_113
          CFI (cfiCond782) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond782) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond782) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond782) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond782) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond782) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond782) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond782) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond782) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond782) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond782) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond782) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond782) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond782) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond782) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond782) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond782) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond782) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond782) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond782) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond782) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond782) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond782) CFA_SP SP+-6
          CFI (cfiCond782) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond783 Using cfiCommon0
          CFI (cfiCond783) Function zclClosures_SendDoorLockRequest
          CFI (cfiCond783) Conditional ??CrossCallReturnLabel_441, ??CrossCallReturnLabel_439, ??CrossCallReturnLabel_404
          CFI (cfiCond783) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond783) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond783) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond783) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond783) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond783) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond783) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond783) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond783) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond783) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond783) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond783) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond783) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond783) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond783) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond783) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond783) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond783) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond783) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond783) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond783) CFA_SP SP+-6
          CFI (cfiCond783) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond784 Using cfiCommon0
          CFI (cfiCond784) Function zclClosures_SendDoorLockUnlockTimeoutRequest
          CFI (cfiCond784) Conditional ??CrossCallReturnLabel_441, ??CrossCallReturnLabel_439, ??CrossCallReturnLabel_405
          CFI (cfiCond784) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond784) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond784) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond784) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond784) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond784) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond784) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond784) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond784) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond784) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond784) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond784) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond784) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond784) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond784) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond784) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond784) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond784) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond784) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond784) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond784) CFA_SP SP+-6
          CFI (cfiCond784) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond785 Using cfiCommon0
          CFI (cfiCond785) Function zclClosures_SendDoorLockGetLogRecordResponse
          CFI (cfiCond785) Conditional ??CrossCallReturnLabel_441, ??CrossCallReturnLabel_439, ??CrossCallReturnLabel_406
          CFI (cfiCond785) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond785) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond785) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond785) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond785) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond785) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond785) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond785) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond785) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond785) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond785) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond785) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond785) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond785) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond785) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond785) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond785) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond785) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond785) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond785) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond785) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond785) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond785) CFA_SP SP+-6
          CFI (cfiCond785) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond786 Using cfiCommon0
          CFI (cfiCond786) Function zclClosures_ProcessInDoorLock
          CFI (cfiCond786) Conditional ??CrossCallReturnLabel_441, ??CrossCallReturnLabel_439, ??CrossCallReturnLabel_403
          CFI (cfiCond786) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond786) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond786) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond786) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond786) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond786) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond786) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond786) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond786) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond786) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond786) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond786) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond786) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond786) CFA_SP SP+-6
          CFI (cfiCond786) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiPicker787 Using cfiCommon1
          CFI (cfiPicker787) NoFunction
          CFI (cfiPicker787) Picker
        LCALL     ?Subroutine124 & 0xFFFF
??CrossCallReturnLabel_443:
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond773
          CFI EndBlock cfiCond774
          CFI EndBlock cfiCond775
          CFI EndBlock cfiCond776
          CFI EndBlock cfiCond777
          CFI EndBlock cfiCond778
          CFI EndBlock cfiCond779
          CFI EndBlock cfiCond780
          CFI EndBlock cfiCond781
          CFI EndBlock cfiCond782
          CFI EndBlock cfiCond783
          CFI EndBlock cfiCond784
          CFI EndBlock cfiCond785
          CFI EndBlock cfiCond786
          CFI EndBlock cfiPicker787
// 2184 
// 2185 /*********************************************************************
// 2186  * @fn      zclClosures_SendDoorLockRequest
// 2187  *
// 2188  * @brief   Call to send out a Door Lock Lock/Unlock/Toggle Command
// 2189  *
// 2190  * @param   srcEP - Sending application's endpoint
// 2191  * @param   dstAddr - where you want the message to go
// 2192  * @param   cmd - COMMAND_CLOSURES_LOCK_DOOR, COMMAND_CLOSURES_UNLOCK_DOOR, COMMAND_CLOSURES_TOGGLE_DOOR
// 2193  * @param   pPayload:
// 2194  *           aPinRfidCode - PIN/RFID code in ZCL Octet String Format
// 2195  * @param   disableDefaultRsp - decides default response is necessary or not
// 2196  * @param   seqNum - sequence number of the command packet
// 2197  *
// 2198  * @return  ZStatus_t
// 2199  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2200 ZStatus_t zclClosures_SendDoorLockRequest( uint8 srcEP, afAddrType_t *dstAddr, uint8 cmd,
zclClosures_SendDoorLockRequest:
          CFI Block cfiBlock788 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockRequest
        CODE
// 2201                                            zclDoorLock_t *pPayload,
// 2202                                            uint8 disableDefaultRsp, uint8 seqNum )
// 2203 {
        FUNCALL zclClosures_SendDoorLockRequest, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclClosures_SendDoorLockRequest, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 31, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 31, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclClosures_SendDoorLockRequest, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        REQUIRE ?V10
        REQUIRE ?V11
        MOV       A,#-0x14
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 20)
        ; Saved register size: 20
        ; Auto size: 0
        MOV       ?V3,R1
        MOV       ?V8,R2
        MOV       ?V9,R3
        MOV       ?V6,R4
        MOV       ?V2,R5
        MOV       A,#0x14
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        MOV       ?V4,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       ?V5,A
// 2204   uint8 i;
// 2205   uint8 *pBuf;  // variable length payload
// 2206   uint8 calculatedBufSize;
// 2207   ZStatus_t status;
// 2208 
// 2209   // first octet of PIN/RFID Code variable string identifies its length
// 2210   calculatedBufSize = pPayload->pPinRfidCode[0] + 1;  // add first byte of string
        MOV       DPL,?V4
        LCALL     ?Subroutine47 & 0xFFFF
??CrossCallReturnLabel_404:
        MOV       ?V7,A
// 2211 
// 2212   pBuf = zcl_mem_alloc( calculatedBufSize );
        MOV       R6,A
        ; Setup parameters for call to function osal_mem_alloc
        MOV       R2,A
        MOV       R3,#0x0
        LCALL     `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV       ?V0,R2
        MOV       ?V1,R3
// 2213   if ( !pBuf )
        MOV       A,R2
        ORL       A,?V1
        JNZ       ??zclClosures_SendDoorLockRequest_0
// 2214   {
// 2215     return ( ZMemError );  // no memory
        MOV       R1,#0x10
        LJMP      ??zclClosures_SendDoorLockRequest_1 & 0xFFFF
// 2216   }
// 2217 
// 2218   // over-the-air is always little endian. Break into a byte stream.
// 2219   for ( i = 0; i < calculatedBufSize; i++ )
??zclClosures_SendDoorLockRequest_0:
        MOV       R2,#0x0
        SJMP      ??zclClosures_SendDoorLockRequest_2
// 2220   {
// 2221     pBuf[i] = pPayload->pPinRfidCode[i];
??zclClosures_SendDoorLockRequest_3:
        MOV       A,R2
        MOV       R0,A
        MOV       DPL,?V4
        MOV       DPH,?V5
        LCALL     ?Subroutine49 & 0xFFFF
// 2222   }
??CrossCallReturnLabel_115:
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,?V0
        ADD       A,R0
        MOV       DPL,A
        CLR       A
        ADDC      A,?V1
        MOV       DPH,A
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
        INC       R2
??zclClosures_SendDoorLockRequest_2:
        MOV       A,R2
        CLR       C
        SUBB      A,?V7
        JC        ??zclClosures_SendDoorLockRequest_3
// 2223 
// 2224   status = zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_CLOSURES_DOOR_LOCK,
// 2225                             cmd, TRUE, ZCL_FRAME_CLIENT_SERVER_DIR,
// 2226                             disableDefaultRsp, 0, seqNum, calculatedBufSize, pBuf );
        ; Setup parameters for call to function zcl_SendCommand
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 22)
        MOV       ?V4,R6
        MOV       ?V5,#0x0
        MOV       R0,#?V4
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 24)
        MOV       A,#0x1a
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        MOV       ?V4,A
        MOV       R0,#?V4
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 25)
        CLR       A
        MOV       ?V4,A
        MOV       R0,#?V4
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 27)
        MOV       A,?V2
        MOV       ?V4,A
        MOV       R0,#?V4
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 28)
        MOV       ?V4,#0x0
        MOV       R0,#?V4
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 29)
        MOV       ?V4,#0x1
        MOV       R0,#?V4
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 30)
        MOV       A,?V6
        MOV       ?V4,A
        MOV       R0,#?V4
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 31)
        MOV       R4,#0x1
        MOV       R5,#0x1
        MOV       R2,?V8
        MOV       R3,?V9
        MOV       R1,?V3
        LCALL     `??zcl_SendCommand::?relay`; Banked call to: zcl_SendCommand
        MOV       A,#0xb
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 20)
        MOV       A,R1
        MOV       R6,A
// 2227   zcl_mem_free( pBuf );
        ; Setup parameters for call to function osal_mem_free
        MOV       R2,?V0
        MOV       R3,?V1
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
// 2228   return status;
        MOV       A,R6
        MOV       R1,A
??zclClosures_SendDoorLockRequest_1:
        LJMP      ??Subroutine175_0 & 0xFFFF
// 2229 }
          CFI EndBlock cfiBlock788

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine49:
          CFI Block cfiCond789 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLock
          CFI Conditional ??CrossCallReturnLabel_114
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond790 Using cfiCommon0
          CFI (cfiCond790) Function zclClosures_SendDoorLockRequest
          CFI (cfiCond790) Conditional ??CrossCallReturnLabel_115
          CFI (cfiCond790) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond790) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond790) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond790) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond790) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond790) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond790) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond790) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond790) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond790) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond790) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond790) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond790) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond790) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond790) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond790) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond790) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond790) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond790) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond790) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond790) CFA_SP SP+-2
          CFI (cfiCond790) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiPicker791 Using cfiCommon1
          CFI (cfiPicker791) NoFunction
          CFI (cfiPicker791) Picker
        LCALL     ?Subroutine95 & 0xFFFF
??CrossCallReturnLabel_222:
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond789
          CFI EndBlock cfiCond790
          CFI EndBlock cfiPicker791

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine95:
          CFI Block cfiCond792 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLock
          CFI Conditional ??CrossCallReturnLabel_221
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond793 Using cfiCommon0
          CFI (cfiCond793) Function zclClosures_ProcessInDoorLock
          CFI (cfiCond793) Conditional ??CrossCallReturnLabel_222, ??CrossCallReturnLabel_114
          CFI (cfiCond793) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond793) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond793) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond793) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond793) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond793) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond793) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond793) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond793) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond793) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond793) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond793) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond793) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond793) CFA_SP SP+-4
          CFI (cfiCond793) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond794 Using cfiCommon0
          CFI (cfiCond794) Function zclClosures_SendDoorLockRequest
          CFI (cfiCond794) Conditional ??CrossCallReturnLabel_222, ??CrossCallReturnLabel_115
          CFI (cfiCond794) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond794) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond794) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond794) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond794) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond794) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond794) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond794) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond794) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond794) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond794) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond794) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond794) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond794) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond794) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond794) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond794) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond794) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond794) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond794) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond794) CFA_SP SP+-4
          CFI (cfiCond794) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiPicker795 Using cfiCommon1
          CFI (cfiPicker795) NoFunction
          CFI (cfiPicker795) Picker
        MOVX      A,@DPTR
        ADD       A,R0
        MOV       R3,A
        INC       DPTR
        MOVX      A,@DPTR
        ADDC      A,#0x0
        MOV       DPL,R3
        MOV       DPH,A
        RET
          CFI EndBlock cfiCond792
          CFI EndBlock cfiCond793
          CFI EndBlock cfiCond794
          CFI EndBlock cfiPicker795
// 2230 
// 2231 /*********************************************************************
// 2232  * @fn      zclClosures_SendDoorLockUnlockTimeoutRequest
// 2233  *
// 2234  * @brief   Call to send out a Unlock with Timeout Command
// 2235  *
// 2236  * @param   srcEP - Sending application's endpoint
// 2237  * @param   dstAddr - where you want the message to go
// 2238  * @param   pPayload:
// 2239  *           timeout - The timeout in seconds
// 2240  *           aPinRfidCode - PIN/RFID code in ZCL Octet String Format
// 2241  * @param   disableDefaultRsp - decides default response is necessary or not
// 2242  * @param   seqNum - sequence number of the command packet
// 2243  *
// 2244  * @return  ZStatus_t
// 2245  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2246 ZStatus_t zclClosures_SendDoorLockUnlockTimeoutRequest( uint8 srcEP, afAddrType_t *dstAddr,
zclClosures_SendDoorLockUnlockTimeoutRequest:
          CFI Block cfiBlock796 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockUnlockTimeoutRequest
        CODE
// 2247                                                         zclDoorLockUnlockTimeout_t *pPayload,
// 2248                                                         uint8 disableDefaultRsp, uint8 seqNum )
// 2249 {
        FUNCALL zclClosures_SendDoorLockUnlockTimeoutRequest, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclClosures_SendDoorLockUnlockTimeoutRequest, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 31, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 31, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclClosures_SendDoorLockUnlockTimeoutRequest, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        REQUIRE ?V10
        REQUIRE ?V11
        MOV       A,#-0x14
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 20)
        ; Saved register size: 20
        ; Auto size: 0
        MOV       ?V2,R1
        MOV       A,R2
        MOV       R6,A
        MOV       A,R3
        MOV       R7,A
        MOV       ?V0,R4
        MOV       ?V1,R5
// 2250   uint8 i;
// 2251   uint8 *pBuf;  // variable length payload
// 2252   uint8 offset;
// 2253   uint8 calculatedArrayLen;
// 2254   uint8 calculatedBufSize;
// 2255   ZStatus_t status;
// 2256 
// 2257   // first octet of PIN/RFID Code variable string identifies its length
// 2258   calculatedArrayLen = pPayload->pPinRfidCode[0] + 1;  // add first byte of string
        MOV       A,R4
        ADD       A,#0x2
        LCALL     ?Subroutine115 & 0xFFFF
??CrossCallReturnLabel_255:
        LCALL     ?Subroutine47 & 0xFFFF
??CrossCallReturnLabel_405:
        MOV       ?V3,A
// 2259 
// 2260   // determine total size of buffer
// 2261   calculatedBufSize = calculatedArrayLen + PAYLOAD_LEN_UNLOCK_TIMEOUT;
        MOV       A,#0x2
        ADD       A,?V3
// 2262 
// 2263   pBuf = zcl_mem_alloc( calculatedBufSize );
        MOV       ?V8,A
        MOV       ?V9,#0x0
        ; Setup parameters for call to function osal_mem_alloc
        MOV       R2,A
        MOV       R3,?V9
        LCALL     `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV       ?V6,R2
        MOV       ?V7,R3
// 2264   if ( !pBuf )
        MOV       A,R2
        ORL       A,?V7
        JNZ       ??zclClosures_SendDoorLockUnlockTimeoutRequest_0
// 2265   {
// 2266     return ( ZMemError );  // no memory
        MOV       R1,#0x10
        LJMP      ??zclClosures_SendDoorLockUnlockTimeoutRequest_1 & 0xFFFF
// 2267   }
// 2268 
// 2269   // over-the-air is always little endian. Break into a byte stream.
// 2270   pBuf[0] = LO_UINT16(pPayload->timeout);
??zclClosures_SendDoorLockUnlockTimeoutRequest_0:
        MOV       DPL,?V0
        MOV       DPH,?V1
        LCALL     ??Subroutine167_0 & 0xFFFF
??CrossCallReturnLabel_415:
        LCALL     ?Subroutine79 & 0xFFFF
// 2271   pBuf[1] = HI_UINT16(pPayload->timeout);
??CrossCallReturnLabel_185:
        LCALL     ?Subroutine56 & 0xFFFF
??CrossCallReturnLabel_417:
        INC       DPTR
        MOVX      @DPTR,A
// 2272   offset = 2;
        MOV       R1,#0x2
// 2273   for ( i = 0; i < calculatedArrayLen; i++ )
        MOV       R0,#0x0
        SJMP      ??zclClosures_SendDoorLockUnlockTimeoutRequest_2
// 2274   {
// 2275     pBuf[offset++] = pPayload->pPinRfidCode[i];
??zclClosures_SendDoorLockUnlockTimeoutRequest_3:
        LCALL     ?Subroutine10 & 0xFFFF
// 2276   }
??CrossCallReturnLabel_428:
        PUSH      A
          CFI CFA_SP SP+-1
        LCALL     ?Subroutine86 & 0xFFFF
??CrossCallReturnLabel_203:
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
        INC       R1
        INC       R0
??zclClosures_SendDoorLockUnlockTimeoutRequest_2:
        MOV       A,R0
        CLR       C
        SUBB      A,?V3
        JC        ??zclClosures_SendDoorLockUnlockTimeoutRequest_3
// 2277 
// 2278   status = zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_CLOSURES_DOOR_LOCK,
// 2279                             COMMAND_CLOSURES_UNLOCK_WITH_TIMEOUT, TRUE, ZCL_FRAME_CLIENT_SERVER_DIR,
// 2280                             disableDefaultRsp, 0, seqNum, calculatedBufSize, pBuf );
        ; Setup parameters for call to function zcl_SendCommand
        MOV       R0,#?V6
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 22)
        MOV       R0,#?V8
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 24)
        MOV       A,#0x19
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine18 & 0xFFFF
??CrossCallReturnLabel_14:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 25)
        CLR       A
        MOV       ?V0,A
        MOV       ?V1,A
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 27)
        MOV       A,#0x1b
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine18 & 0xFFFF
??CrossCallReturnLabel_15:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 28)
        MOV       ?V0,#0x0
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 29)
        MOV       ?V0,#0x1
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 30)
        MOV       ?V0,#0x3
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 31)
        MOV       R4,#0x1
        MOV       R5,#0x1
        MOV       A,R6
        MOV       R2,A
        MOV       A,R7
        MOV       R3,A
        MOV       R1,?V2
        LCALL     `??zcl_SendCommand::?relay`; Banked call to: zcl_SendCommand
        MOV       A,#0xb
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 20)
        MOV       A,R1
        MOV       R6,A
// 2281   zcl_mem_free( pBuf );
        ; Setup parameters for call to function osal_mem_free
        MOV       R2,?V6
        MOV       R3,?V7
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
// 2282   return status;
        MOV       A,R6
        MOV       R1,A
??zclClosures_SendDoorLockUnlockTimeoutRequest_1:
        LJMP      ??Subroutine175_0 & 0xFFFF
// 2283 }
          CFI EndBlock cfiBlock796

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine79:
          CFI Block cfiCond797 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockCmds
          CFI Conditional ??CrossCallReturnLabel_187
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond798 Using cfiCommon0
          CFI (cfiCond798) Function zclClosures_SendDoorLockUnlockTimeoutRequest
          CFI (cfiCond798) Conditional ??CrossCallReturnLabel_185
          CFI (cfiCond798) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond798) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond798) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond798) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond798) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond798) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond798) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond798) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond798) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond798) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond798) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond798) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond798) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond798) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond798) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond798) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond798) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond798) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond798) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond798) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond798) CFA_SP SP+-2
          CFI (cfiCond798) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond799 Using cfiCommon0
          CFI (cfiCond799) Function zclClosures_SendDoorLockGetYearDayScheduleResponse
          CFI (cfiCond799) Conditional ??CrossCallReturnLabel_186
          CFI (cfiCond799) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond799) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond799) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond799) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond799) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond799) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond799) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond799) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond799) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond799) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond799) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond799) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond799) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond799) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond799) CFA_SP SP+-2
          CFI (cfiCond799) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiPicker800 Using cfiCommon1
          CFI (cfiPicker800) NoFunction
          CFI (cfiPicker800) Picker
        LCALL     ?Subroutine108 & 0xFFFF
??CrossCallReturnLabel_235:
        RET
          CFI EndBlock cfiCond797
          CFI EndBlock cfiCond798
          CFI EndBlock cfiCond799
          CFI EndBlock cfiPicker800

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine108:
          CFI Block cfiCond801 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockCmds
          CFI Conditional ??CrossCallReturnLabel_235, ??CrossCallReturnLabel_187
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond802 Using cfiCommon0
          CFI (cfiCond802) Function zclClosures_SendDoorLockUnlockTimeoutRequest
          CFI (cfiCond802) Conditional ??CrossCallReturnLabel_235, ??CrossCallReturnLabel_185
          CFI (cfiCond802) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond802) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond802) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond802) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond802) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond802) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond802) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond802) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond802) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond802) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond802) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond802) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond802) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond802) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond802) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond802) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond802) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond802) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond802) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond802) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond802) CFA_SP SP+-4
          CFI (cfiCond802) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond803 Using cfiCommon0
          CFI (cfiCond803) Function zclClosures_SendDoorLockGetYearDayScheduleResponse
          CFI (cfiCond803) Conditional ??CrossCallReturnLabel_235, ??CrossCallReturnLabel_186
          CFI (cfiCond803) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond803) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond803) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond803) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond803) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond803) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond803) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond803) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond803) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond803) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond803) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond803) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond803) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond803) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond803) CFA_SP SP+-4
          CFI (cfiCond803) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond804 Using cfiCommon0
          CFI (cfiCond804) Function zclClosures_SendDoorLockSetPINCodeRequest
          CFI (cfiCond804) Conditional ??CrossCallReturnLabel_236, ??CrossCallReturnLabel_0
          CFI (cfiCond804) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond804) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond804) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond804) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond804) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond804) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond804) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond804) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond804) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond804) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond804) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond804) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond804) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond804) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond804) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond804) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond804) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond804) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond804) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond804) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond804) CFA_SP SP+-4
          CFI (cfiCond804) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond805 Using cfiCommon0
          CFI (cfiCond805) Function zclClosures_SendDoorLockSetRFIDCodeRequest
          CFI (cfiCond805) Conditional ??CrossCallReturnLabel_236, ??CrossCallReturnLabel_1
          CFI (cfiCond805) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond805) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond805) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond805) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond805) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond805) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond805) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond805) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond805) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond805) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond805) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond805) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond805) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond805) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond805) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond805) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond805) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond805) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond805) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond805) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond805) CFA_SP SP+-4
          CFI (cfiCond805) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond806 Using cfiCommon0
          CFI (cfiCond806) Function zclClosures_SendDoorLockGetPINCodeResponse
          CFI (cfiCond806) Conditional ??CrossCallReturnLabel_236, ??CrossCallReturnLabel_2
          CFI (cfiCond806) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond806) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond806) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond806) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond806) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond806) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond806) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond806) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond806) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond806) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond806) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond806) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond806) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond806) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond806) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond806) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond806) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond806) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond806) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond806) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond806) CFA_SP SP+-4
          CFI (cfiCond806) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond807 Using cfiCommon0
          CFI (cfiCond807) Function zclClosures_SendDoorLockGetRFIDCodeResponse
          CFI (cfiCond807) Conditional ??CrossCallReturnLabel_236, ??CrossCallReturnLabel_3
          CFI (cfiCond807) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond807) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond807) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond807) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond807) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond807) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond807) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond807) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond807) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond807) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond807) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond807) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond807) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond807) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond807) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond807) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond807) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond807) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond807) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond807) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond807) CFA_SP SP+-4
          CFI (cfiCond807) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond808 Using cfiCommon0
          CFI (cfiCond808) Function zclClosures_SendDoorLockSetPINCodeRequest
          CFI (cfiCond808) Conditional ??CrossCallReturnLabel_237, ??CrossCallReturnLabel_0
          CFI (cfiCond808) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond808) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond808) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond808) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond808) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond808) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond808) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond808) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond808) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond808) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond808) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond808) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond808) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond808) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond808) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond808) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond808) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond808) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond808) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond808) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond808) CFA_SP SP+-4
          CFI (cfiCond808) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond809 Using cfiCommon0
          CFI (cfiCond809) Function zclClosures_SendDoorLockSetRFIDCodeRequest
          CFI (cfiCond809) Conditional ??CrossCallReturnLabel_237, ??CrossCallReturnLabel_1
          CFI (cfiCond809) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond809) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond809) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond809) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond809) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond809) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond809) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond809) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond809) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond809) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond809) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond809) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond809) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond809) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond809) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond809) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond809) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond809) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond809) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond809) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond809) CFA_SP SP+-4
          CFI (cfiCond809) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond810 Using cfiCommon0
          CFI (cfiCond810) Function zclClosures_SendDoorLockGetPINCodeResponse
          CFI (cfiCond810) Conditional ??CrossCallReturnLabel_237, ??CrossCallReturnLabel_2
          CFI (cfiCond810) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond810) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond810) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond810) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond810) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond810) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond810) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond810) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond810) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond810) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond810) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond810) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond810) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond810) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond810) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond810) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond810) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond810) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond810) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond810) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond810) CFA_SP SP+-4
          CFI (cfiCond810) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond811 Using cfiCommon0
          CFI (cfiCond811) Function zclClosures_SendDoorLockGetRFIDCodeResponse
          CFI (cfiCond811) Conditional ??CrossCallReturnLabel_237, ??CrossCallReturnLabel_3
          CFI (cfiCond811) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond811) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond811) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond811) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond811) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond811) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond811) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond811) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond811) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond811) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond811) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond811) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond811) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond811) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond811) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond811) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond811) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond811) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond811) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond811) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond811) CFA_SP SP+-4
          CFI (cfiCond811) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond812 Using cfiCommon0
          CFI (cfiCond812) Function zclClosures_SendDoorLockGetYearDayScheduleResponse
          CFI (cfiCond812) Conditional ??CrossCallReturnLabel_238, ??CrossCallReturnLabel_183
          CFI (cfiCond812) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond812) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond812) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond812) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond812) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond812) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond812) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond812) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond812) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond812) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond812) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond812) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond812) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond812) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond812) CFA_SP SP+-4
          CFI (cfiCond812) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond813 Using cfiCommon0
          CFI (cfiCond813) Function zclClosures_SendDoorLockGetHolidayScheduleResponse
          CFI (cfiCond813) Conditional ??CrossCallReturnLabel_238, ??CrossCallReturnLabel_184
          CFI (cfiCond813) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond813) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond813) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond813) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond813) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond813) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond813) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond813) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond813) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond813) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond813) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond813) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond813) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond813) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond813) CFA_SP SP+-4
          CFI (cfiCond813) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiPicker814 Using cfiCommon1
          CFI (cfiPicker814) NoFunction
          CFI (cfiPicker814) Picker
        MOVX      @DPTR,A
        MOV       DPL,?V0
        MOV       DPH,?V1
        RET
          CFI EndBlock cfiCond801
          CFI EndBlock cfiCond802
          CFI EndBlock cfiCond803
          CFI EndBlock cfiCond804
          CFI EndBlock cfiCond805
          CFI EndBlock cfiCond806
          CFI EndBlock cfiCond807
          CFI EndBlock cfiCond808
          CFI EndBlock cfiCond809
          CFI EndBlock cfiCond810
          CFI EndBlock cfiCond811
          CFI EndBlock cfiCond812
          CFI EndBlock cfiCond813
          CFI EndBlock cfiPicker814

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine47:
          CFI Block cfiCond815 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockRequest
          CFI Conditional ??CrossCallReturnLabel_404
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond816 Using cfiCommon0
          CFI (cfiCond816) Function zclClosures_SendDoorLockUnlockTimeoutRequest
          CFI (cfiCond816) Conditional ??CrossCallReturnLabel_405
          CFI (cfiCond816) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond816) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond816) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond816) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond816) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond816) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond816) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond816) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond816) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond816) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond816) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond816) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond816) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond816) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond816) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond816) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond816) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond816) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond816) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond816) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond816) CFA_SP SP+-2
          CFI (cfiCond816) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond817 Using cfiCommon0
          CFI (cfiCond817) Function zclClosures_SendDoorLockGetLogRecordResponse
          CFI (cfiCond817) Conditional ??CrossCallReturnLabel_406
          CFI (cfiCond817) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond817) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond817) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond817) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond817) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond817) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond817) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond817) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond817) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond817) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond817) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond817) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond817) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond817) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond817) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond817) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond817) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond817) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond817) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond817) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond817) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond817) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond817) CFA_SP SP+-2
          CFI (cfiCond817) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiPicker818 Using cfiCommon1
          CFI (cfiPicker818) NoFunction
          CFI (cfiPicker818) Picker
        MOV       DPH,A
          CFI EndBlock cfiCond815
          CFI EndBlock cfiCond816
          CFI EndBlock cfiCond817
          CFI EndBlock cfiPicker818
        REQUIRE ??Subroutine162_0
        ; // Fall through to label ??Subroutine162_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine162_0:
          CFI Block cfiCond819 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLock
          CFI Conditional ??CrossCallReturnLabel_403
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond820 Using cfiCommon0
          CFI (cfiCond820) Function zclClosures_SendDoorLockRequest
          CFI (cfiCond820) Conditional ??CrossCallReturnLabel_404
          CFI (cfiCond820) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond820) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond820) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond820) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond820) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond820) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond820) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond820) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond820) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond820) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond820) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond820) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond820) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond820) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond820) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond820) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond820) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond820) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond820) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond820) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond820) CFA_SP SP+-2
          CFI (cfiCond820) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond821 Using cfiCommon0
          CFI (cfiCond821) Function zclClosures_SendDoorLockUnlockTimeoutRequest
          CFI (cfiCond821) Conditional ??CrossCallReturnLabel_405
          CFI (cfiCond821) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond821) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond821) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond821) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond821) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond821) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond821) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond821) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond821) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond821) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond821) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond821) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond821) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond821) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond821) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond821) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond821) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond821) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond821) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond821) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond821) CFA_SP SP+-2
          CFI (cfiCond821) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond822 Using cfiCommon0
          CFI (cfiCond822) Function zclClosures_SendDoorLockGetLogRecordResponse
          CFI (cfiCond822) Conditional ??CrossCallReturnLabel_406
          CFI (cfiCond822) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond822) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond822) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond822) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond822) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond822) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond822) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond822) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond822) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond822) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond822) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond822) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond822) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond822) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond822) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond822) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond822) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond822) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond822) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond822) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond822) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond822) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond822) CFA_SP SP+-2
          CFI (cfiCond822) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiPicker823 Using cfiCommon1
          CFI (cfiPicker823) NoFunction
          CFI (cfiPicker823) Picker
        LCALL     ??Subroutine171_0 & 0xFFFF
??CrossCallReturnLabel_439:
        RET
          CFI EndBlock cfiCond819
          CFI EndBlock cfiCond820
          CFI EndBlock cfiCond821
          CFI EndBlock cfiCond822
          CFI EndBlock cfiPicker823
// 2284 
// 2285 /*********************************************************************
// 2286  * @fn      zclClosures_SendDoorLockGetLogRecordRequest
// 2287  *
// 2288  * @brief   Call to send out a Get Log Record Command
// 2289  *
// 2290  * @param   srcEP - Sending application's endpoint
// 2291  * @param   dstAddr - where you want the message to go
// 2292  * @param   logIndex - Log number between 1 - [max log attribute]
// 2293  * @param   disableDefaultRsp - decides default response is necessary or not
// 2294  * @param   seqNum - sequence number of the command packet
// 2295  *
// 2296  * @return  ZStatus_t
// 2297  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2298 ZStatus_t zclClosures_SendDoorLockGetLogRecordRequest( uint8 srcEP, afAddrType_t *dstAddr,
zclClosures_SendDoorLockGetLogRecordRequest:
          CFI Block cfiBlock824 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockGetLogRecordRequest
        CODE
// 2299                                                        uint16 logIndex, uint8 disableDefaultRsp, uint8 seqNum )
// 2300 {
        FUNCALL zclClosures_SendDoorLockGetLogRecordRequest, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 23, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 23, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV       A,#-0xa
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 2
        MOV       A,#-0x2
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 12)
        MOV       A,R1
        MOV       R6,A
// 2301   uint8 payload[PAYLOAD_LEN_GET_LOG_RECORD];
// 2302 
// 2303   payload[0] = LO_UINT16( logIndex );
        MOV       A,R4
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOVX      @DPTR,A
// 2304   payload[1] = HI_UINT16( logIndex );
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine57 & 0xFFFF
// 2305 
// 2306   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_CLOSURES_DOOR_LOCK,
// 2307                           COMMAND_CLOSURES_GET_LOG_RECORD, TRUE, ZCL_FRAME_CLIENT_SERVER_DIR,
// 2308                           disableDefaultRsp, 0, seqNum, PAYLOAD_LEN_GET_LOG_RECORD, payload );
??CrossCallReturnLabel_449:
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 14)
        MOV       ?V0,#0x2
        MOV       ?V1,#0x0
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 16)
        MOV       A,#0x11
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine18 & 0xFFFF
??CrossCallReturnLabel_16:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 17)
        CLR       A
        MOV       ?V0,A
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 19)
        MOV       A,#0x13
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine18 & 0xFFFF
??CrossCallReturnLabel_17:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 20)
        MOV       ?V0,#0x0
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 21)
        MOV       ?V0,#0x1
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 22)
        MOV       ?V0,#0x4
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 23)
        MOV       R4,#0x1
        MOV       R5,#0x1
        MOV       A,R6
        MOV       R1,A
        LCALL     `??zcl_SendCommand::?relay`; Banked call to: zcl_SendCommand
        MOV       A,#0xb
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 12)
        MOV       A,#0x2
        LJMP      ??Subroutine174_0 & 0xFFFF
// 2309 }
          CFI EndBlock cfiBlock824
// 2310 
// 2311 /*********************************************************************
// 2312  * @fn      zclClosures_SendDoorLockSetPINCodeRequest
// 2313  *
// 2314  * @brief   Call to send out a Set PIN Code Command
// 2315  *
// 2316  * @param   srcEP - Sending application's endpoint
// 2317  * @param   dstAddr - where you want the message to go
// 2318  * @param   pPayload:
// 2319  *           userID - User ID is between 0 - [# PINs User supported attribute]
// 2320  *           userStatus - Used to indicate what the status is for a specific User ID
// 2321  *           userType - Used to indicate what the type is for a specific User ID
// 2322  *           pPIN - A ZigBee string indicating the PIN code used to create the event on the door lock
// 2323  * @param   disableDefaultRsp - decides default response is necessary or not
// 2324  * @param   seqNum - sequence number of the command packet
// 2325  *
// 2326  * @return  ZStatus_t
// 2327  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2328 ZStatus_t zclClosures_SendDoorLockSetPINCodeRequest( uint8 srcEP, afAddrType_t *dstAddr,
zclClosures_SendDoorLockSetPINCodeRequest:
          CFI Block cfiBlock825 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockSetPINCodeRequest
        CODE
// 2329                                                      zclDoorLockSetPINCode_t *pPayload,
// 2330                                                      uint8 disableDefaultRsp, uint8 seqNum )
// 2331 {
        FUNCALL zclClosures_SendDoorLockSetPINCodeRequest, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclClosures_SendDoorLockSetPINCodeRequest, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 32, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 32, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclClosures_SendDoorLockSetPINCodeRequest, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        REQUIRE ?V10
        REQUIRE ?V11
        MOV       A,#-0x14
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 20)
        ; Saved register size: 20
        ; Auto size: 1
        MOV       A,#-0x1
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 21)
        LCALL     ?Subroutine12 & 0xFFFF
// 2332   uint8 i;
// 2333   uint8 *pBuf;  // variable length payload
// 2334   uint8 offset;
// 2335   uint8 calculatedArrayLen;
// 2336   uint8 calculatedBufSize;
// 2337   ZStatus_t status;
// 2338 
// 2339   // first octet of PIN/RFID Code variable string identifies its length
// 2340   calculatedArrayLen = pPayload->pPIN[0] + 1;  // add first byte of string
// 2341 
// 2342   // determine the total buffer size
// 2343   calculatedBufSize = calculatedArrayLen + PAYLOAD_LEN_SET_PIN_CODE;
// 2344 
// 2345   pBuf = zcl_mem_alloc( calculatedBufSize );
??CrossCallReturnLabel_8:
        LCALL     `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV       ?V6,R2
        MOV       ?V7,R3
// 2346   if ( !pBuf )
        MOV       A,R2
        ORL       A,?V7
        JNZ       ??zclClosures_SendDoorLockSetPINCodeRequest_0
// 2347   {
// 2348     return ( ZMemError );  // no memory
        MOV       R1,#0x10
        SJMP      ??zclClosures_SendDoorLockSetPINCodeRequest_1
// 2349   }
// 2350 
// 2351   // over-the-air is always little endian. Break into a byte stream.
// 2352   pBuf[0] = LO_UINT16(pPayload->userID);
??zclClosures_SendDoorLockSetPINCodeRequest_0:
        LCALL     ?Subroutine9 & 0xFFFF
// 2353   pBuf[1] = HI_UINT16(pPayload->userID);
// 2354   pBuf[2] = pPayload->userStatus;
// 2355   pBuf[3] = pPayload->userType;
// 2356   offset = 4;
// 2357   for ( i = 0; i < calculatedArrayLen; i++ )
??CrossCallReturnLabel_0:
        SJMP      ??zclClosures_SendDoorLockSetPINCodeRequest_2
// 2358   {
// 2359     pBuf[offset++] = pPayload->pPIN[i];
??zclClosures_SendDoorLockSetPINCodeRequest_3:
        LCALL     ?Subroutine10 & 0xFFFF
// 2360   }
??CrossCallReturnLabel_429:
        PUSH      A
          CFI CFA_SP SP+-1
        LCALL     ?Subroutine86 & 0xFFFF
??CrossCallReturnLabel_204:
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
        INC       R1
        INC       R0
??zclClosures_SendDoorLockSetPINCodeRequest_2:
        MOV       A,R0
        CLR       C
        SUBB      A,?V3
        JC        ??zclClosures_SendDoorLockSetPINCodeRequest_3
// 2361 
// 2362 
// 2363   status = zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_CLOSURES_DOOR_LOCK,
// 2364                             COMMAND_CLOSURES_SET_PIN_CODE, TRUE, ZCL_FRAME_CLIENT_SERVER_DIR,
// 2365                             disableDefaultRsp, 0, seqNum, calculatedBufSize, pBuf );
        ; Setup parameters for call to function zcl_SendCommand
        MOV       R0,#?V6
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 23)
        MOV       R0,#?V8
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 25)
        MOV       A,#0x1a
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine18 & 0xFFFF
??CrossCallReturnLabel_18:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 26)
        CLR       A
        MOV       ?V0,A
        MOV       ?V1,A
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 28)
        MOV       A,#0x1c
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine18 & 0xFFFF
??CrossCallReturnLabel_19:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 29)
        MOV       ?V0,#0x0
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 30)
        MOV       ?V0,#0x1
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 31)
        MOV       ?V0,#0x5
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 32)
        MOV       R4,#0x1
        MOV       R5,#0x1
        MOV       A,R6
        MOV       R2,A
        MOV       A,R7
        MOV       R3,A
        MOV       R1,?V2
        LCALL     `??zcl_SendCommand::?relay`; Banked call to: zcl_SendCommand
        MOV       A,#0xb
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 21)
        MOV       A,R1
        MOV       R6,A
// 2366   zcl_mem_free( pBuf );
        ; Setup parameters for call to function osal_mem_free
        MOV       R2,?V6
        MOV       R3,?V7
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
// 2367   return status;
        MOV       A,R6
        MOV       R1,A
??zclClosures_SendDoorLockSetPINCodeRequest_1:
        LJMP      ?Subroutine4 & 0xFFFF
// 2368 }
          CFI EndBlock cfiBlock825
// 2369 
// 2370 /*********************************************************************
// 2371  * @fn      zclClosures_SendDoorLockUserIDRequest
// 2372  *
// 2373  * @brief   Call to send out a User ID Command
// 2374  *
// 2375  * @param   srcEP - Sending application's endpoint
// 2376  * @param   dstAddr - where you want the message to go
// 2377  * @param   cmd - COMMAND_CLOSURES_GET_PIN_CODE, COMMAND_CLOSURES_CLEAR_PIN_CODE,
// 2378  *                COMMAND_CLOSURES_GET_USER_STATUS, COMMAND_CLOSURES_GET_USER_TYPE,
// 2379  *                COMMAND_CLOSURES_GET_RFID_CODE, COMMAND_CLOSURES_CLEAR_RFID_CODE
// 2380  * @param   userID - User ID is between 0 - [# PINs User supported attribute]
// 2381  * @param   disableDefaultRsp - decides default response is necessary or not
// 2382  * @param   seqNum - sequence number of the command packet
// 2383  *
// 2384  * @return  ZStatus_t
// 2385  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2386 ZStatus_t zclClosures_SendDoorLockUserIDRequest( uint8 srcEP, afAddrType_t *dstAddr, uint8 cmd,
zclClosures_SendDoorLockUserIDRequest:
          CFI Block cfiBlock826 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockUserIDRequest
        CODE
// 2387                                                  uint16 userID, uint8 disableDefaultRsp, uint8 seqNum )
// 2388 {
        FUNCALL zclClosures_SendDoorLockUserIDRequest, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 25, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 25, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        MOV       A,#-0xc
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 2
        MOV       A,#-0x2
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 14)
        MOV       ?V0,R1
        MOV       A,R4
        MOV       R6,A
        MOV       A,R5
        MOV       R7,A
        MOV       A,#0xe
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine100 & 0xFFFF
// 2389   uint8 payload[PAYLOAD_LEN_USER_ID];
// 2390 
// 2391   payload[0] = LO_UINT16(userID);
??CrossCallReturnLabel_332:
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOVX      @DPTR,A
// 2392   payload[1] = HI_UINT16(userID);
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP0_8
        MOV       A,R1
        LCALL     ??Subroutine165_0 & 0xFFFF
// 2393 
// 2394   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_CLOSURES_DOOR_LOCK,
// 2395                           cmd, TRUE, ZCL_FRAME_CLIENT_SERVER_DIR,
// 2396                           disableDefaultRsp, 0, seqNum, PAYLOAD_LEN_USER_ID, payload );
??CrossCallReturnLabel_409:
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 16)
        MOV       ?V2,#0x2
        MOV       ?V3,#0x0
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 18)
        MOV       A,#0x14
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine32 & 0xFFFF
??CrossCallReturnLabel_69:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 19)
        CLR       A
        MOV       ?V2,A
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 21)
        MOV       A,R7
        MOV       ?V1,A
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 22)
        MOV       ?V1,#0x0
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 23)
        MOV       ?V1,#0x1
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 24)
        MOV       A,R6
        MOV       ?V1,A
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 25)
        MOV       R4,#0x1
        MOV       R5,#0x1
        MOV       R1,?V0
        LCALL     `??zcl_SendCommand::?relay`; Banked call to: zcl_SendCommand
        MOV       A,#0xb
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 14)
        MOV       A,#0x2
        SJMP      ??Subroutine163_0
// 2397 }
          CFI EndBlock cfiBlock826
// 2398 
// 2399 /*********************************************************************
// 2400  * @fn      zclClosures_SendDoorLockClearAllCodesRequest
// 2401  *
// 2402  * @brief   Call to send out a Clear All Codes Command
// 2403  *
// 2404  * @param   srcEP - Sending application's endpoint
// 2405  * @param   dstAddr - where you want the message to go
// 2406  * @param   cmd - COMMAND_CLOSURES_CLEAR_ALL_PIN_CODES, COMMAND_CLOSURES_CLEAR_ALL_RFID_CODES
// 2407  * @param   disableDefaultRsp - decides default response is necessary or not
// 2408  * @param   seqNum - sequence number of the command packet
// 2409  *
// 2410  * @return  ZStatus_t
// 2411  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2412 ZStatus_t zclClosures_SendDoorLockClearAllCodesRequest( uint8 srcEP, afAddrType_t *dstAddr, uint8 cmd,
zclClosures_SendDoorLockClearAllCodesRequest:
          CFI Block cfiBlock827 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockClearAllCodesRequest
        CODE
// 2413                                                         uint8 disableDefaultRsp, uint8 seqNum )
// 2414 {
        FUNCALL zclClosures_SendDoorLockClearAllCodesRequest, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 23, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 23, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        MOV       A,#-0xc
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 0
        MOV       A,R4
        MOV       R7,A
// 2415   // no payload
// 2416 
// 2417   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_CLOSURES_DOOR_LOCK,
// 2418                           cmd, TRUE, ZCL_FRAME_CLIENT_SERVER_DIR,
// 2419                           disableDefaultRsp, 0, seqNum, 0, NULL );
        ; Setup parameters for call to function zcl_SendCommand
        CLR       A
        MOV       ?V2,A
        MOV       ?V3,A
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 14)
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 16)
        MOV       A,#0x10
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine32 & 0xFFFF
??CrossCallReturnLabel_70:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 17)
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 19)
        MOV       A,R5
        MOV       ?V1,A
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 20)
        MOV       ?V1,#0x0
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 21)
        MOV       ?V1,#0x1
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 22)
        MOV       A,R7
        MOV       ?V1,A
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 23)
        MOV       R4,#0x1
        MOV       R5,#0x1
        LCALL     `??zcl_SendCommand::?relay`; Banked call to: zcl_SendCommand
        MOV       A,#0xb
        SJMP      ??Subroutine163_0
// 2420 }
          CFI EndBlock cfiBlock827

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine0:
          CFI Block cfiBlock828 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 22)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 23)
        MOV       A,R7
        MOV       ?V1,A
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 24)
        MOV       R4,#0x1
        MOV       R5,#0x1
        MOV       A,R6
        MOV       R1,A
        LCALL     `??zcl_SendCommand::?relay`; Banked call to: zcl_SendCommand
        MOV       A,#0xb
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 13)
        MOV       A,#0x1
          CFI EndBlock cfiBlock828
        REQUIRE ??Subroutine163_0
        ; // Fall through to label ??Subroutine163_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine163_0:
          CFI Block cfiBlock829 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 20)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI Invalid
        LCALL     ?DEALLOC_XSTACK8
          CFI EndBlock cfiBlock829
        REQUIRE ??Subroutine164_0
        ; // Fall through to label ??Subroutine164_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine164_0:
          CFI Block cfiBlock830 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV       R7,#0x4
        LJMP      ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock830
// 2421 
// 2422 /*********************************************************************
// 2423  * @fn      zclClosures_SendDoorLockSetUserStatusRequest
// 2424  *
// 2425  * @brief   Call to send out a Set User Status Command
// 2426  *
// 2427  * @param   srcEP - Sending application's endpoint
// 2428  * @param   dstAddr - where you want the message to go
// 2429  * @param   userID - User ID is between 0 - [# PINs User supported attribute]
// 2430  * @param   userStatus - Used to indicate what the status is for a specific User ID
// 2431  * @param   disableDefaultRsp - decides default response is necessary or not
// 2432  * @param   seqNum - sequence number of the command packet
// 2433  *
// 2434  * @return  ZStatus_t
// 2435  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2436 ZStatus_t zclClosures_SendDoorLockSetUserStatusRequest( uint8 srcEP, afAddrType_t *dstAddr,
zclClosures_SendDoorLockSetUserStatusRequest:
          CFI Block cfiBlock831 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockSetUserStatusRequest
        CODE
// 2437                                                         uint16 userID, uint8 userStatus,
// 2438                                                         uint8 disableDefaultRsp, uint8 seqNum )
// 2439 {
        FUNCALL zclClosures_SendDoorLockSetUserStatusRequest, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 24, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV       A,#-0xa
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 3
        MOV       A,#-0x3
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 13)
        MOV       A,R1
        MOV       R6,A
// 2440   uint8 payload[PAYLOAD_LEN_SET_USER_STATUS];
// 2441 
// 2442   payload[0] = LO_UINT16(userID);
        MOV       A,R4
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOVX      @DPTR,A
// 2443   payload[1] = HI_UINT16(userID);
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP0_8
        MOV       A,R5
        MOVX      @DPTR,A
// 2444   payload[2] = userStatus;
        MOV       A,#0xd
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        LCALL     ??Subroutine173_0 & 0xFFFF
// 2445 
// 2446   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_CLOSURES_DOOR_LOCK,
// 2447                           COMMAND_CLOSURES_SET_USER_STATUS, TRUE, ZCL_FRAME_CLIENT_SERVER_DIR,
// 2448                           disableDefaultRsp, 0, seqNum, PAYLOAD_LEN_SET_USER_STATUS, payload );
??CrossCallReturnLabel_451:
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 15)
        MOV       ?V0,#0x3
        MOV       ?V1,#0x0
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 17)
        MOV       A,#0x13
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine18 & 0xFFFF
??CrossCallReturnLabel_20:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 18)
        CLR       A
        MOV       ?V0,A
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 20)
        MOV       A,#0x15
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine18 & 0xFFFF
??CrossCallReturnLabel_21:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 21)
        MOV       ?V0,#0x0
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 22)
        MOV       ?V0,#0x1
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 23)
        MOV       ?V0,#0x9
        LJMP      ?Subroutine1 & 0xFFFF
// 2449 }
          CFI EndBlock cfiBlock831
// 2450 
// 2451 /*********************************************************************
// 2452  * @fn      zclClosures_SendDoorLockSetWeekDayScheduleRequest
// 2453  *
// 2454  * @brief   Call to send out a Set Week Day Schedule Command
// 2455  *
// 2456  * @param   srcEP - Sending application's endpoint
// 2457  * @param   dstAddr - where you want the message to go
// 2458  * @param   scheduleID - The Schedule ID # is between 0 - [# Schedule IDs per user attribute]
// 2459  * @param   userID - User ID is between 0 - [# PINs User supported attribute]
// 2460  * @param   daysMask - Bitmask of the effective days in the order XSFTWTMS
// 2461  * @param   startHour - The start hour of the Week Day Schedule: 0-23
// 2462  * @param   startMinute - The start minute of the Week Day Schedule: 0-59
// 2463  * @param   endHour - The end hour of the Week Day Schedule: 0-23
// 2464  * @param   endMinute - The end minute of the Week Day Schedule: 0-59
// 2465  * @param   disableDefaultRsp - decides default response is necessary or not
// 2466  * @param   seqNum - sequence number of the command packet
// 2467  *
// 2468  * @return  ZStatus_t
// 2469  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2470 ZStatus_t zclClosures_SendDoorLockSetWeekDayScheduleRequest( uint8 srcEP, afAddrType_t *dstAddr,
zclClosures_SendDoorLockSetWeekDayScheduleRequest:
          CFI Block cfiBlock832 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockSetWeekDayScheduleRequest
        CODE
// 2471                                                              uint8 scheduleID, uint16 userID,
// 2472                                                              uint8 daysMask, uint8 startHour,
// 2473                                                              uint8 startMinute, uint8 endHour,
// 2474                                                              uint8 endMinute, uint8 disableDefaultRsp, uint8 seqNum )
// 2475 {
        FUNCALL zclClosures_SendDoorLockSetWeekDayScheduleRequest, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 31, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 31, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        MOV       A,#-0xc
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 8
        MOV       A,#-0x8
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 20)
        MOV       ?V0,R1
        MOV       A,R4
// 2476   uint8 payload[PAYLOAD_LEN_SET_WEEK_DAY_SCHEDULE];
// 2477 
// 2478   payload[0] = scheduleID;
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOVX      @DPTR,A
        MOV       A,#0x14
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine51 & 0xFFFF
// 2479   payload[1] = LO_UINT16(userID);
??CrossCallReturnLabel_118:
        LCALL     ?XSTACK_DISP0_8
        MOV       A,R0
        MOVX      @DPTR,A
// 2480   payload[2] = HI_UINT16(userID);
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        MOV       A,R1
        MOVX      @DPTR,A
// 2481   payload[3] = daysMask;
        MOV       A,#0x3
        LCALL     ?XSTACK_DISP0_8
        MOV       A,R5
        MOVX      @DPTR,A
// 2482   payload[4] = startHour;
        MOV       A,#0x16
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
// 2483   payload[5] = startMinute;
        MOV       A,#0x17
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
// 2484   payload[6] = endHour;
        MOV       A,#0x18
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x6
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
// 2485   payload[7] = endMinute;
        MOV       A,#0x19
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x7
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        LCALL     ??Subroutine165_0 & 0xFFFF
// 2486 
// 2487   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_CLOSURES_DOOR_LOCK,
// 2488                           COMMAND_CLOSURES_SET_WEEK_DAY_SCHEDULE, TRUE, ZCL_FRAME_CLIENT_SERVER_DIR,
// 2489                           disableDefaultRsp, 0, seqNum, PAYLOAD_LEN_SET_WEEK_DAY_SCHEDULE, payload );
??CrossCallReturnLabel_410:
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 22)
        MOV       ?V2,#0x8
        MOV       ?V3,#0x0
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 24)
        MOV       A,#0x1f
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine32 & 0xFFFF
??CrossCallReturnLabel_71:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 25)
        CLR       A
        MOV       ?V2,A
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 27)
        MOV       A,#0x21
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine32 & 0xFFFF
??CrossCallReturnLabel_72:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 28)
        MOV       ?V1,#0x0
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 29)
        MOV       ?V1,#0x1
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 30)
        MOV       ?V1,#0xb
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 31)
        MOV       R4,#0x1
        MOV       R5,#0x1
        MOV       R1,?V0
        LCALL     `??zcl_SendCommand::?relay`; Banked call to: zcl_SendCommand
        MOV       A,#0xb
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 20)
        LJMP      ?Subroutine8 & 0xFFFF
// 2490 }
          CFI EndBlock cfiBlock832
// 2491 
// 2492 /*********************************************************************
// 2493  * @fn      zclClosures_SendDoorLockScheduleRequest
// 2494  *
// 2495  * @brief   Call to send out a Schedule Command
// 2496  *
// 2497  * @param   srcEP - Sending application's endpoint
// 2498  * @param   dstAddr - where you want the message to go
// 2499  * @param   cmd - COMMAND_CLOSURES_GET_WEEK_DAY_SCHEDULE, COMMAND_CLOSURES_CLEAR_WEEK_DAY_SCHEDULE,
// 2500  *                COMMAND_CLOSURES_GET_YEAR_DAY_SCHEDULE, COMMAND_CLOSURES_CLEAR_YEAR_DAY_SCHEDULE
// 2501  * @param   scheduleID - The Schedule ID # is between 0 - [# Schedule IDs per user attribute]
// 2502  * @param   userID - User ID is between 0 - [# PINs User supported attribute]
// 2503  * @param   disableDefaultRsp - decides default response is necessary or not
// 2504  * @param   seqNum - sequence number of the command packet
// 2505  *
// 2506  * @return  ZStatus_t
// 2507  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2508 ZStatus_t zclClosures_SendDoorLockScheduleRequest( uint8 srcEP, afAddrType_t *dstAddr, uint8 cmd,
zclClosures_SendDoorLockScheduleRequest:
          CFI Block cfiBlock833 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockScheduleRequest
        CODE
// 2509                                                    uint8 scheduleID, uint16 userID,
// 2510                                                    uint8 disableDefaultRsp, uint8 seqNum )
// 2511 {
        FUNCALL zclClosures_SendDoorLockScheduleRequest, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 26, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 26, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        MOV       A,#-0xc
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 3
        MOV       A,#-0x3
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 15)
        MOV       A,R1
        MOV       R6,A
        MOV       A,R4
        MOV       R7,A
// 2512   uint8 payload[PAYLOAD_LEN_SCHEDULE];
// 2513 
// 2514   payload[0] = scheduleID;
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOV       A,R5
        MOVX      @DPTR,A
        MOV       A,#0xf
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine51 & 0xFFFF
// 2515   payload[1] = LO_UINT16(userID);
??CrossCallReturnLabel_119:
        LCALL     ?XSTACK_DISP0_8
        MOV       A,R0
        MOVX      @DPTR,A
// 2516   payload[2] = HI_UINT16(userID);
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        MOV       A,R1
        LCALL     ??Subroutine165_0 & 0xFFFF
// 2517 
// 2518   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_CLOSURES_DOOR_LOCK,
// 2519                           cmd, TRUE, ZCL_FRAME_CLIENT_SERVER_DIR,
// 2520                           disableDefaultRsp, 0, seqNum, PAYLOAD_LEN_SCHEDULE, payload );
??CrossCallReturnLabel_411:
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 17)
        MOV       ?V2,#0x3
        MOV       ?V3,#0x0
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 19)
        MOV       A,#0x16
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine32 & 0xFFFF
??CrossCallReturnLabel_73:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 20)
        CLR       A
        MOV       ?V2,A
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 22)
        MOV       A,#0x18
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine32 & 0xFFFF
??CrossCallReturnLabel_74:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 23)
        MOV       ?V1,#0x0
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 24)
        MOV       ?V1,#0x1
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 25)
        MOV       A,R7
        MOV       ?V1,A
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 26)
        MOV       R4,#0x1
        MOV       R5,#0x1
        MOV       A,R6
        MOV       R1,A
        LCALL     `??zcl_SendCommand::?relay`; Banked call to: zcl_SendCommand
        MOV       A,#0xb
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 15)
        MOV       A,#0x3
        LJMP      ??Subroutine163_0 & 0xFFFF
// 2521 }
          CFI EndBlock cfiBlock833

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine60:
          CFI Block cfiCond834 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockHolidayScheduleRequest
          CFI Conditional ??CrossCallReturnLabel_407
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond835 Using cfiCommon0
          CFI (cfiCond835) Function zclClosures_SendDoorLockStatusResponse
          CFI (cfiCond835) Conditional ??CrossCallReturnLabel_408
          CFI (cfiCond835) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond835) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond835) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond835) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond835) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond835) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond835) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond835) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond835) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond835) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond835) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond835) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond835) CFA_SP SP+-2
          CFI (cfiCond835) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiPicker836 Using cfiCommon1
          CFI (cfiPicker836) NoFunction
          CFI (cfiPicker836) Picker
        MOV       A,R1
        MOV       R6,A
        MOV       A,R4
        MOV       R7,A
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOV       A,R5
          CFI EndBlock cfiCond834
          CFI EndBlock cfiCond835
          CFI EndBlock cfiPicker836
        REQUIRE ??Subroutine165_0
        ; // Fall through to label ??Subroutine165_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine165_0:
          CFI Block cfiCond837 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockUserIDRequest
          CFI Conditional ??CrossCallReturnLabel_409
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond838 Using cfiCommon0
          CFI (cfiCond838) Function zclClosures_SendDoorLockSetWeekDayScheduleRequest
          CFI (cfiCond838) Conditional ??CrossCallReturnLabel_410
          CFI (cfiCond838) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond838) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond838) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond838) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond838) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond838) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond838) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond838) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond838) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond838) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond838) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond838) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond838) CFA_SP SP+-2
          CFI (cfiCond838) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond839 Using cfiCommon0
          CFI (cfiCond839) Function zclClosures_SendDoorLockScheduleRequest
          CFI (cfiCond839) Conditional ??CrossCallReturnLabel_411
          CFI (cfiCond839) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond839) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond839) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond839) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond839) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond839) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond839) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond839) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond839) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond839) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond839) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond839) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond839) CFA_SP SP+-2
          CFI (cfiCond839) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond840 Using cfiCommon0
          CFI (cfiCond840) Function zclClosures_SendDoorLockHolidayScheduleRequest
          CFI (cfiCond840) Conditional ??CrossCallReturnLabel_407
          CFI (cfiCond840) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond840) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond840) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond840) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond840) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond840) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond840) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond840) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond840) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond840) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond840) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond840) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond840) CFA_SP SP+-2
          CFI (cfiCond840) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond841 Using cfiCommon0
          CFI (cfiCond841) Function zclClosures_SendDoorLockStatusResponse
          CFI (cfiCond841) Conditional ??CrossCallReturnLabel_408
          CFI (cfiCond841) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond841) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond841) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond841) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond841) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond841) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond841) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond841) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond841) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond841) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond841) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond841) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond841) CFA_SP SP+-2
          CFI (cfiCond841) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiPicker842 Using cfiCommon1
          CFI (cfiPicker842) NoFunction
          CFI (cfiPicker842) Picker
        MOVX      @DPTR,A
        ; Setup parameters for call to function zcl_SendCommand
        ; Setup parameters for call to function zcl_SendCommand
        ; Setup parameters for call to function zcl_SendCommand
        ; Setup parameters for call to function zcl_SendCommand
        ; Setup parameters for call to function zcl_SendCommand
        MOV       R0,?XSP + 0
        MOV       R1,?XSP + 1
        MOV       ?V2,R0
        MOV       ?V3,R1
        MOV       R0,#?V2
        RET
          CFI EndBlock cfiCond837
          CFI EndBlock cfiCond838
          CFI EndBlock cfiCond839
          CFI EndBlock cfiCond840
          CFI EndBlock cfiCond841
          CFI EndBlock cfiPicker842

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine51:
          CFI Block cfiCond843 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockSetWeekDayScheduleRequest
          CFI Conditional ??CrossCallReturnLabel_118
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond844 Using cfiCommon0
          CFI (cfiCond844) Function zclClosures_SendDoorLockScheduleRequest
          CFI (cfiCond844) Conditional ??CrossCallReturnLabel_119
          CFI (cfiCond844) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond844) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond844) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond844) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond844) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond844) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond844) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond844) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond844) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond844) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond844) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond844) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond844) CFA_SP SP+-2
          CFI (cfiCond844) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond845 Using cfiCommon0
          CFI (cfiCond845) Function zclClosures_SendDoorLockSetYearDayScheduleRequest
          CFI (cfiCond845) Conditional ??CrossCallReturnLabel_120
          CFI (cfiCond845) R6 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond845) VB load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond845) V0 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond845) V1 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond845) V2 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond845) V3 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond845) V4 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond845) V5 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond845) V6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond845) V7 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond845) V8 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond845) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond845) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond845) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond845) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond845) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond845) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond845) CFA_SP SP+-2
          CFI (cfiCond845) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiPicker846 Using cfiCommon1
          CFI (cfiPicker846) NoFunction
          CFI (cfiPicker846) Picker
        LCALL     ?Subroutine117 & 0xFFFF
??CrossCallReturnLabel_335:
        MOV       A,#0x1
        RET
          CFI EndBlock cfiCond843
          CFI EndBlock cfiCond844
          CFI EndBlock cfiCond845
          CFI EndBlock cfiPicker846

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine32:
          CFI Block cfiCond847 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockUserIDRequest
          CFI Conditional ??CrossCallReturnLabel_69
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond848 Using cfiCommon0
          CFI (cfiCond848) Function zclClosures_SendDoorLockClearAllCodesRequest
          CFI (cfiCond848) Conditional ??CrossCallReturnLabel_70
          CFI (cfiCond848) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond848) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond848) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond848) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond848) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond848) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond848) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond848) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond848) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond848) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond848) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond848) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond848) CFA_SP SP+-2
          CFI (cfiCond848) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond849 Using cfiCommon0
          CFI (cfiCond849) Function zclClosures_SendDoorLockSetWeekDayScheduleRequest
          CFI (cfiCond849) Conditional ??CrossCallReturnLabel_71
          CFI (cfiCond849) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond849) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond849) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond849) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond849) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond849) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond849) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond849) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond849) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond849) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond849) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond849) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond849) CFA_SP SP+-2
          CFI (cfiCond849) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond850 Using cfiCommon0
          CFI (cfiCond850) Function zclClosures_SendDoorLockSetWeekDayScheduleRequest
          CFI (cfiCond850) Conditional ??CrossCallReturnLabel_72
          CFI (cfiCond850) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond850) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond850) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond850) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond850) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond850) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond850) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond850) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond850) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond850) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond850) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond850) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond850) CFA_SP SP+-2
          CFI (cfiCond850) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond851 Using cfiCommon0
          CFI (cfiCond851) Function zclClosures_SendDoorLockScheduleRequest
          CFI (cfiCond851) Conditional ??CrossCallReturnLabel_73
          CFI (cfiCond851) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond851) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond851) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond851) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond851) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond851) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond851) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond851) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond851) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond851) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond851) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond851) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond851) CFA_SP SP+-2
          CFI (cfiCond851) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond852 Using cfiCommon0
          CFI (cfiCond852) Function zclClosures_SendDoorLockScheduleRequest
          CFI (cfiCond852) Conditional ??CrossCallReturnLabel_74
          CFI (cfiCond852) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond852) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond852) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond852) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond852) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond852) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond852) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond852) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond852) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond852) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond852) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond852) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond852) CFA_SP SP+-2
          CFI (cfiCond852) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond853 Using cfiCommon0
          CFI (cfiCond853) Function zclClosures_SendDoorLockHolidayScheduleRequest
          CFI (cfiCond853) Conditional ??CrossCallReturnLabel_75
          CFI (cfiCond853) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond853) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond853) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond853) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond853) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond853) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond853) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond853) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond853) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond853) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond853) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond853) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond853) CFA_SP SP+-2
          CFI (cfiCond853) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond854 Using cfiCommon0
          CFI (cfiCond854) Function zclClosures_SendDoorLockHolidayScheduleRequest
          CFI (cfiCond854) Conditional ??CrossCallReturnLabel_76
          CFI (cfiCond854) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond854) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond854) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond854) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond854) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond854) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond854) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond854) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond854) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond854) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond854) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond854) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond854) CFA_SP SP+-2
          CFI (cfiCond854) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond855 Using cfiCommon0
          CFI (cfiCond855) Function zclClosures_SendDoorLockStatusResponse
          CFI (cfiCond855) Conditional ??CrossCallReturnLabel_77
          CFI (cfiCond855) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond855) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond855) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond855) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond855) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond855) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond855) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond855) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond855) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond855) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond855) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond855) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond855) CFA_SP SP+-2
          CFI (cfiCond855) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond856 Using cfiCommon0
          CFI (cfiCond856) Function zclClosures_SendDoorLockStatusResponse
          CFI (cfiCond856) Conditional ??CrossCallReturnLabel_78
          CFI (cfiCond856) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond856) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond856) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond856) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond856) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond856) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond856) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond856) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond856) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond856) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond856) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond856) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond856) CFA_SP SP+-2
          CFI (cfiCond856) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiPicker857 Using cfiCommon1
          CFI (cfiPicker857) NoFunction
          CFI (cfiPicker857) Picker
        MOVX      A,@DPTR
        MOV       ?V1,A
        MOV       R0,#?V1
        RET
          CFI EndBlock cfiCond847
          CFI EndBlock cfiCond848
          CFI EndBlock cfiCond849
          CFI EndBlock cfiCond850
          CFI EndBlock cfiCond851
          CFI EndBlock cfiCond852
          CFI EndBlock cfiCond853
          CFI EndBlock cfiCond854
          CFI EndBlock cfiCond855
          CFI EndBlock cfiCond856
          CFI EndBlock cfiPicker857
// 2522 
// 2523 /*********************************************************************
// 2524  * @fn      zclClosures_SendDoorLockSetYearDayScheduleRequest
// 2525  *
// 2526  * @brief   Call to send out a Set Year Day Schedule Command
// 2527  *
// 2528  * @param   srcEP - Sending application's endpoint
// 2529  * @param   dstAddr - where you want the message to go
// 2530  * @param   scheduleID - The Schedule ID # is between 0 - [# Schedule IDs per user attribute]
// 2531  * @param   userID - User ID is between 0 - [# PINs User supported attribute]
// 2532  * @param   zigBeeLocalStartTime - Start time of the Year Day Schedule representing by ZigBeeLocalTime
// 2533  * @param   zigBeeLocalEndTime - End time of the Year Day Schedule representing by ZigBeeLocalTime
// 2534  * @param   disableDefaultRsp - decides default response is necessary or not
// 2535  * @param   seqNum - sequence number of the command packet
// 2536  *
// 2537  * @return  ZStatus_t
// 2538  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2539 ZStatus_t zclClosures_SendDoorLockSetYearDayScheduleRequest( uint8 srcEP, afAddrType_t *dstAddr,
zclClosures_SendDoorLockSetYearDayScheduleRequest:
          CFI Block cfiBlock858 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockSetYearDayScheduleRequest
        CODE
// 2540                                                              uint8 scheduleID, uint16 userID,
// 2541                                                              uint32 zigBeeLocalStartTime,
// 2542                                                              uint32 zigBeeLocalEndTime,
// 2543                                                              uint8 disableDefaultRsp, uint8 seqNum )
// 2544 {
        FUNCALL zclClosures_SendDoorLockSetYearDayScheduleRequest, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 39, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 39, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        MOV       A,#-0x11
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 17)
        ; Saved register size: 17
        ; Auto size: 11
        MOV       A,#-0xb
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 28)
        MOV       A,R1
        MOV       R7,A
        MOV       A,R4
// 2545   uint8 payload[PAYLOAD_LEN_SET_YEAR_DAY_SCHEDULE];
// 2546 
// 2547   payload[0] = scheduleID;
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOVX      @DPTR,A
        MOV       A,#0x1c
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine51 & 0xFFFF
// 2548   payload[1] = LO_UINT16(userID);
??CrossCallReturnLabel_120:
        LCALL     ?XSTACK_DISP0_8
        MOV       A,R0
        MOVX      @DPTR,A
// 2549   payload[2] = HI_UINT16(userID);
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        MOV       A,R1
        MOVX      @DPTR,A
        MOV       A,#0x1e
        LCALL     ?XSTACK_DISP0_8
        MOV       R0,#?V0
        LCALL     ?L_MOV_X
// 2550   payload[3] = BREAK_UINT32(zigBeeLocalStartTime, 0);
        MOV       A,#0x3
        LCALL     ?XSTACK_DISP0_8
        MOV       A,?V0
        MOVX      @DPTR,A
// 2551   payload[4] = BREAK_UINT32(zigBeeLocalStartTime, 1);
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine59 & 0xFFFF
// 2552   payload[5] = BREAK_UINT32(zigBeeLocalStartTime, 2);
??CrossCallReturnLabel_136:
        LCALL     ?UL_SHR
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine76 & 0xFFFF
// 2553   payload[6] = BREAK_UINT32(zigBeeLocalStartTime, 3);
??CrossCallReturnLabel_179:
        LCALL     ?UL_SHR
        MOV       A,#0x6
        LCALL     ?XSTACK_DISP0_8
        MOV       A,?V0
        MOVX      @DPTR,A
        MOV       A,#0x22
        LCALL     ?XSTACK_DISP0_8
        MOV       R0,#?V0
        LCALL     ?L_MOV_X
// 2554   payload[7] = BREAK_UINT32(zigBeeLocalEndTime, 0);
        MOV       A,#0x7
        LCALL     ?XSTACK_DISP0_8
        MOV       A,?V0
        MOVX      @DPTR,A
// 2555   payload[8] = BREAK_UINT32(zigBeeLocalEndTime, 1);
        MOV       A,#0x8
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine59 & 0xFFFF
// 2556   payload[9] = BREAK_UINT32(zigBeeLocalEndTime, 2);
??CrossCallReturnLabel_137:
        LCALL     ?UL_SHR
        MOV       A,#0x9
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine76 & 0xFFFF
// 2557   payload[10] = BREAK_UINT32(zigBeeLocalEndTime, 3);
??CrossCallReturnLabel_180:
        LCALL     ?UL_SHR
        MOV       A,#0xa
        LCALL     ?XSTACK_DISP0_8
        MOV       A,?V0
        LCALL     ??Subroutine173_0 & 0xFFFF
// 2558 
// 2559   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_CLOSURES_DOOR_LOCK,
// 2560                           COMMAND_CLOSURES_SET_YEAR_DAY_SCHEDULE, TRUE, ZCL_FRAME_CLIENT_SERVER_DIR,
// 2561                           disableDefaultRsp, 0, seqNum, PAYLOAD_LEN_SET_YEAR_DAY_SCHEDULE, payload );
??CrossCallReturnLabel_452:
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 30)
        MOV       ?V0,#0xb
        MOV       ?V1,#0x0
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 32)
        MOV       A,#0x2a
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine18 & 0xFFFF
??CrossCallReturnLabel_22:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 33)
        CLR       A
        MOV       ?V0,A
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 35)
        MOV       A,R5
        MOV       ?V0,A
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 36)
        MOV       ?V0,#0x0
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 37)
        MOV       ?V0,#0x1
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 38)
        MOV       ?V0,#0xe
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 39)
        MOV       R4,#0x1
        MOV       R5,#0x1
        MOV       A,R7
        MOV       R1,A
        LCALL     `??zcl_SendCommand::?relay`; Banked call to: zcl_SendCommand
        MOV       A,#0xb
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 28)
        MOV       A,#0xb
          CFI EndBlock cfiBlock858
        REQUIRE ?Subroutine5
        ; // Fall through to label ?Subroutine5
// 2562 }

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine5:
          CFI Block cfiBlock859 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 28)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI Invalid
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 17)
          CFI Valid
        MOV       R7,#0x9
        LJMP      ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock859
// 2563 
// 2564 /*********************************************************************
// 2565  * @fn      zclClosures_SendDoorLockSetHolidayScheduleRequest
// 2566  *
// 2567  * @brief   Call to send out a Set Holiday Schedule Command
// 2568  *
// 2569  * @param   srcEP - Sending application's endpoint
// 2570  * @param   dstAddr - where you want the message to go
// 2571  * @param   holidayScheduleID - A unique ID for given Holiday Schedule (0 to 254)
// 2572  * @param   zigBeeLocalStartTime - Start time of the Year Day Schedule representing by ZigBeeLocalTime
// 2573  * @param   zigBeeLocalEndTime - End time of the Year Day Schedule representing by ZigBeeLocalTime
// 2574  * @param   operatingModeDuringHoliday - A valid enumeration value as listed in operating mode attribute
// 2575  * @param   disableDefaultRsp - decides default response is necessary or not
// 2576  * @param   seqNum - sequence number of the command packet
// 2577  *
// 2578  * @return  ZStatus_t
// 2579  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2580 ZStatus_t zclClosures_SendDoorLockSetHolidayScheduleRequest( uint8 srcEP, afAddrType_t *dstAddr,
zclClosures_SendDoorLockSetHolidayScheduleRequest:
          CFI Block cfiBlock860 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockSetHolidayScheduleRequest
        CODE
// 2581                                                              uint8 holidayScheduleID,
// 2582                                                              uint32 zigBeeLocalStartTime,
// 2583                                                              uint32 zigBeeLocalEndTime,
// 2584                                                              uint8 operatingModeDuringHoliday,
// 2585                                                              uint8 disableDefaultRsp, uint8 seqNum )
// 2586 {
        FUNCALL zclClosures_SendDoorLockSetHolidayScheduleRequest, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 38, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 38, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        MOV       A,#-0x11
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 17)
        ; Saved register size: 17
        ; Auto size: 10
        MOV       A,#-0xa
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 27)
        MOV       ?V8,R1
        MOV       A,R4
// 2587   uint8 payload[PAYLOAD_LEN_SET_HOLIDAY_SCHEDULE];
// 2588 
// 2589   payload[0] = holidayScheduleID;
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOVX      @DPTR,A
        MOV       A,#0x1b
        LCALL     ?XSTACK_DISP0_8
        MOV       R0,#?V0
        LCALL     ?L_MOV_X
// 2590   payload[1] = BREAK_UINT32(zigBeeLocalStartTime, 0);
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP0_8
        MOV       A,?V0
        MOVX      @DPTR,A
// 2591   payload[2] = BREAK_UINT32(zigBeeLocalStartTime, 1);
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine59 & 0xFFFF
// 2592   payload[3] = BREAK_UINT32(zigBeeLocalStartTime, 2);
??CrossCallReturnLabel_138:
        LCALL     ?UL_SHR
        MOV       A,#0x3
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine76 & 0xFFFF
// 2593   payload[4] = BREAK_UINT32(zigBeeLocalStartTime, 3);
??CrossCallReturnLabel_181:
        LCALL     ?UL_SHR
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP0_8
        MOV       A,?V0
        MOVX      @DPTR,A
        MOV       A,#0x1f
        LCALL     ?XSTACK_DISP0_8
        MOV       R0,#?V0
        LCALL     ?L_MOV_X
// 2594   payload[5] = BREAK_UINT32(zigBeeLocalEndTime, 0);
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP0_8
        MOV       A,?V0
        MOVX      @DPTR,A
// 2595   payload[6] = BREAK_UINT32(zigBeeLocalEndTime, 1);
        MOV       A,#0x6
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine59 & 0xFFFF
// 2596   payload[7] = BREAK_UINT32(zigBeeLocalEndTime, 2);
??CrossCallReturnLabel_139:
        LCALL     ?UL_SHR
        MOV       A,#0x7
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine76 & 0xFFFF
// 2597   payload[8] = BREAK_UINT32(zigBeeLocalEndTime, 3);
??CrossCallReturnLabel_182:
        LCALL     ?UL_SHR
        MOV       A,#0x8
        LCALL     ?XSTACK_DISP0_8
        MOV       A,?V0
        MOVX      @DPTR,A
// 2598   payload[9] = operatingModeDuringHoliday;
        MOV       A,#0x9
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine57 & 0xFFFF
// 2599 
// 2600   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_CLOSURES_DOOR_LOCK,
// 2601                           COMMAND_CLOSURES_SET_HOLIDAY_SCHEDULE, TRUE, ZCL_FRAME_CLIENT_SERVER_DIR,
// 2602                           disableDefaultRsp, 0, seqNum, PAYLOAD_LEN_SET_HOLIDAY_SCHEDULE, payload );
??CrossCallReturnLabel_450:
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 29)
        MOV       ?V0,#0xa
        MOV       ?V1,#0x0
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 31)
        MOV       A,#0x28
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine18 & 0xFFFF
??CrossCallReturnLabel_23:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 32)
        CLR       A
        MOV       ?V0,A
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 34)
        MOV       A,#0x2a
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine18 & 0xFFFF
??CrossCallReturnLabel_24:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 35)
        MOV       ?V0,#0x0
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 36)
        MOV       ?V0,#0x1
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 37)
        MOV       ?V0,#0x11
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 38)
        MOV       R4,#0x1
        MOV       R5,#0x1
        MOV       R1,?V8
        LCALL     `??zcl_SendCommand::?relay`; Banked call to: zcl_SendCommand
        MOV       A,#0xb
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 27)
        MOV       A,#0xa
        LJMP      ?Subroutine5 & 0xFFFF
// 2603 }
          CFI EndBlock cfiBlock860

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine76:
          CFI Block cfiCond861 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockSetYearDayScheduleRequest
          CFI Conditional ??CrossCallReturnLabel_179
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond862 Using cfiCommon0
          CFI (cfiCond862) Function zclClosures_SendDoorLockSetYearDayScheduleRequest
          CFI (cfiCond862) Conditional ??CrossCallReturnLabel_180
          CFI (cfiCond862) R6 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond862) VB load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond862) V0 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond862) V1 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond862) V2 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond862) V3 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond862) V4 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond862) V5 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond862) V6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond862) V7 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond862) V8 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond862) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond862) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond862) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond862) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond862) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond862) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond862) CFA_SP SP+-2
          CFI (cfiCond862) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond863 Using cfiCommon0
          CFI (cfiCond863) Function zclClosures_SendDoorLockSetHolidayScheduleRequest
          CFI (cfiCond863) Conditional ??CrossCallReturnLabel_181
          CFI (cfiCond863) R6 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond863) VB load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond863) V0 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond863) V1 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond863) V2 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond863) V3 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond863) V4 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond863) V5 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond863) V6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond863) V7 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond863) V8 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond863) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond863) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond863) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond863) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond863) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond863) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond863) CFA_SP SP+-2
          CFI (cfiCond863) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond864 Using cfiCommon0
          CFI (cfiCond864) Function zclClosures_SendDoorLockSetHolidayScheduleRequest
          CFI (cfiCond864) Conditional ??CrossCallReturnLabel_182
          CFI (cfiCond864) R6 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond864) VB load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond864) V0 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond864) V1 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond864) V2 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond864) V3 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond864) V4 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond864) V5 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond864) V6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond864) V7 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond864) V8 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond864) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond864) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond864) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond864) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond864) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond864) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond864) CFA_SP SP+-2
          CFI (cfiCond864) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiPicker865 Using cfiCommon1
          CFI (cfiPicker865) NoFunction
          CFI (cfiPicker865) Picker
        MOV       A,?V4
        MOVX      @DPTR,A
        MOV       A,#0x18
        MOV       R0,#?V0
        RET
          CFI EndBlock cfiCond861
          CFI EndBlock cfiCond862
          CFI EndBlock cfiCond863
          CFI EndBlock cfiCond864
          CFI EndBlock cfiPicker865

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine59:
          CFI Block cfiCond866 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockSetYearDayScheduleRequest
          CFI Conditional ??CrossCallReturnLabel_136
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond867 Using cfiCommon0
          CFI (cfiCond867) Function zclClosures_SendDoorLockSetYearDayScheduleRequest
          CFI (cfiCond867) Conditional ??CrossCallReturnLabel_137
          CFI (cfiCond867) R6 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond867) VB load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond867) V0 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond867) V1 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond867) V2 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond867) V3 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond867) V4 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond867) V5 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond867) V6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond867) V7 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond867) V8 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond867) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond867) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond867) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond867) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond867) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond867) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond867) CFA_SP SP+-2
          CFI (cfiCond867) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond868 Using cfiCommon0
          CFI (cfiCond868) Function zclClosures_SendDoorLockSetHolidayScheduleRequest
          CFI (cfiCond868) Conditional ??CrossCallReturnLabel_138
          CFI (cfiCond868) R6 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond868) VB load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond868) V0 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond868) V1 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond868) V2 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond868) V3 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond868) V4 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond868) V5 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond868) V6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond868) V7 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond868) V8 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond868) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond868) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond868) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond868) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond868) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond868) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond868) CFA_SP SP+-2
          CFI (cfiCond868) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond869 Using cfiCommon0
          CFI (cfiCond869) Function zclClosures_SendDoorLockSetHolidayScheduleRequest
          CFI (cfiCond869) Conditional ??CrossCallReturnLabel_139
          CFI (cfiCond869) R6 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond869) VB load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond869) V0 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond869) V1 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond869) V2 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond869) V3 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond869) V4 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond869) V5 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond869) V6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond869) V7 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond869) V8 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond869) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond869) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond869) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond869) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond869) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond869) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond869) CFA_SP SP+-2
          CFI (cfiCond869) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiPicker870 Using cfiCommon1
          CFI (cfiPicker870) NoFunction
          CFI (cfiPicker870) Picker
        MOV       A,?V1
        MOVX      @DPTR,A
        MOV       ?V4,?V0
        MOV       ?V5,A
        MOV       ?V6,?V2
        MOV       ?V7,?V3
        MOV       A,#0x10
        MOV       R0,#?V4
        RET
          CFI EndBlock cfiCond866
          CFI EndBlock cfiCond867
          CFI EndBlock cfiCond868
          CFI EndBlock cfiCond869
          CFI EndBlock cfiPicker870
// 2604 
// 2605 /*********************************************************************
// 2606  * @fn      zclClosures_SendDoorLockHolidayScheduleRequest
// 2607  *
// 2608  * @brief   Call to send out a Holiday Schedule Command
// 2609  *
// 2610  * @param   srcEP - Sending application's endpoint
// 2611  * @param   dstAddr - where you want the message to go
// 2612  * @param   cmd - COMMAND_CLOSURES_GET_HOLIDAY_SCHEDULE, COMMAND_CLOSURES_CLEAR_HOLIDAY_SCHEDULE
// 2613  * @param   holidayScheduleID - A unique ID for given Holiday Schedule (0 to 254)
// 2614  * @param   disableDefaultRsp - decides default response is necessary or not
// 2615  * @param   seqNum - sequence number of the command packet
// 2616  *
// 2617  * @return  ZStatus_t
// 2618  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2619 ZStatus_t zclClosures_SendDoorLockHolidayScheduleRequest( uint8 srcEP, afAddrType_t *dstAddr, uint8 cmd,
zclClosures_SendDoorLockHolidayScheduleRequest:
          CFI Block cfiBlock871 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockHolidayScheduleRequest
        CODE
// 2620                                                           uint8 holidayScheduleID,
// 2621                                                           uint8 disableDefaultRsp, uint8 seqNum )
// 2622 {
        FUNCALL zclClosures_SendDoorLockHolidayScheduleRequest, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 24, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        MOV       A,#-0xc
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 1
        MOV       A,#-0x1
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 13)
        LCALL     ?Subroutine60 & 0xFFFF
// 2623   uint8 payload[PAYLOAD_LEN_HOLIDAY_SCHEDULE];
// 2624 
// 2625   payload[0] = holidayScheduleID;
// 2626 
// 2627   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_CLOSURES_DOOR_LOCK,
// 2628                           cmd, TRUE, ZCL_FRAME_CLIENT_SERVER_DIR,
// 2629                           disableDefaultRsp, 0, seqNum, PAYLOAD_LEN_HOLIDAY_SCHEDULE, payload );
??CrossCallReturnLabel_407:
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 15)
        MOV       ?V2,#0x1
        MOV       ?V3,#0x0
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 17)
        MOV       A,#0x12
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine32 & 0xFFFF
??CrossCallReturnLabel_75:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 18)
        CLR       A
        MOV       ?V2,A
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 20)
        MOV       A,#0x14
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine32 & 0xFFFF
??CrossCallReturnLabel_76:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 21)
        MOV       ?V1,#0x0
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 22)
        MOV       ?V1,#0x1
        LJMP      ?Subroutine0 & 0xFFFF
          CFI EndBlock cfiBlock871
// 2630 }
// 2631 
// 2632 /*********************************************************************
// 2633  * @fn      zclClosures_SendDoorLockSetUserTypeRequest
// 2634  *
// 2635  * @brief   Call to send out a Set User Type Command
// 2636  *
// 2637  * @param   srcEP - Sending application's endpoint
// 2638  * @param   dstAddr - where you want the message to go
// 2639  * @param   userID - User ID is between 0 - [# PINs User supported attribute]
// 2640  * @param   userType - Used to indicate what the type is for a specific User ID
// 2641  * @param   disableDefaultRsp - decides default response is necessary or not
// 2642  * @param   seqNum - sequence number of the command packet
// 2643  *
// 2644  * @return  ZStatus_t
// 2645  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2646 ZStatus_t zclClosures_SendDoorLockSetUserTypeRequest( uint8 srcEP, afAddrType_t *dstAddr,
zclClosures_SendDoorLockSetUserTypeRequest:
          CFI Block cfiBlock872 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockSetUserTypeRequest
        CODE
// 2647                                                       uint16 userID, uint8 userType,
// 2648                                                       uint8 disableDefaultRsp, uint8 seqNum )
// 2649 {
        FUNCALL zclClosures_SendDoorLockSetUserTypeRequest, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 24, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV       A,#-0xa
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 3
        MOV       A,#-0x3
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 13)
        MOV       A,R1
        MOV       R6,A
// 2650   uint8 payload[PAYLOAD_LEN_SET_USER_TYPE];
// 2651 
// 2652   payload[0] = LO_UINT16(userID);
        MOV       A,R4
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOVX      @DPTR,A
// 2653   payload[1] = HI_UINT16(userID);
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP0_8
        MOV       A,R5
        MOVX      @DPTR,A
// 2654   payload[2] = userType;
        MOV       A,#0xd
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        LCALL     ??Subroutine173_0 & 0xFFFF
// 2655 
// 2656   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_CLOSURES_DOOR_LOCK,
// 2657                           COMMAND_CLOSURES_SET_USER_TYPE, TRUE, ZCL_FRAME_CLIENT_SERVER_DIR,
// 2658                           disableDefaultRsp, 0, seqNum, PAYLOAD_LEN_SET_USER_TYPE, payload );
??CrossCallReturnLabel_453:
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 15)
        MOV       ?V0,#0x3
        MOV       ?V1,#0x0
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 17)
        MOV       A,#0x13
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine18 & 0xFFFF
??CrossCallReturnLabel_25:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 18)
        CLR       A
        MOV       ?V0,A
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 20)
        MOV       A,#0x15
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine18 & 0xFFFF
??CrossCallReturnLabel_26:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 21)
        MOV       ?V0,#0x0
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 22)
        MOV       ?V0,#0x1
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 23)
        MOV       ?V0,#0x14
        LJMP      ?Subroutine1 & 0xFFFF
// 2659 }
          CFI EndBlock cfiBlock872
// 2660 
// 2661 /*********************************************************************
// 2662  * @fn      zclClosures_SendDoorLockSetRFIDCodeRequest
// 2663  *
// 2664  * @brief   Call to send out a Set RFID Code Command
// 2665  *
// 2666  * @param   srcEP - Sending application's endpoint
// 2667  * @param   dstAddr - where you want the message to go
// 2668  * @param   pPayload:
// 2669  *           userID - User ID is between 0 - [# PINs User supported attribute]
// 2670  *           userStatus - Used to indicate what the status is for a specific User ID
// 2671  *           userType - Used to indicate what the type is for a specific User ID
// 2672  *           aRfidCode - A ZigBee string indicating the RFID code used to create the event
// 2673  * @param   disableDefaultRsp - decides default response is necessary or not
// 2674  * @param   seqNum - sequence number of the command packet
// 2675  *
// 2676  * @return  ZStatus_t
// 2677  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2678 ZStatus_t zclClosures_SendDoorLockSetRFIDCodeRequest( uint8 srcEP, afAddrType_t *dstAddr,
zclClosures_SendDoorLockSetRFIDCodeRequest:
          CFI Block cfiBlock873 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockSetRFIDCodeRequest
        CODE
// 2679                                                       zclDoorLockSetRFIDCode_t *pPayload,
// 2680                                                       uint8 disableDefaultRsp, uint8 seqNum )
// 2681 {
        FUNCALL zclClosures_SendDoorLockSetRFIDCodeRequest, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclClosures_SendDoorLockSetRFIDCodeRequest, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 32, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 32, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclClosures_SendDoorLockSetRFIDCodeRequest, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        REQUIRE ?V10
        REQUIRE ?V11
        MOV       A,#-0x14
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 20)
        ; Saved register size: 20
        ; Auto size: 1
        MOV       A,#-0x1
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 21)
        LCALL     ?Subroutine12 & 0xFFFF
// 2682   uint8 i;
// 2683   uint8 *pBuf;  // variable length payload
// 2684   uint8 offset;
// 2685   uint8 calculatedArrayLen;
// 2686   uint8 calculatedBufSize;
// 2687   ZStatus_t status;
// 2688 
// 2689   // first octet of PIN/RFID Code variable string identifies its length
// 2690   calculatedArrayLen = pPayload->pRfidCode[0] + 1;   // add first byte of string
// 2691 
// 2692   // determine the total buffer size
// 2693   calculatedBufSize = calculatedArrayLen + PAYLOAD_LEN_SET_RFID_CODE;
// 2694 
// 2695   pBuf = zcl_mem_alloc( calculatedBufSize );
??CrossCallReturnLabel_9:
        LCALL     `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV       ?V6,R2
        MOV       ?V7,R3
// 2696   if ( !pBuf )
        MOV       A,R2
        ORL       A,?V7
        JNZ       ??zclClosures_SendDoorLockSetRFIDCodeRequest_0
// 2697   {
// 2698     return ( ZMemError );  // no memory
        MOV       R1,#0x10
        SJMP      ??zclClosures_SendDoorLockSetRFIDCodeRequest_1
// 2699   }
// 2700 
// 2701   // over-the-air is always little endian. Break into a byte stream.
// 2702   pBuf[0] = LO_UINT16(pPayload->userID);
??zclClosures_SendDoorLockSetRFIDCodeRequest_0:
        LCALL     ?Subroutine9 & 0xFFFF
// 2703   pBuf[1] = HI_UINT16(pPayload->userID);
// 2704   pBuf[2] = pPayload->userStatus;
// 2705   pBuf[3] = pPayload->userType;
// 2706   offset = 4;
// 2707   for ( i = 0; i < calculatedArrayLen; i++ )
??CrossCallReturnLabel_1:
        SJMP      ??zclClosures_SendDoorLockSetRFIDCodeRequest_2
// 2708   {
// 2709     pBuf[offset++] = pPayload->pRfidCode[i];
??zclClosures_SendDoorLockSetRFIDCodeRequest_3:
        LCALL     ?Subroutine10 & 0xFFFF
// 2710   }
??CrossCallReturnLabel_430:
        PUSH      A
          CFI CFA_SP SP+-1
        LCALL     ?Subroutine86 & 0xFFFF
??CrossCallReturnLabel_205:
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
        INC       R1
        INC       R0
??zclClosures_SendDoorLockSetRFIDCodeRequest_2:
        MOV       A,R0
        CLR       C
        SUBB      A,?V3
        JC        ??zclClosures_SendDoorLockSetRFIDCodeRequest_3
// 2711 
// 2712   status = zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_CLOSURES_DOOR_LOCK,
// 2713                             COMMAND_CLOSURES_SET_RFID_CODE, TRUE, ZCL_FRAME_CLIENT_SERVER_DIR,
// 2714                             disableDefaultRsp, 0, seqNum, calculatedBufSize, pBuf );
        ; Setup parameters for call to function zcl_SendCommand
        MOV       R0,#?V6
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 23)
        MOV       R0,#?V8
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 25)
        MOV       A,#0x1a
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine18 & 0xFFFF
??CrossCallReturnLabel_27:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 26)
        CLR       A
        MOV       ?V0,A
        MOV       ?V1,A
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 28)
        MOV       A,#0x1c
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine18 & 0xFFFF
??CrossCallReturnLabel_28:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 29)
        MOV       ?V0,#0x0
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 30)
        MOV       ?V0,#0x1
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 31)
        MOV       ?V0,#0x16
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 32)
        MOV       R4,#0x1
        MOV       R5,#0x1
        MOV       A,R6
        MOV       R2,A
        MOV       A,R7
        MOV       R3,A
        MOV       R1,?V2
        LCALL     `??zcl_SendCommand::?relay`; Banked call to: zcl_SendCommand
        MOV       A,#0xb
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 21)
        MOV       A,R1
        MOV       R6,A
// 2715   zcl_mem_free( pBuf );
        ; Setup parameters for call to function osal_mem_free
        MOV       R2,?V6
        MOV       R3,?V7
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
// 2716   return status;
        MOV       A,R6
        MOV       R1,A
??zclClosures_SendDoorLockSetRFIDCodeRequest_1:
        LJMP      ?Subroutine4 & 0xFFFF
// 2717 }
          CFI EndBlock cfiBlock873

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine86:
          CFI Block cfiCond874 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockUnlockTimeoutRequest
          CFI Conditional ??CrossCallReturnLabel_203
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond875 Using cfiCommon0
          CFI (cfiCond875) Function zclClosures_SendDoorLockSetPINCodeRequest
          CFI (cfiCond875) Conditional ??CrossCallReturnLabel_204
          CFI (cfiCond875) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond875) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond875) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond875) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond875) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond875) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond875) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond875) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond875) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond875) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond875) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond875) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond875) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond875) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond875) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond875) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond875) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond875) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond875) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond875) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond875) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond876 Using cfiCommon0
          CFI (cfiCond876) Function zclClosures_SendDoorLockSetRFIDCodeRequest
          CFI (cfiCond876) Conditional ??CrossCallReturnLabel_205
          CFI (cfiCond876) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond876) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond876) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond876) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond876) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond876) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond876) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond876) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond876) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond876) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond876) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond876) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond876) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond876) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond876) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond876) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond876) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond876) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond876) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond876) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond876) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond877 Using cfiCommon0
          CFI (cfiCond877) Function zclClosures_SendDoorLockGetPINCodeResponse
          CFI (cfiCond877) Conditional ??CrossCallReturnLabel_206
          CFI (cfiCond877) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond877) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond877) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond877) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond877) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond877) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond877) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond877) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond877) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond877) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond877) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond877) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond877) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond877) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond877) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond877) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond877) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond877) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond877) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond877) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond877) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond878 Using cfiCommon0
          CFI (cfiCond878) Function zclClosures_SendDoorLockGetRFIDCodeResponse
          CFI (cfiCond878) Conditional ??CrossCallReturnLabel_207
          CFI (cfiCond878) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond878) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond878) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond878) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond878) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond878) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond878) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond878) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond878) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond878) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond878) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond878) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond878) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond878) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond878) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond878) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond878) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond878) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond878) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond878) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond878) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker879 Using cfiCommon1
          CFI (cfiPicker879) NoFunction
          CFI (cfiPicker879) Picker
        MOV       A,R1
        MOV       R2,A
        MOV       A,?V6
        ADD       A,R2
        MOV       DPL,A
        CLR       A
        ADDC      A,R3
        MOV       DPH,A
        RET
          CFI EndBlock cfiCond874
          CFI EndBlock cfiCond875
          CFI EndBlock cfiCond876
          CFI EndBlock cfiCond877
          CFI EndBlock cfiCond878
          CFI EndBlock cfiPicker879

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine18:
          CFI Block cfiCond880 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockUnlockTimeoutRequest
          CFI Conditional ??CrossCallReturnLabel_14
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond881 Using cfiCommon0
          CFI (cfiCond881) Function zclClosures_SendDoorLockUnlockTimeoutRequest
          CFI (cfiCond881) Conditional ??CrossCallReturnLabel_15
          CFI (cfiCond881) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond881) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond881) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond881) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond881) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond881) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond881) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond881) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond881) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond881) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond881) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond881) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond881) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond881) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond881) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond881) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond881) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond881) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond881) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond881) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond881) CFA_SP SP+-2
          CFI (cfiCond881) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond882 Using cfiCommon0
          CFI (cfiCond882) Function zclClosures_SendDoorLockGetLogRecordRequest
          CFI (cfiCond882) Conditional ??CrossCallReturnLabel_16
          CFI (cfiCond882) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond882) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond882) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond882) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond882) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond882) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond882) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond882) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond882) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond882) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond882) CFA_SP SP+-2
          CFI (cfiCond882) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond883 Using cfiCommon0
          CFI (cfiCond883) Function zclClosures_SendDoorLockGetLogRecordRequest
          CFI (cfiCond883) Conditional ??CrossCallReturnLabel_17
          CFI (cfiCond883) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond883) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond883) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond883) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond883) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond883) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond883) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond883) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond883) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond883) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond883) CFA_SP SP+-2
          CFI (cfiCond883) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond884 Using cfiCommon0
          CFI (cfiCond884) Function zclClosures_SendDoorLockSetPINCodeRequest
          CFI (cfiCond884) Conditional ??CrossCallReturnLabel_18
          CFI (cfiCond884) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond884) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond884) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond884) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond884) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond884) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond884) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond884) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond884) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond884) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond884) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond884) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond884) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond884) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond884) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond884) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond884) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond884) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond884) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond884) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond884) CFA_SP SP+-2
          CFI (cfiCond884) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond885 Using cfiCommon0
          CFI (cfiCond885) Function zclClosures_SendDoorLockSetPINCodeRequest
          CFI (cfiCond885) Conditional ??CrossCallReturnLabel_19
          CFI (cfiCond885) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond885) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond885) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond885) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond885) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond885) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond885) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond885) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond885) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond885) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond885) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond885) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond885) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond885) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond885) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond885) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond885) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond885) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond885) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond885) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond885) CFA_SP SP+-2
          CFI (cfiCond885) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond886 Using cfiCommon0
          CFI (cfiCond886) Function zclClosures_SendDoorLockSetUserStatusRequest
          CFI (cfiCond886) Conditional ??CrossCallReturnLabel_20
          CFI (cfiCond886) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond886) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond886) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond886) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond886) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond886) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond886) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond886) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond886) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond886) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond886) CFA_SP SP+-2
          CFI (cfiCond886) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond887 Using cfiCommon0
          CFI (cfiCond887) Function zclClosures_SendDoorLockSetUserStatusRequest
          CFI (cfiCond887) Conditional ??CrossCallReturnLabel_21
          CFI (cfiCond887) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond887) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond887) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond887) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond887) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond887) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond887) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond887) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond887) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond887) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond887) CFA_SP SP+-2
          CFI (cfiCond887) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond888 Using cfiCommon0
          CFI (cfiCond888) Function zclClosures_SendDoorLockSetYearDayScheduleRequest
          CFI (cfiCond888) Conditional ??CrossCallReturnLabel_22
          CFI (cfiCond888) R6 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond888) VB load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond888) V0 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond888) V1 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond888) V2 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond888) V3 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond888) V4 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond888) V5 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond888) V6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond888) V7 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond888) V8 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond888) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond888) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond888) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond888) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond888) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond888) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond888) CFA_SP SP+-2
          CFI (cfiCond888) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond889 Using cfiCommon0
          CFI (cfiCond889) Function zclClosures_SendDoorLockSetHolidayScheduleRequest
          CFI (cfiCond889) Conditional ??CrossCallReturnLabel_23
          CFI (cfiCond889) R6 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond889) VB load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond889) V0 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond889) V1 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond889) V2 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond889) V3 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond889) V4 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond889) V5 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond889) V6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond889) V7 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond889) V8 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond889) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond889) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond889) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond889) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond889) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond889) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond889) CFA_SP SP+-2
          CFI (cfiCond889) CFA_XSP16 add(XSP16, 31)
          CFI Block cfiCond890 Using cfiCommon0
          CFI (cfiCond890) Function zclClosures_SendDoorLockSetHolidayScheduleRequest
          CFI (cfiCond890) Conditional ??CrossCallReturnLabel_24
          CFI (cfiCond890) R6 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond890) VB load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond890) V0 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond890) V1 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond890) V2 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond890) V3 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond890) V4 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond890) V5 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond890) V6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond890) V7 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond890) V8 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond890) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond890) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond890) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond890) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond890) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond890) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond890) CFA_SP SP+-2
          CFI (cfiCond890) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond891 Using cfiCommon0
          CFI (cfiCond891) Function zclClosures_SendDoorLockSetUserTypeRequest
          CFI (cfiCond891) Conditional ??CrossCallReturnLabel_25
          CFI (cfiCond891) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond891) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond891) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond891) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond891) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond891) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond891) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond891) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond891) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond891) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond891) CFA_SP SP+-2
          CFI (cfiCond891) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond892 Using cfiCommon0
          CFI (cfiCond892) Function zclClosures_SendDoorLockSetUserTypeRequest
          CFI (cfiCond892) Conditional ??CrossCallReturnLabel_26
          CFI (cfiCond892) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond892) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond892) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond892) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond892) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond892) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond892) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond892) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond892) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond892) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond892) CFA_SP SP+-2
          CFI (cfiCond892) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond893 Using cfiCommon0
          CFI (cfiCond893) Function zclClosures_SendDoorLockSetRFIDCodeRequest
          CFI (cfiCond893) Conditional ??CrossCallReturnLabel_27
          CFI (cfiCond893) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond893) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond893) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond893) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond893) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond893) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond893) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond893) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond893) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond893) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond893) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond893) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond893) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond893) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond893) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond893) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond893) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond893) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond893) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond893) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond893) CFA_SP SP+-2
          CFI (cfiCond893) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond894 Using cfiCommon0
          CFI (cfiCond894) Function zclClosures_SendDoorLockSetRFIDCodeRequest
          CFI (cfiCond894) Conditional ??CrossCallReturnLabel_28
          CFI (cfiCond894) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond894) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond894) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond894) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond894) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond894) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond894) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond894) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond894) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond894) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond894) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond894) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond894) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond894) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond894) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond894) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond894) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond894) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond894) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond894) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond894) CFA_SP SP+-2
          CFI (cfiCond894) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond895 Using cfiCommon0
          CFI (cfiCond895) Function zclClosures_SendDoorLockGetPINCodeResponse
          CFI (cfiCond895) Conditional ??CrossCallReturnLabel_29
          CFI (cfiCond895) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond895) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond895) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond895) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond895) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond895) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond895) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond895) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond895) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond895) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond895) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond895) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond895) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond895) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond895) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond895) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond895) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond895) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond895) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond895) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond895) CFA_SP SP+-2
          CFI (cfiCond895) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond896 Using cfiCommon0
          CFI (cfiCond896) Function zclClosures_SendDoorLockGetPINCodeResponse
          CFI (cfiCond896) Conditional ??CrossCallReturnLabel_30
          CFI (cfiCond896) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond896) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond896) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond896) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond896) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond896) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond896) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond896) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond896) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond896) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond896) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond896) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond896) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond896) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond896) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond896) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond896) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond896) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond896) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond896) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond896) CFA_SP SP+-2
          CFI (cfiCond896) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond897 Using cfiCommon0
          CFI (cfiCond897) Function zclClosures_SendDoorLockGetUserStatusResponse
          CFI (cfiCond897) Conditional ??CrossCallReturnLabel_31
          CFI (cfiCond897) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond897) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond897) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond897) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond897) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond897) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond897) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond897) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond897) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond897) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond897) CFA_SP SP+-2
          CFI (cfiCond897) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond898 Using cfiCommon0
          CFI (cfiCond898) Function zclClosures_SendDoorLockGetUserStatusResponse
          CFI (cfiCond898) Conditional ??CrossCallReturnLabel_32
          CFI (cfiCond898) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond898) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond898) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond898) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond898) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond898) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond898) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond898) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond898) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond898) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond898) CFA_SP SP+-2
          CFI (cfiCond898) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond899 Using cfiCommon0
          CFI (cfiCond899) Function zclClosures_SendDoorLockGetWeekDayScheduleResponse
          CFI (cfiCond899) Conditional ??CrossCallReturnLabel_33
          CFI (cfiCond899) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond899) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond899) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond899) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond899) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond899) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond899) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond899) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond899) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond899) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond899) CFA_SP SP+-2
          CFI (cfiCond899) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond900 Using cfiCommon0
          CFI (cfiCond900) Function zclClosures_SendDoorLockGetWeekDayScheduleResponse
          CFI (cfiCond900) Conditional ??CrossCallReturnLabel_34
          CFI (cfiCond900) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond900) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond900) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond900) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond900) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond900) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond900) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond900) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond900) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond900) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond900) CFA_SP SP+-2
          CFI (cfiCond900) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond901 Using cfiCommon0
          CFI (cfiCond901) Function zclClosures_SendDoorLockGetYearDayScheduleResponse
          CFI (cfiCond901) Conditional ??CrossCallReturnLabel_35
          CFI (cfiCond901) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond901) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond901) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond901) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond901) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond901) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond901) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond901) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond901) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond901) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond901) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond901) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond901) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond901) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond901) CFA_SP SP+-2
          CFI (cfiCond901) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond902 Using cfiCommon0
          CFI (cfiCond902) Function zclClosures_SendDoorLockGetYearDayScheduleResponse
          CFI (cfiCond902) Conditional ??CrossCallReturnLabel_36
          CFI (cfiCond902) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond902) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond902) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond902) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond902) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond902) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond902) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond902) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond902) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond902) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond902) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond902) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond902) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond902) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond902) CFA_SP SP+-2
          CFI (cfiCond902) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond903 Using cfiCommon0
          CFI (cfiCond903) Function zclClosures_SendDoorLockGetHolidayScheduleResponse
          CFI (cfiCond903) Conditional ??CrossCallReturnLabel_37
          CFI (cfiCond903) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond903) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond903) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond903) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond903) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond903) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond903) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond903) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond903) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond903) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond903) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond903) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond903) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond903) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond903) CFA_SP SP+-2
          CFI (cfiCond903) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond904 Using cfiCommon0
          CFI (cfiCond904) Function zclClosures_SendDoorLockGetHolidayScheduleResponse
          CFI (cfiCond904) Conditional ??CrossCallReturnLabel_38
          CFI (cfiCond904) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond904) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond904) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond904) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond904) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond904) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond904) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond904) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond904) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond904) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond904) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond904) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond904) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond904) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond904) CFA_SP SP+-2
          CFI (cfiCond904) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond905 Using cfiCommon0
          CFI (cfiCond905) Function zclClosures_SendDoorLockGetUserTypeResponse
          CFI (cfiCond905) Conditional ??CrossCallReturnLabel_39
          CFI (cfiCond905) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond905) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond905) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond905) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond905) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond905) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond905) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond905) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond905) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond905) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond905) CFA_SP SP+-2
          CFI (cfiCond905) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond906 Using cfiCommon0
          CFI (cfiCond906) Function zclClosures_SendDoorLockGetUserTypeResponse
          CFI (cfiCond906) Conditional ??CrossCallReturnLabel_40
          CFI (cfiCond906) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond906) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond906) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond906) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond906) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond906) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond906) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond906) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond906) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond906) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond906) CFA_SP SP+-2
          CFI (cfiCond906) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond907 Using cfiCommon0
          CFI (cfiCond907) Function zclClosures_SendDoorLockGetRFIDCodeResponse
          CFI (cfiCond907) Conditional ??CrossCallReturnLabel_41
          CFI (cfiCond907) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond907) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond907) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond907) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond907) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond907) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond907) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond907) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond907) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond907) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond907) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond907) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond907) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond907) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond907) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond907) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond907) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond907) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond907) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond907) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond907) CFA_SP SP+-2
          CFI (cfiCond907) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond908 Using cfiCommon0
          CFI (cfiCond908) Function zclClosures_SendDoorLockGetRFIDCodeResponse
          CFI (cfiCond908) Conditional ??CrossCallReturnLabel_42
          CFI (cfiCond908) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond908) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond908) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond908) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond908) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond908) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond908) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond908) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond908) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond908) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond908) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond908) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond908) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond908) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond908) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond908) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond908) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond908) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond908) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond908) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond908) CFA_SP SP+-2
          CFI (cfiCond908) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiPicker909 Using cfiCommon1
          CFI (cfiPicker909) NoFunction
          CFI (cfiPicker909) Picker
        MOVX      A,@DPTR
        MOV       ?V0,A
        MOV       R0,#?V0
        RET
          CFI EndBlock cfiCond880
          CFI EndBlock cfiCond881
          CFI EndBlock cfiCond882
          CFI EndBlock cfiCond883
          CFI EndBlock cfiCond884
          CFI EndBlock cfiCond885
          CFI EndBlock cfiCond886
          CFI EndBlock cfiCond887
          CFI EndBlock cfiCond888
          CFI EndBlock cfiCond889
          CFI EndBlock cfiCond890
          CFI EndBlock cfiCond891
          CFI EndBlock cfiCond892
          CFI EndBlock cfiCond893
          CFI EndBlock cfiCond894
          CFI EndBlock cfiCond895
          CFI EndBlock cfiCond896
          CFI EndBlock cfiCond897
          CFI EndBlock cfiCond898
          CFI EndBlock cfiCond899
          CFI EndBlock cfiCond900
          CFI EndBlock cfiCond901
          CFI EndBlock cfiCond902
          CFI EndBlock cfiCond903
          CFI EndBlock cfiCond904
          CFI EndBlock cfiCond905
          CFI EndBlock cfiCond906
          CFI EndBlock cfiCond907
          CFI EndBlock cfiCond908
          CFI EndBlock cfiPicker909
// 2718 
// 2719 /*********************************************************************
// 2720  * @fn      zclClosures_SendDoorLockStatusResponse
// 2721  *
// 2722  * @brief   Call to send out a Status Response
// 2723  *
// 2724  * @param   srcEP - Sending application's endpoint
// 2725  * @param   dstAddr - where you want the message to go
// 2726  * @param   cmd - COMMAND_CLOSURES_LOCK_DOOR_RSP, COMMAND_CLOSURES_UNLOCK_DOOR_RSP
// 2727  *                COMMAND_CLOSURES_TOGGLE_RSP, COMMAND_CLOSURES_UNLOCK_WITH_TIMEOUT_RSP,
// 2728  *                COMMAND_CLOSURES_SET_PIN_CODE_RSP, COMMAND_CLOSURES_CLEAR_PIN_CODE_RSP,
// 2729  *                COMMAND_CLOSURES_CLEAR_ALL_PIN_CODES_RSP, COMMAND_CLOSURES_SET_USER_STATUS_RSP,
// 2730  *                COMMAND_CLOSURES_SET_WEEK_DAY_SCHEDULE_RSP, COMMAND_CLOSURES_CLEAR_WEEK_DAY_SCHEDULE_RSP,
// 2731  *                COMMAND_CLOSURES_SET_YEAR_DAY_SCHEDULE_RSP, COMMAND_CLOSURES_CLEAR_YEAR_DAY_SCHEDULE_RSP,
// 2732  *                COMMAND_CLOSURES_SET_HOLIDAY_SCHEDULE_RSP, COMMAND_CLOSURES_CLEAR_HOLIDAY_SCHEDULE_RSP,
// 2733  *                COMMAND_CLOSURES_SET_USER_TYPE_RSP, COMMAND_CLOSURES_SET_RFID_CODE_RSP,
// 2734  *                COMMAND_CLOSURES_CLEAR_RFID_CODE_RSP, COMMAND_CLOSURES_CLEAR_ALL_RFID_CODES_RSP
// 2735  * @param   status - Returns the state due to the requesting command
// 2736  * @param   disableDefaultRsp - decides default response is necessary or not
// 2737  * @param   seqNum - sequence number of the command packet
// 2738  *
// 2739  * @return  ZStatus_t
// 2740  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2741 ZStatus_t zclClosures_SendDoorLockStatusResponse( uint8 srcEP, afAddrType_t *dstAddr,uint8 cmd,
zclClosures_SendDoorLockStatusResponse:
          CFI Block cfiBlock910 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockStatusResponse
        CODE
// 2742                                                   uint8 status, uint8 disableDefaultRsp, uint8 seqNum )
// 2743 {
        FUNCALL zclClosures_SendDoorLockStatusResponse, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 24, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        MOV       A,#-0xc
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 1
        MOV       A,#-0x1
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 13)
        LCALL     ?Subroutine60 & 0xFFFF
// 2744   uint8 payload[1];   // 1 byte payload
// 2745 
// 2746   payload[0] = status;
// 2747 
// 2748   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_CLOSURES_DOOR_LOCK,
// 2749                           cmd, TRUE, ZCL_FRAME_SERVER_CLIENT_DIR,
// 2750                           disableDefaultRsp, 0, seqNum, sizeof( payload ), payload );
??CrossCallReturnLabel_408:
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 15)
        MOV       ?V2,#0x1
        MOV       ?V3,#0x0
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 17)
        MOV       A,#0x12
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine32 & 0xFFFF
??CrossCallReturnLabel_77:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 18)
        CLR       A
        MOV       ?V2,A
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 20)
        MOV       A,#0x14
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine32 & 0xFFFF
??CrossCallReturnLabel_78:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 21)
        MOV       ?V1,#0x1
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 22)
        LJMP      ?Subroutine0 & 0xFFFF
          CFI EndBlock cfiBlock910
// 2751 }
// 2752 
// 2753 /*********************************************************************
// 2754  * @fn      zclClosures_SendDoorLockGetLogRecordResponse
// 2755  *
// 2756  * @brief   Call to send out a Get Log Record Response
// 2757  *
// 2758  * @param   srcEP - Sending application's endpoint
// 2759  * @param   dstAddr - where you want the message to go
// 2760  * @param   pPayload:
// 2761  *           logEntryID - The index into the log table where this log entry is stored
// 2762  *           timestamp - A ZigBeeLocalTime used to timestamp all events and alarms on the door lock
// 2763  *           eventType - Indicates the type of event that took place on the door lock
// 2764  *           source - A source value of available sources
// 2765  *           eventIDAlarmCode - A one byte value indicating the type of event that took place on the door lock
// 2766  *           userID - User ID is between 0 - [# PINs User supported attribute]
// 2767  *           aPIN - A ZigBee string indicating the PIN code used to create the event on the door lock
// 2768  * @param   disableDefaultRsp - decides default response is necessary or not
// 2769  * @param   seqNum - sequence number of the command packet
// 2770  *
// 2771  * @return  ZStatus_t
// 2772  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2773 ZStatus_t zclClosures_SendDoorLockGetLogRecordResponse( uint8 srcEP, afAddrType_t *dstAddr,
zclClosures_SendDoorLockGetLogRecordResponse:
          CFI Block cfiBlock911 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockGetLogRecordResponse
        CODE
// 2774                                                         zclDoorLockGetLogRecordRsp_t *pPayload,
// 2775                                                         uint8 disableDefaultRsp, uint8 seqNum )
// 2776 {
        FUNCALL zclClosures_SendDoorLockGetLogRecordResponse, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 23, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 23, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclClosures_SendDoorLockGetLogRecordResponse, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 34, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 34, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclClosures_SendDoorLockGetLogRecordResponse, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 23, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 23, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        REQUIRE ?V10
        REQUIRE ?V11
        REQUIRE ?V12
        REQUIRE ?V13
        MOV       A,#-0x16
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 22)
        ; Saved register size: 22
        ; Auto size: 1
        MOV       A,#-0x1
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 23)
        MOV       ?V11,R1
        MOV       ?V12,R2
        MOV       ?V13,R3
        MOV       A,R4
        MOV       R6,A
        MOV       A,R5
        MOV       R7,A
// 2777   uint8 i;
// 2778   uint8 *pBuf;  // variable length payload
// 2779   uint8 offset;
// 2780   uint8 calculatedArrayLen;
// 2781   uint8 calculatedBufSize;
// 2782   ZStatus_t status;
// 2783 
// 2784   // first octet of PIN/RFID Code variable string identifies its length
// 2785   calculatedArrayLen = pPayload->pPIN[0] + 1;   // add first byte of string
        MOV       A,R6
        ADD       A,#0xb
        MOV       ?V8,A
        CLR       A
        ADDC      A,R7
        MOV       ?V9,A
        MOV       DPL,?V8
        LCALL     ?Subroutine47 & 0xFFFF
??CrossCallReturnLabel_406:
        MOV       ?V10,A
// 2786 
// 2787   // determine the total buffer size
// 2788   calculatedBufSize = calculatedArrayLen + PAYLOAD_LEN_GET_LOG_RECORD_RSP;
        MOV       A,#0xb
        ADD       A,?V10
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOVX      @DPTR,A
// 2789 
// 2790   pBuf = zcl_mem_alloc( calculatedBufSize );
        MOV       ?V2,A
        MOV       ?V3,#0x0
        ; Setup parameters for call to function osal_mem_alloc
        MOV       R2,A
        MOV       R3,?V3
        LCALL     `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV       ?V0,R2
        MOV       ?V1,R3
// 2791   if ( !pBuf )
        MOV       A,R2
        ORL       A,?V1
        JNZ       ??zclClosures_SendDoorLockGetLogRecordResponse_0
// 2792   {
// 2793     return ( ZMemError );  // no memory
        MOV       R1,#0x10
        LJMP      ??zclClosures_SendDoorLockGetLogRecordResponse_1 & 0xFFFF
// 2794   }
// 2795 
// 2796   // over-the-air is always little endian. Break into a byte stream.
// 2797   pBuf[0] = LO_UINT16(pPayload->logEntryID);
??zclClosures_SendDoorLockGetLogRecordResponse_0:
        MOV       DPL,R6
        MOV       DPH,R7
        LCALL     ??Subroutine167_0 & 0xFFFF
??CrossCallReturnLabel_416:
        LCALL     ?Subroutine75 & 0xFFFF
// 2798   pBuf[1] = HI_UINT16(pPayload->logEntryID);
??CrossCallReturnLabel_177:
        LCALL     ?Subroutine56 & 0xFFFF
??CrossCallReturnLabel_418:
        INC       DPTR
        MOVX      @DPTR,A
// 2799   pBuf[2] = BREAK_UINT32(pPayload->timestamp, 0);
        MOV       A,R6
        ADD       A,#0x2
        MOV       R2,A
        CLR       A
        ADDC      A,R7
        MOV       R3,A
        MOV       DPL,R2
        MOV       DPH,R3
        MOV       R0,#?V4
        LCALL     ?L_MOV_X
        MOV       DPL,?V0
        MOV       DPH,?V1
        LCALL     ?Subroutine70 & 0xFFFF
// 2800   pBuf[3] = BREAK_UINT32(pPayload->timestamp, 1);
??CrossCallReturnLabel_412:
        LCALL     ?L_MOV_X
        MOV       A,?V5
        MOV       DPL,?V0
        MOV       DPH,?V1
        INC       DPTR
        INC       DPTR
        INC       DPTR
        LCALL     ??Subroutine166_0 & 0xFFFF
// 2801   pBuf[4] = BREAK_UINT32(pPayload->timestamp, 2);
??CrossCallReturnLabel_414:
        LCALL     ?L_MOV_X
        MOV       A,#0x10
        MOV       R0,#?V4
        LCALL     ?UL_SHR
        MOV       DPL,?V0
        MOV       DPH,?V1
        INC       DPTR
        INC       DPTR
        LCALL     ?Subroutine70 & 0xFFFF
// 2802   pBuf[5] = BREAK_UINT32(pPayload->timestamp, 3);
??CrossCallReturnLabel_413:
        LCALL     ?L_MOV_X
        MOV       A,#0x18
        MOV       R0,#?V4
        LCALL     ?UL_SHR
        MOV       DPL,?V0
        MOV       DPH,?V1
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOV       A,?V4
        LCALL     ?Subroutine74 & 0xFFFF
// 2803   pBuf[6] = pPayload->eventType;
??CrossCallReturnLabel_172:
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        LCALL     ?Subroutine116 & 0xFFFF
??CrossCallReturnLabel_257:
        LCALL     ?Subroutine75 & 0xFFFF
// 2804   pBuf[7] = pPayload->source;
??CrossCallReturnLabel_178:
        LCALL     ?Subroutine43 & 0xFFFF
??CrossCallReturnLabel_102:
        LCALL     ?Subroutine74 & 0xFFFF
// 2805   pBuf[8] = pPayload->eventIDAlarmCode;
??CrossCallReturnLabel_173:
        LCALL     ?Subroutine43 & 0xFFFF
??CrossCallReturnLabel_103:
        INC       DPTR
        MOVX      @DPTR,A
// 2806   pBuf[9] = LO_UINT16(pPayload->userID);
        MOV       A,R6
        ADD       A,#0x9
        MOV       R0,A
        CLR       A
        ADDC      A,R7
        MOV       R1,A
        MOV       DPL,R0
        MOV       DPH,R1
        LCALL     ?Subroutine35 & 0xFFFF
??CrossCallReturnLabel_81:
        LCALL     ?Subroutine123 & 0xFFFF
// 2807   pBuf[10] = HI_UINT16(pPayload->userID);
??CrossCallReturnLabel_343:
        LCALL     ?Subroutine35 & 0xFFFF
??CrossCallReturnLabel_82:
        INC       DPTR
        MOVX      @DPTR,A
// 2808   offset = 11;
        MOV       R1,#0xb
// 2809   for ( i = 0; i < calculatedArrayLen; i++ )
        MOV       R0,#0x0
        SJMP      ??zclClosures_SendDoorLockGetLogRecordResponse_2
// 2810   {
// 2811     pBuf[offset++] = pPayload->pPIN[i];
??zclClosures_SendDoorLockGetLogRecordResponse_3:
        MOV       A,R0
        MOV       R2,A
        MOV       DPL,?V8
        MOV       DPH,?V9
        LCALL     ??Subroutine168_0 & 0xFFFF
// 2812   }
??CrossCallReturnLabel_427:
        PUSH      A
          CFI CFA_SP SP+-1
        LCALL     ?Subroutine87 & 0xFFFF
??CrossCallReturnLabel_208:
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
        INC       R1
        INC       R0
??zclClosures_SendDoorLockGetLogRecordResponse_2:
        MOV       A,R0
        CLR       C
        SUBB      A,?V10
        JC        ??zclClosures_SendDoorLockGetLogRecordResponse_3
// 2813 
// 2814   status = zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_CLOSURES_DOOR_LOCK,
// 2815                             COMMAND_CLOSURES_GET_LOG_RECORD_RSP, TRUE, ZCL_FRAME_SERVER_CLIENT_DIR,
// 2816                             disableDefaultRsp, 0, seqNum, calculatedBufSize, pBuf );
        ; Setup parameters for call to function zcl_SendCommand
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 25)
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 27)
        MOV       A,#0x1c
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine44 & 0xFFFF
??CrossCallReturnLabel_104:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 28)
        CLR       A
        MOV       ?V2,A
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 30)
        MOV       A,#0x1e
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine44 & 0xFFFF
??CrossCallReturnLabel_105:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 31)
        MOV       ?V2,#0x1
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 32)
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 33)
        MOV       ?V2,#0x4
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 34)
        MOV       R4,#0x1
        MOV       R5,#0x1
        MOV       R2,?V12
        MOV       R3,?V13
        MOV       R1,?V11
        LCALL     `??zcl_SendCommand::?relay`; Banked call to: zcl_SendCommand
        MOV       A,#0xb
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 23)
        MOV       A,R1
        MOV       R6,A
// 2817   zcl_mem_free( pBuf );
        ; Setup parameters for call to function osal_mem_free
        MOV       R2,?V0
        MOV       R3,?V1
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
// 2818   return status;
        MOV       A,R6
        MOV       R1,A
??zclClosures_SendDoorLockGetLogRecordResponse_1:
        MOV       A,#0x1
        SJMP      ??Subroutine169_0
// 2819 }
          CFI EndBlock cfiBlock911

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine123:
          CFI Block cfiCond912 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockSetPINCode
          CFI Conditional ??CrossCallReturnLabel_342, ??CrossCallReturnLabel_339, ??CrossCallReturnLabel_4
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-6
          CFI CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond913 Using cfiCommon0
          CFI (cfiCond913) Function zclClosures_ProcessInDoorLockSetRFIDCode
          CFI (cfiCond913) Conditional ??CrossCallReturnLabel_342, ??CrossCallReturnLabel_339, ??CrossCallReturnLabel_5
          CFI (cfiCond913) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond913) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond913) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond913) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond913) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond913) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond913) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond913) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond913) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond913) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond913) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond913) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond913) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond913) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond913) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond913) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond913) CFA_SP SP+-6
          CFI (cfiCond913) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond914 Using cfiCommon0
          CFI (cfiCond914) Function zclClosures_ProcessInDoorLockGetPINCodeRsp
          CFI (cfiCond914) Conditional ??CrossCallReturnLabel_342, ??CrossCallReturnLabel_339, ??CrossCallReturnLabel_6
          CFI (cfiCond914) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond914) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond914) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond914) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond914) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond914) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond914) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond914) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond914) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond914) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond914) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond914) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond914) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond914) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond914) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond914) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond914) CFA_SP SP+-6
          CFI (cfiCond914) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond915 Using cfiCommon0
          CFI (cfiCond915) Function zclClosures_ProcessInDoorLockGetRFIDCodeRsp
          CFI (cfiCond915) Conditional ??CrossCallReturnLabel_342, ??CrossCallReturnLabel_339, ??CrossCallReturnLabel_7
          CFI (cfiCond915) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond915) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond915) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond915) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond915) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond915) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond915) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond915) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond915) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond915) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond915) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond915) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond915) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond915) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond915) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond915) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond915) CFA_SP SP+-6
          CFI (cfiCond915) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond916 Using cfiCommon0
          CFI (cfiCond916) Function zclClosures_ProcessInDoorLockOperationEventNotification
          CFI (cfiCond916) Conditional ??CrossCallReturnLabel_342, ??CrossCallReturnLabel_340, ??CrossCallReturnLabel_148
          CFI (cfiCond916) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond916) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond916) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond916) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond916) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond916) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond916) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond916) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond916) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond916) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond916) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond916) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond916) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond916) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond916) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond916) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond916) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond916) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond916) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond916) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond916) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond916) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond916) CFA_SP SP+-6
          CFI (cfiCond916) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond917 Using cfiCommon0
          CFI (cfiCond917) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond917) Conditional ??CrossCallReturnLabel_342, ??CrossCallReturnLabel_340, ??CrossCallReturnLabel_149
          CFI (cfiCond917) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond917) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond917) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond917) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond917) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond917) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond917) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond917) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond917) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond917) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond917) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond917) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond917) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond917) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond917) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond917) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond917) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond917) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond917) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond917) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond917) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond917) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond917) CFA_SP SP+-6
          CFI (cfiCond917) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond918 Using cfiCommon0
          CFI (cfiCond918) Function zclClosures_RegisterDoorLockCmdCallbacks
          CFI (cfiCond918) Conditional ??CrossCallReturnLabel_342, ??CrossCallReturnLabel_341, ??CrossCallReturnLabel_156
          CFI (cfiCond918) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond918) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond918) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond918) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond918) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond918) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond918) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond918) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond918) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond918) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond918) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond918) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond918) CFA_SP SP+-6
          CFI (cfiCond918) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond919 Using cfiCommon0
          CFI (cfiCond919) Function zclClosures_RegisterDoorLockCmdCallbacks
          CFI (cfiCond919) Conditional ??CrossCallReturnLabel_342, ??CrossCallReturnLabel_341, ??CrossCallReturnLabel_157
          CFI (cfiCond919) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond919) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond919) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond919) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond919) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond919) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond919) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond919) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond919) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond919) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond919) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond919) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond919) CFA_SP SP+-6
          CFI (cfiCond919) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond920 Using cfiCommon0
          CFI (cfiCond920) Function zclClosures_ProcessInDoorLockCmds
          CFI (cfiCond920) Conditional ??CrossCallReturnLabel_342, ??CrossCallReturnLabel_341, ??CrossCallReturnLabel_158
          CFI (cfiCond920) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond920) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond920) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond920) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond920) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond920) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond920) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond920) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond920) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond920) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond920) CFA_SP SP+-6
          CFI (cfiCond920) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond921 Using cfiCommon0
          CFI (cfiCond921) Function zclClosures_SendDoorLockGetLogRecordResponse
          CFI (cfiCond921) Conditional ??CrossCallReturnLabel_343
          CFI (cfiCond921) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond921) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond921) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond921) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond921) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond921) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond921) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond921) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond921) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond921) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond921) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond921) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond921) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond921) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond921) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond921) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond921) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond921) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond921) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond921) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond921) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond921) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond921) CFA_SP SP+-2
          CFI (cfiCond921) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond922 Using cfiCommon0
          CFI (cfiCond922) Function zclClosures_SendDoorLockGetWeekDayScheduleResponse
          CFI (cfiCond922) Conditional ??CrossCallReturnLabel_344
          CFI (cfiCond922) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond922) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond922) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond922) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond922) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond922) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond922) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond922) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond922) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond922) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond922) CFA_SP SP+-2
          CFI (cfiCond922) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiPicker923 Using cfiCommon1
          CFI (cfiPicker923) NoFunction
          CFI (cfiPicker923) Picker
        MOVX      @DPTR,A
        MOV       DPL,R0
        MOV       DPH,R1
        INC       DPTR
        RET
          CFI EndBlock cfiCond912
          CFI EndBlock cfiCond913
          CFI EndBlock cfiCond914
          CFI EndBlock cfiCond915
          CFI EndBlock cfiCond916
          CFI EndBlock cfiCond917
          CFI EndBlock cfiCond918
          CFI EndBlock cfiCond919
          CFI EndBlock cfiCond920
          CFI EndBlock cfiCond921
          CFI EndBlock cfiCond922
          CFI EndBlock cfiPicker923

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine70:
          CFI Block cfiCond924 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockGetLogRecordResponse
          CFI Conditional ??CrossCallReturnLabel_412
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond925 Using cfiCommon0
          CFI (cfiCond925) Function zclClosures_SendDoorLockGetLogRecordResponse
          CFI (cfiCond925) Conditional ??CrossCallReturnLabel_413
          CFI (cfiCond925) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond925) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond925) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond925) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond925) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond925) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond925) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond925) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond925) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond925) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond925) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond925) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond925) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond925) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond925) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond925) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond925) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond925) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond925) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond925) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond925) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond925) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond925) CFA_SP SP+-2
          CFI (cfiCond925) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiPicker926 Using cfiCommon1
          CFI (cfiPicker926) NoFunction
          CFI (cfiPicker926) Picker
        INC       DPTR
        INC       DPTR
        MOV       A,?V4
          CFI EndBlock cfiCond924
          CFI EndBlock cfiCond925
          CFI EndBlock cfiPicker926
        REQUIRE ??Subroutine166_0
        ; // Fall through to label ??Subroutine166_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine166_0:
          CFI Block cfiCond927 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockGetLogRecordResponse
          CFI Conditional ??CrossCallReturnLabel_414
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond928 Using cfiCommon0
          CFI (cfiCond928) Function zclClosures_SendDoorLockGetLogRecordResponse
          CFI (cfiCond928) Conditional ??CrossCallReturnLabel_412
          CFI (cfiCond928) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond928) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond928) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond928) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond928) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond928) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond928) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond928) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond928) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond928) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond928) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond928) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond928) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond928) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond928) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond928) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond928) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond928) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond928) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond928) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond928) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond928) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond928) CFA_SP SP+-2
          CFI (cfiCond928) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond929 Using cfiCommon0
          CFI (cfiCond929) Function zclClosures_SendDoorLockGetLogRecordResponse
          CFI (cfiCond929) Conditional ??CrossCallReturnLabel_413
          CFI (cfiCond929) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond929) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond929) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond929) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond929) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond929) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond929) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond929) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond929) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond929) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond929) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond929) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond929) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond929) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond929) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond929) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond929) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond929) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond929) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond929) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond929) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond929) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond929) CFA_SP SP+-2
          CFI (cfiCond929) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiPicker930 Using cfiCommon1
          CFI (cfiPicker930) NoFunction
          CFI (cfiPicker930) Picker
        MOVX      @DPTR,A
        MOV       DPL,R2
        MOV       DPH,R3
        MOV       R0,#?V4
        RET
          CFI EndBlock cfiCond927
          CFI EndBlock cfiCond928
          CFI EndBlock cfiCond929
          CFI EndBlock cfiPicker930

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine56:
          CFI Block cfiCond931 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockUnlockTimeoutRequest
          CFI Conditional ??CrossCallReturnLabel_417
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond932 Using cfiCommon0
          CFI (cfiCond932) Function zclClosures_SendDoorLockGetLogRecordResponse
          CFI (cfiCond932) Conditional ??CrossCallReturnLabel_418
          CFI (cfiCond932) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond932) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond932) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond932) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond932) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond932) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond932) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond932) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond932) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond932) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond932) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond932) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond932) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond932) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond932) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond932) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond932) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond932) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond932) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond932) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond932) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond932) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond932) CFA_SP SP+-2
          CFI (cfiCond932) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiPicker933 Using cfiCommon1
          CFI (cfiPicker933) NoFunction
          CFI (cfiPicker933) Picker
        INC       DPTR
          CFI EndBlock cfiCond931
          CFI EndBlock cfiCond932
          CFI EndBlock cfiPicker933
        REQUIRE ??Subroutine167_0
        ; // Fall through to label ??Subroutine167_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine167_0:
          CFI Block cfiCond934 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockUnlockTimeoutRequest
          CFI Conditional ??CrossCallReturnLabel_415
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond935 Using cfiCommon0
          CFI (cfiCond935) Function zclClosures_SendDoorLockGetLogRecordResponse
          CFI (cfiCond935) Conditional ??CrossCallReturnLabel_416
          CFI (cfiCond935) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond935) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond935) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond935) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond935) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond935) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond935) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond935) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond935) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond935) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond935) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond935) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond935) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond935) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond935) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond935) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond935) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond935) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond935) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond935) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond935) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond935) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond935) CFA_SP SP+-2
          CFI (cfiCond935) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond936 Using cfiCommon0
          CFI (cfiCond936) Function zclClosures_SendDoorLockUnlockTimeoutRequest
          CFI (cfiCond936) Conditional ??CrossCallReturnLabel_417
          CFI (cfiCond936) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond936) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond936) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond936) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond936) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond936) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond936) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond936) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond936) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond936) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond936) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond936) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond936) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond936) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond936) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond936) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond936) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond936) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond936) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond936) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond936) CFA_SP SP+-2
          CFI (cfiCond936) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond937 Using cfiCommon0
          CFI (cfiCond937) Function zclClosures_SendDoorLockGetLogRecordResponse
          CFI (cfiCond937) Conditional ??CrossCallReturnLabel_418
          CFI (cfiCond937) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond937) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond937) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond937) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond937) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond937) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond937) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond937) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond937) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond937) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond937) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond937) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond937) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond937) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond937) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond937) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond937) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond937) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond937) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond937) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond937) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond937) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond937) CFA_SP SP+-2
          CFI (cfiCond937) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiPicker938 Using cfiCommon1
          CFI (cfiPicker938) NoFunction
          CFI (cfiPicker938) Picker
        LCALL     ??Subroutine172_0 & 0xFFFF
??CrossCallReturnLabel_448:
        RET
          CFI EndBlock cfiCond934
          CFI EndBlock cfiCond935
          CFI EndBlock cfiCond936
          CFI EndBlock cfiCond937
          CFI EndBlock cfiPicker938

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine43:
          CFI Block cfiCond939 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockGetLogRecordResponse
          CFI Conditional ??CrossCallReturnLabel_102
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond940 Using cfiCommon0
          CFI (cfiCond940) Function zclClosures_SendDoorLockGetLogRecordResponse
          CFI (cfiCond940) Conditional ??CrossCallReturnLabel_103
          CFI (cfiCond940) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond940) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond940) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond940) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond940) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond940) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond940) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond940) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond940) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond940) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond940) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond940) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond940) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond940) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond940) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond940) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond940) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond940) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond940) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond940) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond940) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond940) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond940) CFA_SP SP+-2
          CFI (cfiCond940) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiPicker941 Using cfiCommon1
          CFI (cfiPicker941) NoFunction
          CFI (cfiPicker941) Picker
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        LCALL     ?Subroutine90 & 0xFFFF
??CrossCallReturnLabel_214:
        RET
          CFI EndBlock cfiCond939
          CFI EndBlock cfiCond940
          CFI EndBlock cfiPicker941

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine90:
          CFI Block cfiCond942 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockGetLogRecordResponse
          CFI Conditional ??CrossCallReturnLabel_214, ??CrossCallReturnLabel_102
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond943 Using cfiCommon0
          CFI (cfiCond943) Function zclClosures_SendDoorLockGetLogRecordResponse
          CFI (cfiCond943) Conditional ??CrossCallReturnLabel_214, ??CrossCallReturnLabel_103
          CFI (cfiCond943) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond943) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond943) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond943) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond943) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond943) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond943) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond943) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond943) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond943) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond943) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond943) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond943) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond943) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond943) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond943) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond943) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond943) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond943) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond943) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond943) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond943) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond943) CFA_SP SP+-4
          CFI (cfiCond943) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond944 Using cfiCommon0
          CFI (cfiCond944) Function zclClosures_SendDoorLockGetLogRecordResponse
          CFI (cfiCond944) Conditional ??CrossCallReturnLabel_213, ??CrossCallReturnLabel_81
          CFI (cfiCond944) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond944) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond944) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond944) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond944) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond944) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond944) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond944) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond944) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond944) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond944) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond944) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond944) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond944) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond944) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond944) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond944) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond944) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond944) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond944) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond944) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond944) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond944) CFA_SP SP+-4
          CFI (cfiCond944) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond945 Using cfiCommon0
          CFI (cfiCond945) Function zclClosures_SendDoorLockGetLogRecordResponse
          CFI (cfiCond945) Conditional ??CrossCallReturnLabel_213, ??CrossCallReturnLabel_82
          CFI (cfiCond945) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond945) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond945) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond945) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond945) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond945) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond945) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond945) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond945) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond945) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond945) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond945) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond945) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond945) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond945) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond945) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond945) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond945) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond945) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond945) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond945) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond945) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond945) CFA_SP SP+-4
          CFI (cfiCond945) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiPicker946 Using cfiCommon1
          CFI (cfiPicker946) NoFunction
          CFI (cfiPicker946) Picker
        LCALL     ?Subroutine116 & 0xFFFF
??CrossCallReturnLabel_258:
        INC       DPTR
        RET
          CFI EndBlock cfiCond942
          CFI EndBlock cfiCond943
          CFI EndBlock cfiCond944
          CFI EndBlock cfiCond945
          CFI EndBlock cfiPicker946

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine116:
          CFI Block cfiCond947 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockGetLogRecordResponse
          CFI Conditional ??CrossCallReturnLabel_257
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond948 Using cfiCommon0
          CFI (cfiCond948) Function zclClosures_SendDoorLockGetLogRecordResponse
          CFI (cfiCond948) Conditional ??CrossCallReturnLabel_258, ??CrossCallReturnLabel_214, ??CrossCallReturnLabel_102
          CFI (cfiCond948) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond948) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond948) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond948) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond948) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond948) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond948) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond948) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond948) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond948) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond948) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond948) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond948) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond948) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond948) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond948) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond948) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond948) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond948) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond948) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond948) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond948) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond948) CFA_SP SP+-6
          CFI (cfiCond948) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond949 Using cfiCommon0
          CFI (cfiCond949) Function zclClosures_SendDoorLockGetLogRecordResponse
          CFI (cfiCond949) Conditional ??CrossCallReturnLabel_258, ??CrossCallReturnLabel_214, ??CrossCallReturnLabel_103
          CFI (cfiCond949) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond949) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond949) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond949) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond949) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond949) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond949) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond949) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond949) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond949) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond949) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond949) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond949) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond949) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond949) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond949) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond949) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond949) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond949) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond949) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond949) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond949) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond949) CFA_SP SP+-6
          CFI (cfiCond949) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond950 Using cfiCommon0
          CFI (cfiCond950) Function zclClosures_SendDoorLockGetLogRecordResponse
          CFI (cfiCond950) Conditional ??CrossCallReturnLabel_258, ??CrossCallReturnLabel_213, ??CrossCallReturnLabel_81
          CFI (cfiCond950) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond950) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond950) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond950) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond950) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond950) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond950) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond950) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond950) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond950) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond950) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond950) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond950) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond950) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond950) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond950) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond950) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond950) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond950) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond950) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond950) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond950) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond950) CFA_SP SP+-6
          CFI (cfiCond950) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond951 Using cfiCommon0
          CFI (cfiCond951) Function zclClosures_SendDoorLockGetLogRecordResponse
          CFI (cfiCond951) Conditional ??CrossCallReturnLabel_258, ??CrossCallReturnLabel_213, ??CrossCallReturnLabel_82
          CFI (cfiCond951) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond951) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond951) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond951) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond951) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond951) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond951) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond951) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond951) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond951) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond951) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond951) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond951) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond951) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond951) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond951) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond951) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond951) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond951) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond951) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond951) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond951) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond951) CFA_SP SP+-6
          CFI (cfiCond951) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiPicker952 Using cfiCommon1
          CFI (cfiPicker952) NoFunction
          CFI (cfiPicker952) Picker
        MOVX      A,@DPTR
        MOV       DPL,?V0
        MOV       DPH,?V1
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        RET
          CFI EndBlock cfiCond947
          CFI EndBlock cfiCond948
          CFI EndBlock cfiCond949
          CFI EndBlock cfiCond950
          CFI EndBlock cfiCond951
          CFI EndBlock cfiPicker952

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine35:
          CFI Block cfiCond953 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockGetLogRecordResponse
          CFI Conditional ??CrossCallReturnLabel_81
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond954 Using cfiCommon0
          CFI (cfiCond954) Function zclClosures_SendDoorLockGetLogRecordResponse
          CFI (cfiCond954) Conditional ??CrossCallReturnLabel_82
          CFI (cfiCond954) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond954) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond954) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond954) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond954) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond954) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond954) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond954) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond954) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond954) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond954) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond954) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond954) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond954) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond954) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond954) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond954) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond954) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond954) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond954) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond954) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond954) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond954) CFA_SP SP+-2
          CFI (cfiCond954) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiPicker955 Using cfiCommon1
          CFI (cfiPicker955) NoFunction
          CFI (cfiPicker955) Picker
        LCALL     ?Subroutine90 & 0xFFFF
??CrossCallReturnLabel_213:
        INC       DPTR
        INC       DPTR
        RET
          CFI EndBlock cfiCond953
          CFI EndBlock cfiCond954
          CFI EndBlock cfiPicker955

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine10:
          CFI Block cfiCond956 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockUnlockTimeoutRequest
          CFI Conditional ??CrossCallReturnLabel_428
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond957 Using cfiCommon0
          CFI (cfiCond957) Function zclClosures_SendDoorLockSetPINCodeRequest
          CFI (cfiCond957) Conditional ??CrossCallReturnLabel_429
          CFI (cfiCond957) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond957) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond957) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond957) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond957) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond957) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond957) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond957) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond957) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond957) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond957) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond957) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond957) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond957) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond957) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond957) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond957) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond957) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond957) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond957) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond957) CFA_SP SP+-2
          CFI (cfiCond957) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond958 Using cfiCommon0
          CFI (cfiCond958) Function zclClosures_SendDoorLockSetRFIDCodeRequest
          CFI (cfiCond958) Conditional ??CrossCallReturnLabel_430
          CFI (cfiCond958) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond958) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond958) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond958) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond958) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond958) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond958) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond958) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond958) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond958) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond958) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond958) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond958) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond958) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond958) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond958) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond958) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond958) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond958) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond958) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond958) CFA_SP SP+-2
          CFI (cfiCond958) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond959 Using cfiCommon0
          CFI (cfiCond959) Function zclClosures_SendDoorLockGetPINCodeResponse
          CFI (cfiCond959) Conditional ??CrossCallReturnLabel_431
          CFI (cfiCond959) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond959) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond959) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond959) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond959) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond959) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond959) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond959) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond959) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond959) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond959) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond959) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond959) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond959) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond959) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond959) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond959) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond959) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond959) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond959) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond959) CFA_SP SP+-2
          CFI (cfiCond959) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond960 Using cfiCommon0
          CFI (cfiCond960) Function zclClosures_SendDoorLockGetRFIDCodeResponse
          CFI (cfiCond960) Conditional ??CrossCallReturnLabel_432
          CFI (cfiCond960) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond960) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond960) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond960) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond960) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond960) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond960) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond960) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond960) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond960) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond960) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond960) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond960) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond960) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond960) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond960) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond960) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond960) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond960) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond960) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond960) CFA_SP SP+-2
          CFI (cfiCond960) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond961 Using cfiCommon0
          CFI (cfiCond961) Function zclClosures_SendDoorLockOperationEventNotification
          CFI (cfiCond961) Conditional ??CrossCallReturnLabel_433
          CFI (cfiCond961) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond961) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond961) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond961) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond961) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond961) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond961) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond961) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond961) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond961) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond961) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond961) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond961) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond961) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond961) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond961) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond961) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond961) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond961) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond961) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond961) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond961) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond961) CFA_SP SP+-2
          CFI (cfiCond961) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond962 Using cfiCommon0
          CFI (cfiCond962) Function zclClosures_SendDoorLockProgrammingEventNotification
          CFI (cfiCond962) Conditional ??CrossCallReturnLabel_434
          CFI (cfiCond962) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond962) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond962) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond962) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond962) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond962) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond962) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond962) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond962) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond962) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond962) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond962) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond962) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond962) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond962) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond962) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond962) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond962) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond962) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond962) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond962) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond962) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond962) CFA_SP SP+-2
          CFI (cfiCond962) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker963 Using cfiCommon1
          CFI (cfiPicker963) NoFunction
          CFI (cfiPicker963) Picker
        MOV       A,R0
        MOV       R2,A
        MOV       DPL,?V4
        MOV       DPH,?V5
          CFI EndBlock cfiCond956
          CFI EndBlock cfiCond957
          CFI EndBlock cfiCond958
          CFI EndBlock cfiCond959
          CFI EndBlock cfiCond960
          CFI EndBlock cfiCond961
          CFI EndBlock cfiCond962
          CFI EndBlock cfiPicker963
        REQUIRE ??Subroutine168_0
        ; // Fall through to label ??Subroutine168_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine168_0:
          CFI Block cfiCond964 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockUnlockWithTimeout
          CFI Conditional ??CrossCallReturnLabel_419
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond965 Using cfiCommon0
          CFI (cfiCond965) Function zclClosures_ProcessInDoorLockSetPINCode
          CFI (cfiCond965) Conditional ??CrossCallReturnLabel_420
          CFI (cfiCond965) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond965) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond965) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond965) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond965) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond965) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond965) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond965) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond965) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond965) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond965) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond965) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond965) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond965) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond965) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond965) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond965) CFA_SP SP+-2
          CFI (cfiCond965) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond966 Using cfiCommon0
          CFI (cfiCond966) Function zclClosures_ProcessInDoorLockSetRFIDCode
          CFI (cfiCond966) Conditional ??CrossCallReturnLabel_421
          CFI (cfiCond966) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond966) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond966) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond966) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond966) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond966) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond966) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond966) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond966) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond966) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond966) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond966) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond966) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond966) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond966) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond966) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond966) CFA_SP SP+-2
          CFI (cfiCond966) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond967 Using cfiCommon0
          CFI (cfiCond967) Function zclClosures_ProcessInDoorLockGetLogRecordRsp
          CFI (cfiCond967) Conditional ??CrossCallReturnLabel_422
          CFI (cfiCond967) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond967) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond967) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond967) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond967) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond967) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond967) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond967) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond967) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond967) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond967) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond967) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond967) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond967) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond967) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond967) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond967) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond967) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond967) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond967) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond967) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond967) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond967) CFA_SP SP+-2
          CFI (cfiCond967) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond968 Using cfiCommon0
          CFI (cfiCond968) Function zclClosures_ProcessInDoorLockGetPINCodeRsp
          CFI (cfiCond968) Conditional ??CrossCallReturnLabel_423
          CFI (cfiCond968) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond968) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond968) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond968) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond968) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond968) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond968) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond968) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond968) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond968) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond968) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond968) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond968) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond968) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond968) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond968) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond968) CFA_SP SP+-2
          CFI (cfiCond968) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond969 Using cfiCommon0
          CFI (cfiCond969) Function zclClosures_ProcessInDoorLockGetRFIDCodeRsp
          CFI (cfiCond969) Conditional ??CrossCallReturnLabel_424
          CFI (cfiCond969) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond969) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond969) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond969) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond969) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond969) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond969) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond969) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond969) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond969) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond969) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond969) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond969) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond969) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond969) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond969) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond969) CFA_SP SP+-2
          CFI (cfiCond969) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond970 Using cfiCommon0
          CFI (cfiCond970) Function zclClosures_ProcessInDoorLockOperationEventNotification
          CFI (cfiCond970) Conditional ??CrossCallReturnLabel_425
          CFI (cfiCond970) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond970) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond970) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond970) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond970) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond970) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond970) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond970) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond970) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond970) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond970) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond970) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond970) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond970) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond970) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond970) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond970) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond970) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond970) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond970) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond970) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond970) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond970) CFA_SP SP+-2
          CFI (cfiCond970) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond971 Using cfiCommon0
          CFI (cfiCond971) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond971) Conditional ??CrossCallReturnLabel_426
          CFI (cfiCond971) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond971) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond971) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond971) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond971) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond971) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond971) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond971) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond971) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond971) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond971) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond971) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond971) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond971) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond971) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond971) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond971) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond971) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond971) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond971) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond971) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond971) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond971) CFA_SP SP+-2
          CFI (cfiCond971) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond972 Using cfiCommon0
          CFI (cfiCond972) Function zclClosures_SendDoorLockGetLogRecordResponse
          CFI (cfiCond972) Conditional ??CrossCallReturnLabel_427
          CFI (cfiCond972) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond972) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond972) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond972) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond972) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond972) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond972) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond972) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond972) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond972) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond972) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond972) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond972) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond972) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond972) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond972) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond972) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond972) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond972) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond972) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond972) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond972) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond972) CFA_SP SP+-2
          CFI (cfiCond972) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond973 Using cfiCommon0
          CFI (cfiCond973) Function zclClosures_SendDoorLockUnlockTimeoutRequest
          CFI (cfiCond973) Conditional ??CrossCallReturnLabel_428
          CFI (cfiCond973) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond973) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond973) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond973) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond973) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond973) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond973) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond973) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond973) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond973) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond973) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond973) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond973) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond973) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond973) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond973) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond973) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond973) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond973) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond973) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond973) CFA_SP SP+-2
          CFI (cfiCond973) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond974 Using cfiCommon0
          CFI (cfiCond974) Function zclClosures_SendDoorLockSetPINCodeRequest
          CFI (cfiCond974) Conditional ??CrossCallReturnLabel_429
          CFI (cfiCond974) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond974) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond974) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond974) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond974) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond974) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond974) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond974) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond974) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond974) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond974) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond974) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond974) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond974) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond974) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond974) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond974) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond974) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond974) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond974) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond974) CFA_SP SP+-2
          CFI (cfiCond974) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond975 Using cfiCommon0
          CFI (cfiCond975) Function zclClosures_SendDoorLockSetRFIDCodeRequest
          CFI (cfiCond975) Conditional ??CrossCallReturnLabel_430
          CFI (cfiCond975) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond975) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond975) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond975) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond975) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond975) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond975) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond975) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond975) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond975) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond975) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond975) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond975) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond975) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond975) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond975) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond975) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond975) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond975) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond975) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond975) CFA_SP SP+-2
          CFI (cfiCond975) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond976 Using cfiCommon0
          CFI (cfiCond976) Function zclClosures_SendDoorLockGetPINCodeResponse
          CFI (cfiCond976) Conditional ??CrossCallReturnLabel_431
          CFI (cfiCond976) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond976) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond976) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond976) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond976) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond976) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond976) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond976) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond976) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond976) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond976) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond976) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond976) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond976) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond976) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond976) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond976) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond976) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond976) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond976) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond976) CFA_SP SP+-2
          CFI (cfiCond976) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond977 Using cfiCommon0
          CFI (cfiCond977) Function zclClosures_SendDoorLockGetRFIDCodeResponse
          CFI (cfiCond977) Conditional ??CrossCallReturnLabel_432
          CFI (cfiCond977) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond977) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond977) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond977) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond977) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond977) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond977) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond977) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond977) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond977) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond977) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond977) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond977) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond977) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond977) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond977) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond977) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond977) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond977) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond977) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond977) CFA_SP SP+-2
          CFI (cfiCond977) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond978 Using cfiCommon0
          CFI (cfiCond978) Function zclClosures_SendDoorLockOperationEventNotification
          CFI (cfiCond978) Conditional ??CrossCallReturnLabel_433
          CFI (cfiCond978) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond978) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond978) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond978) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond978) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond978) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond978) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond978) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond978) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond978) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond978) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond978) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond978) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond978) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond978) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond978) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond978) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond978) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond978) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond978) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond978) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond978) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond978) CFA_SP SP+-2
          CFI (cfiCond978) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond979 Using cfiCommon0
          CFI (cfiCond979) Function zclClosures_SendDoorLockProgrammingEventNotification
          CFI (cfiCond979) Conditional ??CrossCallReturnLabel_434
          CFI (cfiCond979) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond979) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond979) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond979) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond979) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond979) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond979) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond979) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond979) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond979) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond979) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond979) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond979) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond979) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond979) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond979) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond979) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond979) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond979) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond979) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond979) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond979) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond979) CFA_SP SP+-2
          CFI (cfiCond979) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker980 Using cfiCommon1
          CFI (cfiPicker980) NoFunction
          CFI (cfiPicker980) Picker
        LCALL     ?Subroutine96 & 0xFFFF
??CrossCallReturnLabel_436:
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond964
          CFI EndBlock cfiCond965
          CFI EndBlock cfiCond966
          CFI EndBlock cfiCond967
          CFI EndBlock cfiCond968
          CFI EndBlock cfiCond969
          CFI EndBlock cfiCond970
          CFI EndBlock cfiCond971
          CFI EndBlock cfiCond972
          CFI EndBlock cfiCond973
          CFI EndBlock cfiCond974
          CFI EndBlock cfiCond975
          CFI EndBlock cfiCond976
          CFI EndBlock cfiCond977
          CFI EndBlock cfiCond978
          CFI EndBlock cfiCond979
          CFI EndBlock cfiPicker980

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine3:
          CFI Block cfiBlock981 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 35)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV       A,#0xd
          CFI EndBlock cfiBlock981
        REQUIRE ??Subroutine169_0
        ; // Fall through to label ??Subroutine169_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine169_0:
          CFI Block cfiBlock982 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 33)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI Invalid
        LCALL     ?DEALLOC_XSTACK8
          CFI EndBlock cfiBlock982
        REQUIRE ??Subroutine170_0
        ; // Fall through to label ??Subroutine170_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine170_0:
          CFI Block cfiBlock983 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 22)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV       R7,#0xe
        LJMP      ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock983
// 2820 
// 2821 /*********************************************************************
// 2822  * @fn      zclClosures_SendDoorLockGetPINCodeResponse
// 2823  *
// 2824  * @brief   Call to send out a Get PIN Code Response
// 2825  *
// 2826  * @param   srcEP - Sending application's endpoint
// 2827  * @param   dstAddr - where you want the message to go
// 2828  * @param   pPayload:
// 2829  *           userID - User ID is between 0 - [# PINs User supported attribute]
// 2830  *           userStatus - Used to indicate what the status is for a specific User ID
// 2831  *           userType - Used to indicate what the type is for a specific User ID
// 2832  *           aCode - Returned PIN number
// 2833  * @param   disableDefaultRsp - decides default response is necessary or not
// 2834  * @param   seqNum - sequence number of the command packet
// 2835  *
// 2836  * @return  ZStatus_t
// 2837  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2838 ZStatus_t zclClosures_SendDoorLockGetPINCodeResponse( uint8 srcEP, afAddrType_t *dstAddr,
zclClosures_SendDoorLockGetPINCodeResponse:
          CFI Block cfiBlock984 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockGetPINCodeResponse
        CODE
// 2839                                                       zclDoorLockGetPINCodeRsp_t *pPayload,
// 2840                                                       uint8 disableDefaultRsp, uint8 seqNum )
// 2841 {
        FUNCALL zclClosures_SendDoorLockGetPINCodeResponse, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclClosures_SendDoorLockGetPINCodeResponse, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 32, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 32, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclClosures_SendDoorLockGetPINCodeResponse, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        REQUIRE ?V10
        REQUIRE ?V11
        MOV       A,#-0x14
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 20)
        ; Saved register size: 20
        ; Auto size: 1
        MOV       A,#-0x1
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 21)
        LCALL     ?Subroutine12 & 0xFFFF
// 2842   uint8 i;
// 2843   uint8 *pBuf;  // variable length payload
// 2844   uint8 offset;
// 2845   uint8 calculatedArrayLen;
// 2846   uint8 calculatedBufSize;
// 2847   ZStatus_t status;
// 2848 
// 2849   // first octet of PIN/RFID Code variable string identifies its length
// 2850   calculatedArrayLen = pPayload->pCode[0] + 1;   // add first byte of string
// 2851 
// 2852   // determine the total buffer size
// 2853   calculatedBufSize = calculatedArrayLen + PAYLOAD_LEN_GET_PIN_CODE_RSP;
// 2854 
// 2855   pBuf = zcl_mem_alloc( calculatedBufSize );
??CrossCallReturnLabel_10:
        LCALL     `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV       ?V6,R2
        MOV       ?V7,R3
// 2856   if ( !pBuf )
        MOV       A,R2
        ORL       A,?V7
        JNZ       ??zclClosures_SendDoorLockGetPINCodeResponse_0
// 2857   {
// 2858     return ( ZMemError );  // no memory
        MOV       R1,#0x10
        SJMP      ??zclClosures_SendDoorLockGetPINCodeResponse_1
// 2859   }
// 2860 
// 2861   // over-the-air is always little endian. Break into a byte stream.
// 2862   pBuf[0] = LO_UINT16(pPayload->userID);
??zclClosures_SendDoorLockGetPINCodeResponse_0:
        LCALL     ?Subroutine9 & 0xFFFF
// 2863   pBuf[1] = HI_UINT16(pPayload->userID);
// 2864   pBuf[2] = pPayload->userStatus;
// 2865   pBuf[3] = pPayload->userType;
// 2866   offset = 4;
// 2867   for ( i = 0; i < calculatedArrayLen; i++ )
??CrossCallReturnLabel_2:
        SJMP      ??zclClosures_SendDoorLockGetPINCodeResponse_2
// 2868   {
// 2869     pBuf[offset++] = pPayload->pCode[i];
??zclClosures_SendDoorLockGetPINCodeResponse_3:
        LCALL     ?Subroutine10 & 0xFFFF
// 2870   }
??CrossCallReturnLabel_431:
        PUSH      A
          CFI CFA_SP SP+-1
        LCALL     ?Subroutine86 & 0xFFFF
??CrossCallReturnLabel_206:
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
        INC       R1
        INC       R0
??zclClosures_SendDoorLockGetPINCodeResponse_2:
        MOV       A,R0
        CLR       C
        SUBB      A,?V3
        JC        ??zclClosures_SendDoorLockGetPINCodeResponse_3
// 2871 
// 2872   status = zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_CLOSURES_DOOR_LOCK,
// 2873                             COMMAND_CLOSURES_GET_PIN_CODE_RSP, TRUE, ZCL_FRAME_SERVER_CLIENT_DIR,
// 2874                             disableDefaultRsp, 0, seqNum, calculatedBufSize, pBuf );
        ; Setup parameters for call to function zcl_SendCommand
        MOV       R0,#?V6
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 23)
        MOV       R0,#?V8
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 25)
        MOV       A,#0x1a
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine18 & 0xFFFF
??CrossCallReturnLabel_29:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 26)
        CLR       A
        MOV       ?V0,A
        MOV       ?V1,A
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 28)
        MOV       A,#0x1c
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine18 & 0xFFFF
??CrossCallReturnLabel_30:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 29)
        MOV       ?V0,#0x1
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 30)
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 31)
        MOV       ?V0,#0x6
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 32)
        MOV       R4,#0x1
        MOV       R5,#0x1
        MOV       A,R6
        MOV       R2,A
        MOV       A,R7
        MOV       R3,A
        MOV       R1,?V2
        LCALL     `??zcl_SendCommand::?relay`; Banked call to: zcl_SendCommand
        MOV       A,#0xb
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 21)
        MOV       A,R1
        MOV       R6,A
// 2875   zcl_mem_free( pBuf );
        ; Setup parameters for call to function osal_mem_free
        MOV       R2,?V6
        MOV       R3,?V7
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
// 2876   return status;
        MOV       A,R6
        MOV       R1,A
??zclClosures_SendDoorLockGetPINCodeResponse_1:
        LJMP      ?Subroutine4 & 0xFFFF
// 2877 }
          CFI EndBlock cfiBlock984

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine12:
          CFI Block cfiCond985 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockSetPINCodeRequest
          CFI Conditional ??CrossCallReturnLabel_8
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond986 Using cfiCommon0
          CFI (cfiCond986) Function zclClosures_SendDoorLockSetRFIDCodeRequest
          CFI (cfiCond986) Conditional ??CrossCallReturnLabel_9
          CFI (cfiCond986) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond986) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond986) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond986) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond986) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond986) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond986) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond986) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond986) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond986) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond986) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond986) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond986) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond986) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond986) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond986) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond986) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond986) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond986) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond986) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond986) CFA_SP SP+-2
          CFI (cfiCond986) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond987 Using cfiCommon0
          CFI (cfiCond987) Function zclClosures_SendDoorLockGetPINCodeResponse
          CFI (cfiCond987) Conditional ??CrossCallReturnLabel_10
          CFI (cfiCond987) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond987) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond987) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond987) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond987) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond987) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond987) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond987) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond987) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond987) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond987) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond987) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond987) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond987) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond987) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond987) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond987) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond987) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond987) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond987) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond987) CFA_SP SP+-2
          CFI (cfiCond987) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond988 Using cfiCommon0
          CFI (cfiCond988) Function zclClosures_SendDoorLockGetRFIDCodeResponse
          CFI (cfiCond988) Conditional ??CrossCallReturnLabel_11
          CFI (cfiCond988) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond988) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond988) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond988) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond988) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond988) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond988) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond988) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond988) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond988) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond988) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond988) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond988) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond988) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond988) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond988) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond988) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond988) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond988) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond988) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond988) CFA_SP SP+-2
          CFI (cfiCond988) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker989 Using cfiCommon1
          CFI (cfiPicker989) NoFunction
          CFI (cfiPicker989) Picker
        MOV       ?V2,R1
        MOV       A,R2
        MOV       R6,A
        MOV       A,R3
        MOV       R7,A
        MOV       ?V0,R4
        MOV       ?V1,R5
        MOV       A,R4
        ADD       A,#0x4
        LCALL     ?Subroutine115 & 0xFFFF
??CrossCallReturnLabel_256:
        LCALL     ?Subroutine89 & 0xFFFF
??CrossCallReturnLabel_437:
        MOV       ?V3,A
        MOV       A,#0x4
        ADD       A,?V3
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOVX      @DPTR,A
        MOV       ?V8,A
        MOV       ?V9,#0x0
        ; Setup parameters for call to function osal_mem_alloc
        ; Setup parameters for call to function osal_mem_alloc
        ; Setup parameters for call to function osal_mem_alloc
        ; Setup parameters for call to function osal_mem_alloc
        MOV       R2,A
        MOV       R3,?V9
        RET
          CFI EndBlock cfiCond985
          CFI EndBlock cfiCond986
          CFI EndBlock cfiCond987
          CFI EndBlock cfiCond988
          CFI EndBlock cfiPicker989

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine115:
          CFI Block cfiCond990 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockUnlockTimeoutRequest
          CFI Conditional ??CrossCallReturnLabel_255
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond991 Using cfiCommon0
          CFI (cfiCond991) Function zclClosures_SendDoorLockSetPINCodeRequest
          CFI (cfiCond991) Conditional ??CrossCallReturnLabel_256, ??CrossCallReturnLabel_8
          CFI (cfiCond991) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond991) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond991) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond991) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond991) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond991) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond991) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond991) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond991) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond991) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond991) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond991) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond991) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond991) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond991) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond991) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond991) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond991) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond991) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond991) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond991) CFA_SP SP+-4
          CFI (cfiCond991) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond992 Using cfiCommon0
          CFI (cfiCond992) Function zclClosures_SendDoorLockSetRFIDCodeRequest
          CFI (cfiCond992) Conditional ??CrossCallReturnLabel_256, ??CrossCallReturnLabel_9
          CFI (cfiCond992) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond992) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond992) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond992) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond992) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond992) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond992) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond992) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond992) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond992) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond992) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond992) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond992) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond992) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond992) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond992) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond992) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond992) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond992) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond992) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond992) CFA_SP SP+-4
          CFI (cfiCond992) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond993 Using cfiCommon0
          CFI (cfiCond993) Function zclClosures_SendDoorLockGetPINCodeResponse
          CFI (cfiCond993) Conditional ??CrossCallReturnLabel_256, ??CrossCallReturnLabel_10
          CFI (cfiCond993) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond993) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond993) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond993) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond993) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond993) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond993) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond993) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond993) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond993) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond993) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond993) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond993) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond993) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond993) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond993) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond993) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond993) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond993) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond993) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond993) CFA_SP SP+-4
          CFI (cfiCond993) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond994 Using cfiCommon0
          CFI (cfiCond994) Function zclClosures_SendDoorLockGetRFIDCodeResponse
          CFI (cfiCond994) Conditional ??CrossCallReturnLabel_256, ??CrossCallReturnLabel_11
          CFI (cfiCond994) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond994) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond994) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond994) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond994) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond994) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond994) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond994) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond994) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond994) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond994) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond994) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond994) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond994) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond994) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond994) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond994) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond994) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond994) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond994) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond994) CFA_SP SP+-4
          CFI (cfiCond994) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker995 Using cfiCommon1
          CFI (cfiPicker995) NoFunction
          CFI (cfiPicker995) Picker
        MOV       R0,A
        CLR       A
        ADDC      A,?V1
        MOV       R1,A
        MOV       ?V4,R0
        MOV       ?V5,R1
        MOV       DPL,R0
        RET
          CFI EndBlock cfiCond990
          CFI EndBlock cfiCond991
          CFI EndBlock cfiCond992
          CFI EndBlock cfiCond993
          CFI EndBlock cfiCond994
          CFI EndBlock cfiPicker995

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine89:
          CFI Block cfiCond996 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockSetPINCodeRequest
          CFI Conditional ??CrossCallReturnLabel_437, ??CrossCallReturnLabel_8
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond997 Using cfiCommon0
          CFI (cfiCond997) Function zclClosures_SendDoorLockSetRFIDCodeRequest
          CFI (cfiCond997) Conditional ??CrossCallReturnLabel_437, ??CrossCallReturnLabel_9
          CFI (cfiCond997) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond997) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond997) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond997) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond997) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond997) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond997) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond997) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond997) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond997) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond997) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond997) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond997) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond997) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond997) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond997) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond997) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond997) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond997) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond997) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond997) CFA_SP SP+-4
          CFI (cfiCond997) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond998 Using cfiCommon0
          CFI (cfiCond998) Function zclClosures_SendDoorLockGetPINCodeResponse
          CFI (cfiCond998) Conditional ??CrossCallReturnLabel_437, ??CrossCallReturnLabel_10
          CFI (cfiCond998) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond998) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond998) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond998) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond998) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond998) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond998) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond998) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond998) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond998) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond998) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond998) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond998) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond998) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond998) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond998) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond998) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond998) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond998) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond998) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond998) CFA_SP SP+-4
          CFI (cfiCond998) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond999 Using cfiCommon0
          CFI (cfiCond999) Function zclClosures_SendDoorLockGetRFIDCodeResponse
          CFI (cfiCond999) Conditional ??CrossCallReturnLabel_437, ??CrossCallReturnLabel_11
          CFI (cfiCond999) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond999) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond999) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond999) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond999) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond999) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond999) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond999) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond999) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond999) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond999) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond999) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond999) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond999) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond999) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond999) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond999) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond999) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond999) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond999) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond999) CFA_SP SP+-4
          CFI (cfiCond999) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond1000 Using cfiCommon0
          CFI (cfiCond1000) Function zclClosures_SendDoorLockOperationEventNotification
          CFI (cfiCond1000) Conditional ??CrossCallReturnLabel_438, ??CrossCallReturnLabel_112
          CFI (cfiCond1000) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1000) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1000) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1000) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1000) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1000) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1000) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1000) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1000) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1000) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1000) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1000) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1000) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1000) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1000) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1000) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1000) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1000) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1000) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1000) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1000) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1000) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1000) CFA_SP SP+-4
          CFI (cfiCond1000) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond1001 Using cfiCommon0
          CFI (cfiCond1001) Function zclClosures_SendDoorLockProgrammingEventNotification
          CFI (cfiCond1001) Conditional ??CrossCallReturnLabel_438, ??CrossCallReturnLabel_113
          CFI (cfiCond1001) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1001) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1001) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1001) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1001) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1001) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1001) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1001) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1001) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1001) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1001) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1001) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1001) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1001) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1001) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1001) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1001) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1001) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1001) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1001) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1001) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1001) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1001) CFA_SP SP+-4
          CFI (cfiCond1001) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker1002 Using cfiCommon1
          CFI (cfiPicker1002) NoFunction
          CFI (cfiPicker1002) Picker
        MOV       DPH,A
          CFI EndBlock cfiCond996
          CFI EndBlock cfiCond997
          CFI EndBlock cfiCond998
          CFI EndBlock cfiCond999
          CFI EndBlock cfiCond1000
          CFI EndBlock cfiCond1001
          CFI EndBlock cfiPicker1002
        REQUIRE ??Subroutine171_0
        ; // Fall through to label ??Subroutine171_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine171_0:
          CFI Block cfiCond1003 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockRequest
          CFI Conditional ??CrossCallReturnLabel_439, ??CrossCallReturnLabel_404
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond1004 Using cfiCommon0
          CFI (cfiCond1004) Function zclClosures_SendDoorLockUnlockTimeoutRequest
          CFI (cfiCond1004) Conditional ??CrossCallReturnLabel_439, ??CrossCallReturnLabel_405
          CFI (cfiCond1004) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1004) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1004) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1004) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1004) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1004) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1004) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1004) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1004) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1004) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1004) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1004) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1004) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1004) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1004) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1004) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1004) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1004) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1004) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1004) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1004) CFA_SP SP+-4
          CFI (cfiCond1004) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond1005 Using cfiCommon0
          CFI (cfiCond1005) Function zclClosures_SendDoorLockGetLogRecordResponse
          CFI (cfiCond1005) Conditional ??CrossCallReturnLabel_439, ??CrossCallReturnLabel_406
          CFI (cfiCond1005) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1005) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1005) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1005) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1005) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1005) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1005) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1005) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1005) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1005) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1005) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1005) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1005) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1005) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1005) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1005) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1005) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1005) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1005) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1005) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1005) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1005) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1005) CFA_SP SP+-4
          CFI (cfiCond1005) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond1006 Using cfiCommon0
          CFI (cfiCond1006) Function zclClosures_ProcessInDoorLock
          CFI (cfiCond1006) Conditional ??CrossCallReturnLabel_439, ??CrossCallReturnLabel_403
          CFI (cfiCond1006) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1006) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1006) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1006) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1006) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1006) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1006) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1006) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1006) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1006) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1006) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1006) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1006) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1006) CFA_SP SP+-4
          CFI (cfiCond1006) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond1007 Using cfiCommon0
          CFI (cfiCond1007) Function zclClosures_SendDoorLockSetPINCodeRequest
          CFI (cfiCond1007) Conditional ??CrossCallReturnLabel_437, ??CrossCallReturnLabel_8
          CFI (cfiCond1007) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1007) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1007) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1007) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1007) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1007) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1007) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1007) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1007) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1007) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1007) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1007) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1007) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1007) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1007) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1007) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1007) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1007) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1007) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1007) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1007) CFA_SP SP+-4
          CFI (cfiCond1007) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond1008 Using cfiCommon0
          CFI (cfiCond1008) Function zclClosures_SendDoorLockSetRFIDCodeRequest
          CFI (cfiCond1008) Conditional ??CrossCallReturnLabel_437, ??CrossCallReturnLabel_9
          CFI (cfiCond1008) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1008) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1008) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1008) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1008) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1008) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1008) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1008) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1008) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1008) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1008) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1008) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1008) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1008) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1008) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1008) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1008) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1008) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1008) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1008) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1008) CFA_SP SP+-4
          CFI (cfiCond1008) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond1009 Using cfiCommon0
          CFI (cfiCond1009) Function zclClosures_SendDoorLockGetPINCodeResponse
          CFI (cfiCond1009) Conditional ??CrossCallReturnLabel_437, ??CrossCallReturnLabel_10
          CFI (cfiCond1009) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1009) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1009) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1009) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1009) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1009) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1009) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1009) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1009) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1009) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1009) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1009) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1009) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1009) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1009) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1009) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1009) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1009) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1009) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1009) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1009) CFA_SP SP+-4
          CFI (cfiCond1009) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond1010 Using cfiCommon0
          CFI (cfiCond1010) Function zclClosures_SendDoorLockGetRFIDCodeResponse
          CFI (cfiCond1010) Conditional ??CrossCallReturnLabel_437, ??CrossCallReturnLabel_11
          CFI (cfiCond1010) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1010) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1010) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1010) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1010) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1010) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1010) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1010) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1010) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1010) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1010) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1010) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1010) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1010) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1010) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1010) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1010) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1010) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1010) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1010) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1010) CFA_SP SP+-4
          CFI (cfiCond1010) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond1011 Using cfiCommon0
          CFI (cfiCond1011) Function zclClosures_SendDoorLockOperationEventNotification
          CFI (cfiCond1011) Conditional ??CrossCallReturnLabel_438, ??CrossCallReturnLabel_112
          CFI (cfiCond1011) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1011) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1011) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1011) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1011) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1011) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1011) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1011) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1011) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1011) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1011) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1011) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1011) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1011) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1011) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1011) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1011) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1011) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1011) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1011) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1011) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1011) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1011) CFA_SP SP+-4
          CFI (cfiCond1011) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond1012 Using cfiCommon0
          CFI (cfiCond1012) Function zclClosures_SendDoorLockProgrammingEventNotification
          CFI (cfiCond1012) Conditional ??CrossCallReturnLabel_438, ??CrossCallReturnLabel_113
          CFI (cfiCond1012) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1012) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1012) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1012) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1012) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1012) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1012) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1012) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1012) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1012) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1012) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1012) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1012) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1012) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1012) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1012) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1012) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1012) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1012) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1012) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1012) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1012) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1012) CFA_SP SP+-4
          CFI (cfiCond1012) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker1013 Using cfiCommon1
          CFI (cfiPicker1013) NoFunction
          CFI (cfiPicker1013) Picker
        LCALL     ?Subroutine118 & 0xFFFF
??CrossCallReturnLabel_441:
        INC       A
        RET
          CFI EndBlock cfiCond1003
          CFI EndBlock cfiCond1004
          CFI EndBlock cfiCond1005
          CFI EndBlock cfiCond1006
          CFI EndBlock cfiCond1007
          CFI EndBlock cfiCond1008
          CFI EndBlock cfiCond1009
          CFI EndBlock cfiCond1010
          CFI EndBlock cfiCond1011
          CFI EndBlock cfiCond1012
          CFI EndBlock cfiPicker1013

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine9:
          CFI Block cfiCond1014 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockSetPINCodeRequest
          CFI Conditional ??CrossCallReturnLabel_0
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond1015 Using cfiCommon0
          CFI (cfiCond1015) Function zclClosures_SendDoorLockSetRFIDCodeRequest
          CFI (cfiCond1015) Conditional ??CrossCallReturnLabel_1
          CFI (cfiCond1015) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1015) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1015) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1015) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1015) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1015) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1015) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1015) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1015) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1015) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1015) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1015) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1015) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1015) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1015) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1015) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1015) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1015) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1015) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1015) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1015) CFA_SP SP+-2
          CFI (cfiCond1015) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond1016 Using cfiCommon0
          CFI (cfiCond1016) Function zclClosures_SendDoorLockGetPINCodeResponse
          CFI (cfiCond1016) Conditional ??CrossCallReturnLabel_2
          CFI (cfiCond1016) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1016) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1016) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1016) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1016) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1016) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1016) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1016) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1016) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1016) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1016) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1016) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1016) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1016) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1016) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1016) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1016) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1016) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1016) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1016) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1016) CFA_SP SP+-2
          CFI (cfiCond1016) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond1017 Using cfiCommon0
          CFI (cfiCond1017) Function zclClosures_SendDoorLockGetRFIDCodeResponse
          CFI (cfiCond1017) Conditional ??CrossCallReturnLabel_3
          CFI (cfiCond1017) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1017) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1017) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1017) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1017) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1017) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1017) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1017) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1017) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1017) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1017) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1017) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1017) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1017) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1017) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1017) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1017) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1017) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1017) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1017) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1017) CFA_SP SP+-2
          CFI (cfiCond1017) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker1018 Using cfiCommon1
          CFI (cfiPicker1018) NoFunction
          CFI (cfiPicker1018) Picker
        MOV       DPL,?V0
        MOV       DPH,?V1
        LCALL     ??Subroutine172_0 & 0xFFFF
??CrossCallReturnLabel_444:
        LCALL     ?Subroutine108 & 0xFFFF
??CrossCallReturnLabel_236:
        LCALL     ?Subroutine107 & 0xFFFF
??CrossCallReturnLabel_446:
        INC       DPTR
        LCALL     ?Subroutine108 & 0xFFFF
??CrossCallReturnLabel_237:
        INC       DPTR
        INC       DPTR
        LCALL     ?Subroutine106 & 0xFFFF
??CrossCallReturnLabel_233:
        MOV       DPL,?V0
        MOV       DPH,?V1
        INC       DPTR
        INC       DPTR
        LCALL     ?Subroutine103 & 0xFFFF
??CrossCallReturnLabel_229:
        MOV       R1,#0x4
        MOV       R0,#0x0
        RET
          CFI EndBlock cfiCond1014
          CFI EndBlock cfiCond1015
          CFI EndBlock cfiCond1016
          CFI EndBlock cfiCond1017
          CFI EndBlock cfiPicker1018

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine107:
          CFI Block cfiCond1019 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockSetPINCodeRequest
          CFI Conditional ??CrossCallReturnLabel_446, ??CrossCallReturnLabel_0
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond1020 Using cfiCommon0
          CFI (cfiCond1020) Function zclClosures_SendDoorLockSetRFIDCodeRequest
          CFI (cfiCond1020) Conditional ??CrossCallReturnLabel_446, ??CrossCallReturnLabel_1
          CFI (cfiCond1020) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1020) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1020) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1020) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1020) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1020) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1020) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1020) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1020) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1020) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1020) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1020) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1020) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1020) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1020) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1020) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1020) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1020) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1020) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1020) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1020) CFA_SP SP+-4
          CFI (cfiCond1020) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond1021 Using cfiCommon0
          CFI (cfiCond1021) Function zclClosures_SendDoorLockGetPINCodeResponse
          CFI (cfiCond1021) Conditional ??CrossCallReturnLabel_446, ??CrossCallReturnLabel_2
          CFI (cfiCond1021) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1021) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1021) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1021) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1021) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1021) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1021) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1021) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1021) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1021) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1021) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1021) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1021) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1021) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1021) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1021) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1021) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1021) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1021) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1021) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1021) CFA_SP SP+-4
          CFI (cfiCond1021) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond1022 Using cfiCommon0
          CFI (cfiCond1022) Function zclClosures_SendDoorLockGetRFIDCodeResponse
          CFI (cfiCond1022) Conditional ??CrossCallReturnLabel_446, ??CrossCallReturnLabel_3
          CFI (cfiCond1022) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1022) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1022) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1022) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1022) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1022) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1022) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1022) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1022) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1022) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1022) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1022) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1022) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1022) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1022) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1022) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1022) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1022) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1022) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1022) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1022) CFA_SP SP+-4
          CFI (cfiCond1022) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond1023 Using cfiCommon0
          CFI (cfiCond1023) Function zclClosures_SendDoorLockOperationEventNotification
          CFI (cfiCond1023) Conditional ??CrossCallReturnLabel_447, ??CrossCallReturnLabel_12
          CFI (cfiCond1023) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1023) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1023) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1023) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1023) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1023) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1023) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1023) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1023) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1023) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1023) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1023) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1023) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1023) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1023) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1023) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1023) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1023) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1023) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1023) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1023) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1023) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1023) CFA_SP SP+-4
          CFI (cfiCond1023) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond1024 Using cfiCommon0
          CFI (cfiCond1024) Function zclClosures_SendDoorLockProgrammingEventNotification
          CFI (cfiCond1024) Conditional ??CrossCallReturnLabel_447, ??CrossCallReturnLabel_13
          CFI (cfiCond1024) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1024) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1024) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1024) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1024) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1024) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1024) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1024) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1024) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1024) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1024) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1024) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1024) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1024) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1024) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1024) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1024) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1024) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1024) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1024) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1024) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1024) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1024) CFA_SP SP+-4
          CFI (cfiCond1024) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker1025 Using cfiCommon1
          CFI (cfiPicker1025) NoFunction
          CFI (cfiPicker1025) Picker
        INC       DPTR
          CFI EndBlock cfiCond1019
          CFI EndBlock cfiCond1020
          CFI EndBlock cfiCond1021
          CFI EndBlock cfiCond1022
          CFI EndBlock cfiCond1023
          CFI EndBlock cfiCond1024
          CFI EndBlock cfiPicker1025
        REQUIRE ??Subroutine172_0
        ; // Fall through to label ??Subroutine172_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine172_0:
          CFI Block cfiCond1026 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockUnlockTimeoutRequest
          CFI Conditional ??CrossCallReturnLabel_448, ??CrossCallReturnLabel_417
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond1027 Using cfiCommon0
          CFI (cfiCond1027) Function zclClosures_SendDoorLockGetLogRecordResponse
          CFI (cfiCond1027) Conditional ??CrossCallReturnLabel_448, ??CrossCallReturnLabel_418
          CFI (cfiCond1027) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1027) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1027) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1027) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1027) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1027) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1027) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1027) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1027) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1027) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1027) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1027) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1027) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1027) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1027) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1027) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1027) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1027) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1027) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1027) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1027) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1027) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1027) CFA_SP SP+-4
          CFI (cfiCond1027) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond1028 Using cfiCommon0
          CFI (cfiCond1028) Function zclClosures_SendDoorLockUnlockTimeoutRequest
          CFI (cfiCond1028) Conditional ??CrossCallReturnLabel_448, ??CrossCallReturnLabel_415
          CFI (cfiCond1028) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1028) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1028) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1028) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1028) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1028) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1028) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1028) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1028) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1028) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1028) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1028) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1028) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1028) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1028) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1028) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1028) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1028) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1028) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1028) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1028) CFA_SP SP+-4
          CFI (cfiCond1028) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond1029 Using cfiCommon0
          CFI (cfiCond1029) Function zclClosures_SendDoorLockGetLogRecordResponse
          CFI (cfiCond1029) Conditional ??CrossCallReturnLabel_448, ??CrossCallReturnLabel_416
          CFI (cfiCond1029) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1029) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1029) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1029) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1029) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1029) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1029) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1029) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1029) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1029) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1029) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1029) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1029) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1029) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1029) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1029) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1029) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1029) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1029) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1029) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1029) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1029) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1029) CFA_SP SP+-4
          CFI (cfiCond1029) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond1030 Using cfiCommon0
          CFI (cfiCond1030) Function zclClosures_SendDoorLockSetPINCodeRequest
          CFI (cfiCond1030) Conditional ??CrossCallReturnLabel_444, ??CrossCallReturnLabel_0
          CFI (cfiCond1030) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1030) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1030) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1030) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1030) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1030) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1030) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1030) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1030) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1030) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1030) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1030) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1030) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1030) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1030) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1030) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1030) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1030) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1030) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1030) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1030) CFA_SP SP+-4
          CFI (cfiCond1030) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond1031 Using cfiCommon0
          CFI (cfiCond1031) Function zclClosures_SendDoorLockSetRFIDCodeRequest
          CFI (cfiCond1031) Conditional ??CrossCallReturnLabel_444, ??CrossCallReturnLabel_1
          CFI (cfiCond1031) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1031) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1031) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1031) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1031) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1031) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1031) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1031) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1031) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1031) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1031) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1031) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1031) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1031) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1031) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1031) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1031) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1031) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1031) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1031) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1031) CFA_SP SP+-4
          CFI (cfiCond1031) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond1032 Using cfiCommon0
          CFI (cfiCond1032) Function zclClosures_SendDoorLockGetPINCodeResponse
          CFI (cfiCond1032) Conditional ??CrossCallReturnLabel_444, ??CrossCallReturnLabel_2
          CFI (cfiCond1032) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1032) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1032) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1032) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1032) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1032) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1032) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1032) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1032) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1032) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1032) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1032) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1032) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1032) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1032) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1032) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1032) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1032) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1032) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1032) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1032) CFA_SP SP+-4
          CFI (cfiCond1032) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond1033 Using cfiCommon0
          CFI (cfiCond1033) Function zclClosures_SendDoorLockGetRFIDCodeResponse
          CFI (cfiCond1033) Conditional ??CrossCallReturnLabel_444, ??CrossCallReturnLabel_3
          CFI (cfiCond1033) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1033) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1033) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1033) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1033) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1033) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1033) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1033) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1033) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1033) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1033) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1033) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1033) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1033) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1033) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1033) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1033) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1033) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1033) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1033) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1033) CFA_SP SP+-4
          CFI (cfiCond1033) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond1034 Using cfiCommon0
          CFI (cfiCond1034) Function zclClosures_SendDoorLockOperationEventNotification
          CFI (cfiCond1034) Conditional ??CrossCallReturnLabel_445, ??CrossCallReturnLabel_12
          CFI (cfiCond1034) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1034) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1034) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1034) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1034) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1034) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1034) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1034) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1034) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1034) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1034) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1034) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1034) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1034) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1034) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1034) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1034) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1034) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1034) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1034) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1034) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1034) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1034) CFA_SP SP+-4
          CFI (cfiCond1034) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond1035 Using cfiCommon0
          CFI (cfiCond1035) Function zclClosures_SendDoorLockProgrammingEventNotification
          CFI (cfiCond1035) Conditional ??CrossCallReturnLabel_445, ??CrossCallReturnLabel_13
          CFI (cfiCond1035) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1035) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1035) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1035) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1035) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1035) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1035) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1035) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1035) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1035) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1035) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1035) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1035) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1035) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1035) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1035) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1035) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1035) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1035) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1035) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1035) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1035) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1035) CFA_SP SP+-4
          CFI (cfiCond1035) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond1036 Using cfiCommon0
          CFI (cfiCond1036) Function zclClosures_SendDoorLockSetPINCodeRequest
          CFI (cfiCond1036) Conditional ??CrossCallReturnLabel_446, ??CrossCallReturnLabel_0
          CFI (cfiCond1036) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1036) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1036) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1036) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1036) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1036) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1036) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1036) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1036) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1036) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1036) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1036) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1036) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1036) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1036) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1036) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1036) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1036) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1036) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1036) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1036) CFA_SP SP+-4
          CFI (cfiCond1036) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond1037 Using cfiCommon0
          CFI (cfiCond1037) Function zclClosures_SendDoorLockSetRFIDCodeRequest
          CFI (cfiCond1037) Conditional ??CrossCallReturnLabel_446, ??CrossCallReturnLabel_1
          CFI (cfiCond1037) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1037) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1037) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1037) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1037) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1037) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1037) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1037) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1037) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1037) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1037) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1037) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1037) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1037) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1037) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1037) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1037) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1037) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1037) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1037) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1037) CFA_SP SP+-4
          CFI (cfiCond1037) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond1038 Using cfiCommon0
          CFI (cfiCond1038) Function zclClosures_SendDoorLockGetPINCodeResponse
          CFI (cfiCond1038) Conditional ??CrossCallReturnLabel_446, ??CrossCallReturnLabel_2
          CFI (cfiCond1038) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1038) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1038) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1038) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1038) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1038) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1038) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1038) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1038) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1038) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1038) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1038) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1038) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1038) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1038) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1038) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1038) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1038) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1038) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1038) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1038) CFA_SP SP+-4
          CFI (cfiCond1038) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond1039 Using cfiCommon0
          CFI (cfiCond1039) Function zclClosures_SendDoorLockGetRFIDCodeResponse
          CFI (cfiCond1039) Conditional ??CrossCallReturnLabel_446, ??CrossCallReturnLabel_3
          CFI (cfiCond1039) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1039) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1039) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1039) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1039) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1039) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1039) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1039) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1039) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1039) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1039) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1039) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1039) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1039) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1039) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1039) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1039) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1039) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1039) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1039) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1039) CFA_SP SP+-4
          CFI (cfiCond1039) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond1040 Using cfiCommon0
          CFI (cfiCond1040) Function zclClosures_SendDoorLockOperationEventNotification
          CFI (cfiCond1040) Conditional ??CrossCallReturnLabel_447, ??CrossCallReturnLabel_12
          CFI (cfiCond1040) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1040) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1040) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1040) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1040) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1040) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1040) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1040) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1040) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1040) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1040) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1040) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1040) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1040) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1040) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1040) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1040) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1040) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1040) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1040) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1040) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1040) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1040) CFA_SP SP+-4
          CFI (cfiCond1040) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond1041 Using cfiCommon0
          CFI (cfiCond1041) Function zclClosures_SendDoorLockProgrammingEventNotification
          CFI (cfiCond1041) Conditional ??CrossCallReturnLabel_447, ??CrossCallReturnLabel_13
          CFI (cfiCond1041) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1041) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1041) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1041) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1041) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1041) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1041) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1041) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1041) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1041) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1041) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1041) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1041) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1041) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1041) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1041) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1041) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1041) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1041) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1041) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1041) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1041) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1041) CFA_SP SP+-4
          CFI (cfiCond1041) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker1042 Using cfiCommon1
          CFI (cfiPicker1042) NoFunction
          CFI (cfiPicker1042) Picker
        MOVX      A,@DPTR
        MOV       DPL,R2
        MOV       DPH,R3
        RET
          CFI EndBlock cfiCond1026
          CFI EndBlock cfiCond1027
          CFI EndBlock cfiCond1028
          CFI EndBlock cfiCond1029
          CFI EndBlock cfiCond1030
          CFI EndBlock cfiCond1031
          CFI EndBlock cfiCond1032
          CFI EndBlock cfiCond1033
          CFI EndBlock cfiCond1034
          CFI EndBlock cfiCond1035
          CFI EndBlock cfiCond1036
          CFI EndBlock cfiCond1037
          CFI EndBlock cfiCond1038
          CFI EndBlock cfiCond1039
          CFI EndBlock cfiCond1040
          CFI EndBlock cfiCond1041
          CFI EndBlock cfiPicker1042
// 2878 
// 2879 /*********************************************************************
// 2880  * @fn      zclClosures_SendDoorLockGetUserStatusResponse
// 2881  *
// 2882  * @brief   Call to send out a Get User Status Response
// 2883  *
// 2884  * @param   srcEP - Sending application's endpoint
// 2885  * @param   dstAddr - where you want the message to go
// 2886  * @param   userID - User ID is between 0 - [# PINs User supported attribute]
// 2887  * @param   userStatus - Used to indicate what the status is for a specific User ID
// 2888  * @param   disableDefaultRsp - decides default response is necessary or not
// 2889  * @param   seqNum - sequence number of the command packet
// 2890  *
// 2891  * @return  ZStatus_t
// 2892  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2893 ZStatus_t zclClosures_SendDoorLockGetUserStatusResponse( uint8 srcEP, afAddrType_t *dstAddr,
zclClosures_SendDoorLockGetUserStatusResponse:
          CFI Block cfiBlock1043 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockGetUserStatusResponse
        CODE
// 2894                                                          uint16 userID, uint8 userStatus,
// 2895                                                          uint8 disableDefaultRsp, uint8 seqNum )
// 2896 {
        FUNCALL zclClosures_SendDoorLockGetUserStatusResponse, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 24, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV       A,#-0xa
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 3
        MOV       A,#-0x3
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 13)
        MOV       A,R1
        MOV       R6,A
// 2897   uint8 payload[PAYLOAD_LEN_GET_USER_STATUS_RSP];
// 2898 
// 2899   payload[0] = LO_UINT16(userID);
        MOV       A,R4
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOVX      @DPTR,A
// 2900   payload[1] = HI_UINT16(userID);
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP0_8
        MOV       A,R5
        MOVX      @DPTR,A
// 2901   payload[2] = userStatus;
        MOV       A,#0xd
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        LCALL     ??Subroutine173_0 & 0xFFFF
// 2902 
// 2903   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_CLOSURES_DOOR_LOCK,
// 2904                           COMMAND_CLOSURES_GET_USER_STATUS_RSP, TRUE, ZCL_FRAME_SERVER_CLIENT_DIR,
// 2905                           disableDefaultRsp, 0, seqNum, PAYLOAD_LEN_GET_USER_STATUS_RSP, payload );
??CrossCallReturnLabel_454:
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 15)
        MOV       ?V0,#0x3
        MOV       ?V1,#0x0
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 17)
        MOV       A,#0x13
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine18 & 0xFFFF
??CrossCallReturnLabel_31:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 18)
        CLR       A
        MOV       ?V0,A
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 20)
        MOV       A,#0x15
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine18 & 0xFFFF
??CrossCallReturnLabel_32:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 21)
        MOV       ?V0,#0x1
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 22)
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 23)
        MOV       ?V0,#0xa
        LJMP      ?Subroutine1 & 0xFFFF
// 2906 }
          CFI EndBlock cfiBlock1043

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine57:
          CFI Block cfiCond1044 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockGetLogRecordRequest
          CFI Conditional ??CrossCallReturnLabel_449
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1045 Using cfiCommon0
          CFI (cfiCond1045) Function zclClosures_SendDoorLockSetHolidayScheduleRequest
          CFI (cfiCond1045) Conditional ??CrossCallReturnLabel_450
          CFI (cfiCond1045) R6 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1045) VB load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1045) V0 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1045) V1 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1045) V2 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1045) V3 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1045) V4 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1045) V5 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1045) V6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1045) V7 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1045) V8 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1045) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1045) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1045) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1045) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1045) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1045) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1045) CFA_SP SP+-2
          CFI (cfiCond1045) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiPicker1046 Using cfiCommon1
          CFI (cfiPicker1046) NoFunction
          CFI (cfiPicker1046) Picker
        MOV       A,R5
          CFI EndBlock cfiCond1044
          CFI EndBlock cfiCond1045
          CFI EndBlock cfiPicker1046
        REQUIRE ??Subroutine173_0
        ; // Fall through to label ??Subroutine173_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine173_0:
          CFI Block cfiCond1047 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockSetUserStatusRequest
          CFI Conditional ??CrossCallReturnLabel_451
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond1048 Using cfiCommon0
          CFI (cfiCond1048) Function zclClosures_SendDoorLockSetYearDayScheduleRequest
          CFI (cfiCond1048) Conditional ??CrossCallReturnLabel_452
          CFI (cfiCond1048) R6 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1048) VB load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1048) V0 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1048) V1 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1048) V2 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1048) V3 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1048) V4 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1048) V5 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1048) V6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1048) V7 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1048) V8 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1048) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1048) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1048) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1048) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1048) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1048) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1048) CFA_SP SP+-2
          CFI (cfiCond1048) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond1049 Using cfiCommon0
          CFI (cfiCond1049) Function zclClosures_SendDoorLockSetUserTypeRequest
          CFI (cfiCond1049) Conditional ??CrossCallReturnLabel_453
          CFI (cfiCond1049) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1049) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1049) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1049) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1049) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1049) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1049) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1049) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1049) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1049) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1049) CFA_SP SP+-2
          CFI (cfiCond1049) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond1050 Using cfiCommon0
          CFI (cfiCond1050) Function zclClosures_SendDoorLockGetUserStatusResponse
          CFI (cfiCond1050) Conditional ??CrossCallReturnLabel_454
          CFI (cfiCond1050) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1050) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1050) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1050) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1050) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1050) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1050) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1050) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1050) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1050) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1050) CFA_SP SP+-2
          CFI (cfiCond1050) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond1051 Using cfiCommon0
          CFI (cfiCond1051) Function zclClosures_SendDoorLockGetUserTypeResponse
          CFI (cfiCond1051) Conditional ??CrossCallReturnLabel_455
          CFI (cfiCond1051) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1051) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1051) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1051) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1051) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1051) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1051) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1051) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1051) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1051) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1051) CFA_SP SP+-2
          CFI (cfiCond1051) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond1052 Using cfiCommon0
          CFI (cfiCond1052) Function zclClosures_SendDoorLockGetLogRecordRequest
          CFI (cfiCond1052) Conditional ??CrossCallReturnLabel_449
          CFI (cfiCond1052) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1052) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1052) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1052) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1052) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1052) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1052) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1052) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1052) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1052) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1052) CFA_SP SP+-2
          CFI (cfiCond1052) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1053 Using cfiCommon0
          CFI (cfiCond1053) Function zclClosures_SendDoorLockSetHolidayScheduleRequest
          CFI (cfiCond1053) Conditional ??CrossCallReturnLabel_450
          CFI (cfiCond1053) R6 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1053) VB load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1053) V0 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1053) V1 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1053) V2 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1053) V3 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1053) V4 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1053) V5 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1053) V6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1053) V7 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1053) V8 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1053) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1053) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1053) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1053) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1053) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1053) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1053) CFA_SP SP+-2
          CFI (cfiCond1053) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiPicker1054 Using cfiCommon1
          CFI (cfiPicker1054) NoFunction
          CFI (cfiPicker1054) Picker
        MOVX      @DPTR,A
        ; Setup parameters for call to function zcl_SendCommand
        ; Setup parameters for call to function zcl_SendCommand
        ; Setup parameters for call to function zcl_SendCommand
        ; Setup parameters for call to function zcl_SendCommand
        ; Setup parameters for call to function zcl_SendCommand
        ; Setup parameters for call to function zcl_SendCommand
        ; Setup parameters for call to function zcl_SendCommand
        MOV       R0,?XSP + 0
        MOV       R1,?XSP + 1
        MOV       ?V0,R0
        MOV       ?V1,R1
        MOV       R0,#?V0
        RET
          CFI EndBlock cfiCond1047
          CFI EndBlock cfiCond1048
          CFI EndBlock cfiCond1049
          CFI EndBlock cfiCond1050
          CFI EndBlock cfiCond1051
          CFI EndBlock cfiCond1052
          CFI EndBlock cfiCond1053
          CFI EndBlock cfiPicker1054
// 2907 
// 2908 /*********************************************************************
// 2909  * @fn      zclClosures_SendDoorLockGetWeekDayScheduleResponse
// 2910  *
// 2911  * @brief   Call to send out a Get Week Day Schedule Response
// 2912  *
// 2913  * @param   srcEP - Sending application's endpoint
// 2914  * @param   dstAddr - where you want the message to go
// 2915  * @param   pCmd:
// 2916  *               scheduleID - The Schedule ID # is between 0 - [# Schedule IDs per user attribute]
// 2917  *               userID - User ID is between 0 - [# PINs User supported attribute]
// 2918  *               status - Returns the state due to the requesting command
// 2919  *               daysMask - Bitmask of the effective days in the order XSFTWTMS
// 2920  *               startHour - The start hour of the Week Day Schedule: 0-23
// 2921  *               startMinute - The start minute of the Week Day Schedule: 0-59
// 2922  *               endHour - The end hour of the Week Day Schedule: 0-23
// 2923  *               endMinute - The end minute of the Week Day Schedule: 0-59
// 2924  * @param   disableDefaultRsp - decides default response is necessary or not
// 2925  * @param   seqNum - sequence number of the command packet
// 2926  *
// 2927  * @return  ZStatus_t
// 2928  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2929 ZStatus_t zclClosures_SendDoorLockGetWeekDayScheduleResponse( uint8 srcEP, afAddrType_t *dstAddr,
zclClosures_SendDoorLockGetWeekDayScheduleResponse:
          CFI Block cfiBlock1055 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockGetWeekDayScheduleResponse
        CODE
// 2930                                                               zclDoorLockGetWeekDayScheduleRsp_t *pCmd,
// 2931                                                               uint8 disableDefaultRsp, uint8 seqNum )
// 2932 {
        FUNCALL zclClosures_SendDoorLockGetWeekDayScheduleResponse, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 30, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 30, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV       A,#-0xa
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 9
        MOV       A,#-0x9
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 19)
        MOV       A,R1
        MOV       R6,A
// 2933   uint8 payload[PAYLOAD_LEN_GET_WEEK_DAY_SCHEDULE_RSP];
// 2934   uint8 payloadLen = sizeof( payload );
        MOV       R7,#0x9
// 2935 
// 2936   payload[0] = pCmd->scheduleID;
        LCALL     ?Subroutine91 & 0xFFFF
// 2937   payload[1] = LO_UINT16( pCmd->userID );
??CrossCallReturnLabel_215:
        MOV       R0,DPL
        MOV       R1,DPH
        MOVX      A,@DPTR
        MOV       ?V0,A
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP0_8
        MOV       A,?V0
        LCALL     ?Subroutine123 & 0xFFFF
// 2938   payload[2] = HI_UINT16( pCmd->userID );
??CrossCallReturnLabel_344:
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
// 2939   payload[3] = pCmd->status;
        MOV       A,R4
        ADD       A,#0x3
        MOV       R0,A
        CLR       A
        ADDC      A,R5
        MOV       R1,A
        MOV       DPL,R0
        MOV       DPH,R1
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x3
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
// 2940 
// 2941   if ( pCmd->status == ZCL_STATUS_SUCCESS )
        MOV       DPL,R0
        MOV       DPH,R1
        MOVX      A,@DPTR
        JNZ       ??zclClosures_SendDoorLockGetWeekDayScheduleRes_1
// 2942   {
// 2943     payload[4] = pCmd->daysMask;
        MOV       DPL,R4
        MOV       DPH,R5
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        LCALL     ?Subroutine80 & 0xFFFF
// 2944     payload[5] = pCmd->startHour;
// 2945     payload[6] = pCmd->startMinute;
// 2946     payload[7] = pCmd->endHour;
// 2947     payload[8] = pCmd->endMinute;
// 2948   }
??CrossCallReturnLabel_189:
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        LCALL     ?Subroutine68 & 0xFFFF
??CrossCallReturnLabel_159:
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x6
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        LCALL     ?Subroutine68 & 0xFFFF
??CrossCallReturnLabel_160:
        INC       DPTR
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x7
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        LCALL     ?Subroutine66 & 0xFFFF
??CrossCallReturnLabel_154:
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x8
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
        SJMP      ??zclClosures_SendDoorLockGetWeekDayScheduleRes_2
// 2949   else
// 2950   {
// 2951     payloadLen = 4;
??zclClosures_SendDoorLockGetWeekDayScheduleRes_1:
        MOV       R7,#0x4
// 2952   }
// 2953 
// 2954   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_CLOSURES_DOOR_LOCK,
// 2955                           COMMAND_CLOSURES_GET_WEEK_DAY_SCHEDULE_RSP, TRUE, ZCL_FRAME_SERVER_CLIENT_DIR,
// 2956                           disableDefaultRsp, 0, seqNum, payloadLen, payload );
??zclClosures_SendDoorLockGetWeekDayScheduleRes_2:
        ; Setup parameters for call to function zcl_SendCommand
        MOV       R0,?XSP + 0
        MOV       R1,?XSP + 1
        MOV       ?V0,R0
        MOV       ?V1,R1
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 21)
        MOV       A,R7
        MOV       ?V0,A
        MOV       ?V1,#0x0
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 23)
        MOV       A,#0x18
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine18 & 0xFFFF
??CrossCallReturnLabel_33:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 24)
        CLR       A
        MOV       ?V0,A
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 26)
        MOV       A,#0x1a
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine18 & 0xFFFF
??CrossCallReturnLabel_34:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 27)
        MOV       ?V0,#0x1
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 28)
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 29)
        MOV       ?V0,#0xc
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 30)
        MOV       R4,#0x1
        MOV       R5,#0x1
        MOV       A,R6
        MOV       R1,A
        LCALL     `??zcl_SendCommand::?relay`; Banked call to: zcl_SendCommand
        MOV       A,#0xb
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 19)
        MOV       A,#0x9
        LJMP      ??Subroutine174_0 & 0xFFFF
// 2957 }
          CFI EndBlock cfiBlock1055

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine80:
          CFI Block cfiCond1056 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
          CFI Conditional ??CrossCallReturnLabel_188
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond1057 Using cfiCommon0
          CFI (cfiCond1057) Function zclClosures_SendDoorLockGetWeekDayScheduleResponse
          CFI (cfiCond1057) Conditional ??CrossCallReturnLabel_189
          CFI (cfiCond1057) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1057) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1057) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1057) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1057) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1057) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1057) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1057) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1057) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1057) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1057) CFA_SP SP+-2
          CFI (cfiCond1057) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiPicker1058 Using cfiCommon1
          CFI (cfiPicker1058) NoFunction
          CFI (cfiPicker1058) Picker
        LCALL     ?Subroutine113 & 0xFFFF
??CrossCallReturnLabel_251:
        INC       DPTR
        INC       DPTR
        INC       DPTR
        RET
          CFI EndBlock cfiCond1056
          CFI EndBlock cfiCond1057
          CFI EndBlock cfiPicker1058

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine113:
          CFI Block cfiCond1059 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockSetWeekDaySchedule
          CFI Conditional ??CrossCallReturnLabel_249, ??CrossCallReturnLabel_164
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond1060 Using cfiCommon0
          CFI (cfiCond1060) Function zclClosures_ProcessInDoorLockGetWeekDayScheduleRsp
          CFI (cfiCond1060) Conditional ??CrossCallReturnLabel_249, ??CrossCallReturnLabel_165
          CFI (cfiCond1060) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1060) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1060) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1060) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1060) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1060) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1060) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1060) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1060) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1060) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1060) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1060) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1060) CFA_SP SP+-4
          CFI (cfiCond1060) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond1061 Using cfiCommon0
          CFI (cfiCond1061) Function zclClosures_ProcessInDoorLockSetWeekDaySchedule
          CFI (cfiCond1061) Conditional ??CrossCallReturnLabel_250, ??CrossCallReturnLabel_55
          CFI (cfiCond1061) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1061) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1061) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1061) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1061) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1061) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1061) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1061) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1061) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1061) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1061) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1061) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1061) CFA_SP SP+-4
          CFI (cfiCond1061) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond1062 Using cfiCommon0
          CFI (cfiCond1062) Function zclClosures_ProcessInDoorLockGetWeekDayScheduleRsp
          CFI (cfiCond1062) Conditional ??CrossCallReturnLabel_250, ??CrossCallReturnLabel_56
          CFI (cfiCond1062) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1062) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1062) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1062) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1062) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1062) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1062) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1062) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1062) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1062) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1062) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1062) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1062) CFA_SP SP+-4
          CFI (cfiCond1062) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond1063 Using cfiCommon0
          CFI (cfiCond1063) Function zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
          CFI (cfiCond1063) Conditional ??CrossCallReturnLabel_251, ??CrossCallReturnLabel_188
          CFI (cfiCond1063) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1063) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1063) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1063) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1063) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1063) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1063) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1063) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1063) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1063) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1063) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1063) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1063) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1063) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1063) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1063) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1063) CFA_SP SP+-4
          CFI (cfiCond1063) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond1064 Using cfiCommon0
          CFI (cfiCond1064) Function zclClosures_SendDoorLockGetWeekDayScheduleResponse
          CFI (cfiCond1064) Conditional ??CrossCallReturnLabel_251, ??CrossCallReturnLabel_189
          CFI (cfiCond1064) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1064) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1064) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1064) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1064) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1064) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1064) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1064) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1064) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1064) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1064) CFA_SP SP+-4
          CFI (cfiCond1064) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond1065 Using cfiCommon0
          CFI (cfiCond1065) Function zclClosures_SendDoorLockGetYearDayScheduleResponse
          CFI (cfiCond1065) Conditional ??CrossCallReturnLabel_252, ??CrossCallReturnLabel_161
          CFI (cfiCond1065) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1065) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1065) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1065) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1065) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1065) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1065) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1065) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1065) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1065) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1065) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1065) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1065) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1065) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1065) CFA_SP SP+-4
          CFI (cfiCond1065) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond1066 Using cfiCommon0
          CFI (cfiCond1066) Function zclClosures_SendDoorLockGetYearDayScheduleResponse
          CFI (cfiCond1066) Conditional ??CrossCallReturnLabel_252, ??CrossCallReturnLabel_162
          CFI (cfiCond1066) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1066) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1066) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1066) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1066) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1066) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1066) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1066) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1066) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1066) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1066) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1066) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1066) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1066) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1066) CFA_SP SP+-4
          CFI (cfiCond1066) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond1067 Using cfiCommon0
          CFI (cfiCond1067) Function zclClosures_SendDoorLockGetYearDayScheduleResponse
          CFI (cfiCond1067) Conditional ??CrossCallReturnLabel_252, ??CrossCallReturnLabel_163
          CFI (cfiCond1067) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1067) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1067) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1067) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1067) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1067) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1067) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1067) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1067) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1067) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1067) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1067) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1067) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1067) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1067) CFA_SP SP+-4
          CFI (cfiCond1067) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiPicker1068 Using cfiCommon1
          CFI (cfiPicker1068) NoFunction
          CFI (cfiPicker1068) Picker
        MOVX      @DPTR,A
        MOV       DPL,R4
        MOV       DPH,R5
        RET
          CFI EndBlock cfiCond1059
          CFI EndBlock cfiCond1060
          CFI EndBlock cfiCond1061
          CFI EndBlock cfiCond1062
          CFI EndBlock cfiCond1063
          CFI EndBlock cfiCond1064
          CFI EndBlock cfiCond1065
          CFI EndBlock cfiCond1066
          CFI EndBlock cfiCond1067
          CFI EndBlock cfiPicker1068

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine68:
          CFI Block cfiCond1069 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockGetWeekDayScheduleResponse
          CFI Conditional ??CrossCallReturnLabel_159
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond1070 Using cfiCommon0
          CFI (cfiCond1070) Function zclClosures_SendDoorLockGetWeekDayScheduleResponse
          CFI (cfiCond1070) Conditional ??CrossCallReturnLabel_160
          CFI (cfiCond1070) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1070) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1070) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1070) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1070) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1070) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1070) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1070) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1070) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1070) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1070) CFA_SP SP+-2
          CFI (cfiCond1070) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiPicker1071 Using cfiCommon1
          CFI (cfiPicker1071) NoFunction
          CFI (cfiPicker1071) Picker
        LCALL     ?Subroutine111 & 0xFFFF
??CrossCallReturnLabel_245:
        RET
          CFI EndBlock cfiCond1069
          CFI EndBlock cfiCond1070
          CFI EndBlock cfiPicker1071

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine111:
          CFI Block cfiCond1072 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockGetWeekDayScheduleResponse
          CFI Conditional ??CrossCallReturnLabel_245, ??CrossCallReturnLabel_159
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond1073 Using cfiCommon0
          CFI (cfiCond1073) Function zclClosures_SendDoorLockGetWeekDayScheduleResponse
          CFI (cfiCond1073) Conditional ??CrossCallReturnLabel_245, ??CrossCallReturnLabel_160
          CFI (cfiCond1073) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1073) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1073) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1073) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1073) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1073) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1073) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1073) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1073) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1073) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1073) CFA_SP SP+-4
          CFI (cfiCond1073) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond1074 Using cfiCommon0
          CFI (cfiCond1074) Function zclClosures_SendDoorLockGetWeekDayScheduleResponse
          CFI (cfiCond1074) Conditional ??CrossCallReturnLabel_246, ??CrossCallReturnLabel_154
          CFI (cfiCond1074) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1074) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1074) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1074) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1074) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1074) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1074) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1074) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1074) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1074) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1074) CFA_SP SP+-4
          CFI (cfiCond1074) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond1075 Using cfiCommon0
          CFI (cfiCond1075) Function zclClosures_SendDoorLockGetHolidayScheduleResponse
          CFI (cfiCond1075) Conditional ??CrossCallReturnLabel_246, ??CrossCallReturnLabel_155
          CFI (cfiCond1075) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1075) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1075) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1075) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1075) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1075) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1075) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1075) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1075) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1075) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1075) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1075) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1075) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1075) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1075) CFA_SP SP+-4
          CFI (cfiCond1075) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiPicker1076 Using cfiCommon1
          CFI (cfiPicker1076) NoFunction
          CFI (cfiPicker1076) Picker
        MOVX      @DPTR,A
        MOV       DPL,R4
        MOV       DPH,R5
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        RET
          CFI EndBlock cfiCond1072
          CFI EndBlock cfiCond1073
          CFI EndBlock cfiCond1074
          CFI EndBlock cfiCond1075
          CFI EndBlock cfiPicker1076
// 2958 
// 2959 /*********************************************************************
// 2960  * @fn      zclClosures_SendDoorLockGetYearDayScheduleResponse
// 2961  *
// 2962  * @brief   Call to send out a Get Year Day Schedule Response
// 2963  *
// 2964  * @param   srcEP - Sending application's endpoint
// 2965  * @param   dstAddr - where you want the message to go
// 2966  * @param   pCmd:
// 2967  *             scheduleID - The Schedule ID # is between 0 - [# Schedule IDs per user attribute]
// 2968  *             userID - User ID is between 0 - [# PINs User supported attribute]
// 2969  *             status - Returns the state due to the requesting command
// 2970  *             zigBeeLocalStartTime - Start time of the Year Day Schedule representing by ZigBeeLocalTime
// 2971  *             zigBeeLocalEndTime - End time of the Year Day Schedule representing by ZigBeeLocalTime
// 2972  * @param   disableDefaultRsp - decides default response is necessary or not
// 2973  * @param   seqNum - sequence number of the command packet
// 2974  *
// 2975  * @return  ZStatus_t
// 2976  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2977 ZStatus_t zclClosures_SendDoorLockGetYearDayScheduleResponse( uint8 srcEP, afAddrType_t *dstAddr,
zclClosures_SendDoorLockGetYearDayScheduleResponse:
          CFI Block cfiBlock1077 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockGetYearDayScheduleResponse
        CODE
// 2978                                                               zclDoorLockGetYearDayScheduleRsp_t *pCmd,
// 2979                                                               uint8 disableDefaultRsp, uint8 seqNum )
// 2980 {
        FUNCALL zclClosures_SendDoorLockGetYearDayScheduleResponse, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 37, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 37, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        MOV       A,#-0xe
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 12
        MOV       A,#-0xc
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 26)
        MOV       A,R1
        MOV       R6,A
// 2981   uint8 payload[PAYLOAD_LEN_GET_YEAR_DAY_SCHEDULE_RSP];
// 2982   uint8 payloadLen = sizeof( payload );
        MOV       R1,#0xc
// 2983 
// 2984   payload[0] = pCmd->scheduleID;
        LCALL     ?Subroutine33 & 0xFFFF
// 2985   payload[1] = LO_UINT16( pCmd->userID );
??CrossCallReturnLabel_79:
        MOV       ?V2,A
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP0_8
        MOV       A,?V2
        LCALL     ?Subroutine79 & 0xFFFF
// 2986   payload[2] = HI_UINT16( pCmd->userID );
??CrossCallReturnLabel_186:
        INC       DPTR
        MOVX      A,@DPTR
        MOV       ?V0,A
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        MOV       A,?V0
        MOVX      @DPTR,A
// 2987   payload[3] = pCmd->status;
        MOV       A,R4
        ADD       A,#0x3
        MOV       ?V0,A
        CLR       A
        ADDC      A,R5
        MOV       ?V1,A
        MOV       DPL,?V0
        MOV       DPH,A
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x3
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        LCALL     ?Subroutine78 & 0xFFFF
// 2988 
// 2989   if ( pCmd->status == ZCL_STATUS_SUCCESS )
??CrossCallReturnLabel_183:
        JZ        $+5
        LJMP      ??zclClosures_SendDoorLockGetYearDayScheduleRes_1 & 0xFFFF
// 2990   {
// 2991     payload[4] = BREAK_UINT32( pCmd->zigBeeLocalStartTime, 0 );
        MOV       A,R4
        ADD       A,#0x4
        LCALL     ?Subroutine83 & 0xFFFF
??CrossCallReturnLabel_194:
        LCALL     ?L_MOV_X
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine58 & 0xFFFF
// 2992     payload[5] = BREAK_UINT32( pCmd->zigBeeLocalStartTime, 1 );
??CrossCallReturnLabel_127:
        LCALL     ?L_MOV_X
        MOV       A,?V1
        MOV       ?V0,A
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine58 & 0xFFFF
// 2993     payload[6] = BREAK_UINT32( pCmd->zigBeeLocalStartTime, 2 );
??CrossCallReturnLabel_128:
        LCALL     ?L_MOV_X
        MOV       A,#0x10
        MOV       R0,#?V0
        LCALL     ?UL_SHR
        MOV       A,#0x6
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine58 & 0xFFFF
// 2994     payload[7] = BREAK_UINT32( pCmd->zigBeeLocalStartTime, 3 );
??CrossCallReturnLabel_129:
        LCALL     ?L_MOV_X
        MOV       A,#0x18
        MOV       R0,#?V0
        LCALL     ?UL_SHR
        MOV       A,#0x7
        LCALL     ?XSTACK_DISP0_8
        MOV       A,?V0
        MOVX      @DPTR,A
// 2995     payload[8] = BREAK_UINT32( pCmd->zigBeeLocalEndTime, 0 );
        MOV       A,R4
        ADD       A,#0x8
        MOV       R4,A
        JNC       ??zclClosures_SendDoorLockGetYearDayScheduleRes_2
        INC       R5
??zclClosures_SendDoorLockGetYearDayScheduleRes_2:
        MOV       DPL,R4
        MOV       DPH,R5
        MOV       R0,#?V0
        LCALL     ?L_MOV_X
        MOV       A,#0x8
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine69 & 0xFFFF
// 2996     payload[9] = BREAK_UINT32( pCmd->zigBeeLocalEndTime, 1 );
// 2997     payload[10] = BREAK_UINT32( pCmd->zigBeeLocalEndTime, 2 );
// 2998     payload[11] = BREAK_UINT32( pCmd->zigBeeLocalEndTime, 3 );
// 2999   }
??CrossCallReturnLabel_161:
        LCALL     ?L_MOV_X
        MOV       A,?V1
        MOV       ?V0,A
        MOV       A,#0x9
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine69 & 0xFFFF
??CrossCallReturnLabel_162:
        LCALL     ?L_MOV_X
        MOV       A,#0x10
        MOV       R0,#?V0
        LCALL     ?UL_SHR
        MOV       A,#0xa
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine69 & 0xFFFF
??CrossCallReturnLabel_163:
        LCALL     ?L_MOV_X
        MOV       A,#0x18
        MOV       R0,#?V0
        LCALL     ?UL_SHR
        MOV       A,#0xb
        LCALL     ?XSTACK_DISP0_8
        MOV       A,?V0
        MOVX      @DPTR,A
        SJMP      ??zclClosures_SendDoorLockGetYearDayScheduleRes_3
// 3000   else
// 3001   {
// 3002     payloadLen = 4;
??zclClosures_SendDoorLockGetYearDayScheduleRes_1:
        MOV       R1,#0x4
// 3003   }
// 3004 
// 3005   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_CLOSURES_DOOR_LOCK,
// 3006                           COMMAND_CLOSURES_GET_YEAR_DAY_SCHEDULE_RSP, TRUE, ZCL_FRAME_SERVER_CLIENT_DIR,
// 3007                           disableDefaultRsp, 0, seqNum, payloadLen, payload );
??zclClosures_SendDoorLockGetYearDayScheduleRes_3:
        ; Setup parameters for call to function zcl_SendCommand
        MOV       R4,?XSP + 0
        MOV       R5,?XSP + 1
        MOV       ?V0,R4
        MOV       ?V1,R5
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 28)
        MOV       A,R1
        MOV       ?V0,A
        MOV       ?V1,#0x0
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 30)
        MOV       A,#0x1f
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine18 & 0xFFFF
??CrossCallReturnLabel_35:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 31)
        CLR       A
        MOV       ?V0,A
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 33)
        MOV       A,#0x21
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine18 & 0xFFFF
??CrossCallReturnLabel_36:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 34)
        MOV       ?V0,#0x1
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 35)
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 36)
        MOV       ?V0,#0xf
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 37)
        MOV       R4,#0x1
        MOV       R5,#0x1
        MOV       A,R6
        MOV       R1,A
        LCALL     `??zcl_SendCommand::?relay`; Banked call to: zcl_SendCommand
        MOV       A,#0xb
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 26)
        MOV       A,#0xc
          CFI EndBlock cfiBlock1077
        REQUIRE ?Subroutine6
        ; // Fall through to label ?Subroutine6
// 3008 }

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine6:
          CFI Block cfiBlock1078 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 26)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI Invalid
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Valid
        MOV       R7,#0x6
        LJMP      ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock1078

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine69:
          CFI Block cfiCond1079 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockGetYearDayScheduleResponse
          CFI Conditional ??CrossCallReturnLabel_161
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond1080 Using cfiCommon0
          CFI (cfiCond1080) Function zclClosures_SendDoorLockGetYearDayScheduleResponse
          CFI (cfiCond1080) Conditional ??CrossCallReturnLabel_162
          CFI (cfiCond1080) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1080) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1080) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1080) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1080) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1080) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1080) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1080) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1080) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1080) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1080) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1080) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1080) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1080) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1080) CFA_SP SP+-2
          CFI (cfiCond1080) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond1081 Using cfiCommon0
          CFI (cfiCond1081) Function zclClosures_SendDoorLockGetYearDayScheduleResponse
          CFI (cfiCond1081) Conditional ??CrossCallReturnLabel_163
          CFI (cfiCond1081) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1081) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1081) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1081) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1081) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1081) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1081) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1081) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1081) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1081) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1081) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1081) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1081) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1081) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1081) CFA_SP SP+-2
          CFI (cfiCond1081) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiPicker1082 Using cfiCommon1
          CFI (cfiPicker1082) NoFunction
          CFI (cfiPicker1082) Picker
        MOV       A,?V0
        LCALL     ?Subroutine113 & 0xFFFF
??CrossCallReturnLabel_252:
        MOV       R0,#?V0
        RET
          CFI EndBlock cfiCond1079
          CFI EndBlock cfiCond1080
          CFI EndBlock cfiCond1081
          CFI EndBlock cfiPicker1082
// 3009 
// 3010 /*********************************************************************
// 3011  * @fn      zclClosures_SendDoorLockGetHolidayScheduleResponse
// 3012  *
// 3013  * @brief   Call to send out a Get Holiday Schedule Response
// 3014  *
// 3015  * @param   srcEP - Sending application's endpoint
// 3016  * @param   dstAddr - where you want the message to go
// 3017  * @param   pCmd:
// 3018  *             holidayScheduleID - A unique ID for given Holiday Schedule (0 to 254)
// 3019  *             status - Returns the state due to the requesting command
// 3020  *             zigBeeLocalStartTime - Start time of the Year Day Schedule representing by ZigBeeLocalTime
// 3021  *             zigBeeLocalEndTime - End time of the Year Day Schedule representing by ZigBeeLocalTime
// 3022  *             operatingModeDuringHoliday - A valid enumeration value as listed in operating mode attribute
// 3023  * @param   disableDefaultRsp - decides default response is necessary or not
// 3024  * @param   seqNum - sequence number of the command packet
// 3025  *
// 3026  * @return  ZStatus_t
// 3027  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 3028 ZStatus_t zclClosures_SendDoorLockGetHolidayScheduleResponse( uint8 srcEP, afAddrType_t *dstAddr,
zclClosures_SendDoorLockGetHolidayScheduleResponse:
          CFI Block cfiBlock1083 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockGetHolidayScheduleResponse
        CODE
// 3029                                                               zclDoorLockGetHolidayScheduleRsp_t *pCmd,
// 3030                                                               uint8 disableDefaultRsp, uint8 seqNum )
// 3031 {
        FUNCALL zclClosures_SendDoorLockGetHolidayScheduleResponse, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 36, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 36, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        MOV       A,#-0xe
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 11
        MOV       A,#-0xb
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 25)
        MOV       A,R1
        MOV       R6,A
// 3032   uint8 payload[PAYLOAD_LEN_GET_HOLIDAY_SCHEDULE_RSP];
// 3033   uint8 payloadLen = sizeof( payload );
        MOV       R1,#0xb
// 3034 
// 3035   payload[0] = pCmd->holidayScheduleID;
        LCALL     ?Subroutine33 & 0xFFFF
// 3036   payload[1] = pCmd->status;
??CrossCallReturnLabel_80:
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        LCALL     ?Subroutine78 & 0xFFFF
// 3037 
// 3038   if ( pCmd->status == ZCL_STATUS_SUCCESS )
??CrossCallReturnLabel_184:
        JZ        $+5
        LJMP      ??zclClosures_SendDoorLockGetHolidayScheduleRes_1 & 0xFFFF
// 3039   {
// 3040     payload[2] = BREAK_UINT32( pCmd->zigBeeLocalStartTime, 0 );
        MOV       A,R4
        ADD       A,#0x2
        LCALL     ?Subroutine83 & 0xFFFF
??CrossCallReturnLabel_195:
        LCALL     ?L_MOV_X
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine58 & 0xFFFF
// 3041     payload[3] = BREAK_UINT32( pCmd->zigBeeLocalStartTime, 1 );
??CrossCallReturnLabel_130:
        LCALL     ?L_MOV_X
        MOV       A,?V1
        MOV       ?V0,A
        MOV       A,#0x3
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine58 & 0xFFFF
// 3042     payload[4] = BREAK_UINT32( pCmd->zigBeeLocalStartTime, 2 );
??CrossCallReturnLabel_131:
        LCALL     ?L_MOV_X
        MOV       A,#0x10
        MOV       R0,#?V0
        LCALL     ?UL_SHR
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine58 & 0xFFFF
// 3043     payload[5] = BREAK_UINT32( pCmd->zigBeeLocalStartTime, 3 );
??CrossCallReturnLabel_132:
        LCALL     ?L_MOV_X
        MOV       A,#0x18
        MOV       R0,#?V0
        LCALL     ?UL_SHR
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP0_8
        MOV       A,?V0
        MOVX      @DPTR,A
// 3044     payload[6] = BREAK_UINT32( pCmd->zigBeeLocalEndTime, 0 );
        MOV       A,R4
        ADD       A,#0x6
        LCALL     ?Subroutine83 & 0xFFFF
// 3045     payload[7] = BREAK_UINT32( pCmd->zigBeeLocalEndTime, 1 );
// 3046     payload[8] = BREAK_UINT32( pCmd->zigBeeLocalEndTime, 2 );
// 3047     payload[9] = BREAK_UINT32( pCmd->zigBeeLocalEndTime, 3 );
// 3048     payload[10] = pCmd->operatingModeDuringHoliday;
// 3049   }
??CrossCallReturnLabel_196:
        LCALL     ?L_MOV_X
        MOV       A,#0x6
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine58 & 0xFFFF
??CrossCallReturnLabel_133:
        LCALL     ?L_MOV_X
        MOV       A,?V1
        MOV       ?V0,A
        MOV       A,#0x7
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine58 & 0xFFFF
??CrossCallReturnLabel_134:
        LCALL     ?L_MOV_X
        MOV       A,#0x10
        MOV       R0,#?V0
        LCALL     ?UL_SHR
        MOV       A,#0x8
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine58 & 0xFFFF
??CrossCallReturnLabel_135:
        LCALL     ?L_MOV_X
        MOV       A,#0x18
        MOV       R0,#?V0
        LCALL     ?UL_SHR
        MOV       A,#0x9
        LCALL     ?XSTACK_DISP0_8
        MOV       A,?V0
        LCALL     ?Subroutine66 & 0xFFFF
??CrossCallReturnLabel_155:
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0xa
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
        SJMP      ??zclClosures_SendDoorLockGetHolidayScheduleRes_2
// 3050   else
// 3051   {
// 3052     payloadLen = 2;
??zclClosures_SendDoorLockGetHolidayScheduleRes_1:
        MOV       R1,#0x2
// 3053   }
// 3054 
// 3055   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_CLOSURES_DOOR_LOCK,
// 3056                           COMMAND_CLOSURES_GET_HOLIDAY_SCHEDULE_RSP, TRUE, ZCL_FRAME_SERVER_CLIENT_DIR,
// 3057                           disableDefaultRsp, 0, seqNum, payloadLen, payload );
??zclClosures_SendDoorLockGetHolidayScheduleRes_2:
        ; Setup parameters for call to function zcl_SendCommand
        MOV       R4,?XSP + 0
        MOV       R5,?XSP + 1
        MOV       ?V0,R4
        MOV       ?V1,R5
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 27)
        MOV       A,R1
        MOV       ?V0,A
        MOV       ?V1,#0x0
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 29)
        MOV       A,#0x1e
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine18 & 0xFFFF
??CrossCallReturnLabel_37:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 30)
        CLR       A
        MOV       ?V0,A
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 32)
        MOV       A,#0x20
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine18 & 0xFFFF
??CrossCallReturnLabel_38:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 33)
        MOV       ?V0,#0x1
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 34)
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 35)
        MOV       ?V0,#0x12
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 36)
        MOV       R4,#0x1
        MOV       R5,#0x1
        MOV       A,R6
        MOV       R1,A
        LCALL     `??zcl_SendCommand::?relay`; Banked call to: zcl_SendCommand
        MOV       A,#0xb
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 25)
        MOV       A,#0xb
        LJMP      ?Subroutine6 & 0xFFFF
// 3058 }
          CFI EndBlock cfiBlock1083

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine83:
          CFI Block cfiCond1084 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockGetYearDayScheduleResponse
          CFI Conditional ??CrossCallReturnLabel_194
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond1085 Using cfiCommon0
          CFI (cfiCond1085) Function zclClosures_SendDoorLockGetHolidayScheduleResponse
          CFI (cfiCond1085) Conditional ??CrossCallReturnLabel_195
          CFI (cfiCond1085) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1085) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1085) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1085) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1085) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1085) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1085) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1085) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1085) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1085) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1085) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1085) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1085) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1085) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1085) CFA_SP SP+-2
          CFI (cfiCond1085) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond1086 Using cfiCommon0
          CFI (cfiCond1086) Function zclClosures_SendDoorLockGetHolidayScheduleResponse
          CFI (cfiCond1086) Conditional ??CrossCallReturnLabel_196
          CFI (cfiCond1086) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1086) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1086) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1086) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1086) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1086) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1086) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1086) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1086) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1086) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1086) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1086) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1086) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1086) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1086) CFA_SP SP+-2
          CFI (cfiCond1086) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiPicker1087 Using cfiCommon1
          CFI (cfiPicker1087) NoFunction
          CFI (cfiPicker1087) Picker
        MOV       ?V0,A
        CLR       A
        ADDC      A,R5
        MOV       ?V4,?V0
        MOV       ?V5,A
        MOV       DPL,?V4
        MOV       DPH,A
        MOV       R0,#?V0
        RET
          CFI EndBlock cfiCond1084
          CFI EndBlock cfiCond1085
          CFI EndBlock cfiCond1086
          CFI EndBlock cfiPicker1087

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine78:
          CFI Block cfiCond1088 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockGetYearDayScheduleResponse
          CFI Conditional ??CrossCallReturnLabel_183
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond1089 Using cfiCommon0
          CFI (cfiCond1089) Function zclClosures_SendDoorLockGetHolidayScheduleResponse
          CFI (cfiCond1089) Conditional ??CrossCallReturnLabel_184
          CFI (cfiCond1089) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1089) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1089) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1089) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1089) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1089) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1089) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1089) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1089) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1089) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1089) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1089) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1089) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1089) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1089) CFA_SP SP+-2
          CFI (cfiCond1089) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiPicker1090 Using cfiCommon1
          CFI (cfiPicker1090) NoFunction
          CFI (cfiPicker1090) Picker
        LCALL     ?Subroutine108 & 0xFFFF
??CrossCallReturnLabel_238:
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond1088
          CFI EndBlock cfiCond1089
          CFI EndBlock cfiPicker1090

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine66:
          CFI Block cfiCond1091 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockGetWeekDayScheduleResponse
          CFI Conditional ??CrossCallReturnLabel_154
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond1092 Using cfiCommon0
          CFI (cfiCond1092) Function zclClosures_SendDoorLockGetHolidayScheduleResponse
          CFI (cfiCond1092) Conditional ??CrossCallReturnLabel_155
          CFI (cfiCond1092) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1092) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1092) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1092) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1092) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1092) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1092) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1092) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1092) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1092) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1092) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1092) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1092) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1092) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1092) CFA_SP SP+-2
          CFI (cfiCond1092) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiPicker1093 Using cfiCommon1
          CFI (cfiPicker1093) NoFunction
          CFI (cfiPicker1093) Picker
        LCALL     ?Subroutine111 & 0xFFFF
??CrossCallReturnLabel_246:
        INC       DPTR
        INC       DPTR
        RET
          CFI EndBlock cfiCond1091
          CFI EndBlock cfiCond1092
          CFI EndBlock cfiPicker1093

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine58:
          CFI Block cfiCond1094 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockGetYearDayScheduleResponse
          CFI Conditional ??CrossCallReturnLabel_127
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond1095 Using cfiCommon0
          CFI (cfiCond1095) Function zclClosures_SendDoorLockGetYearDayScheduleResponse
          CFI (cfiCond1095) Conditional ??CrossCallReturnLabel_128
          CFI (cfiCond1095) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1095) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1095) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1095) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1095) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1095) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1095) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1095) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1095) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1095) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1095) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1095) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1095) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1095) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1095) CFA_SP SP+-2
          CFI (cfiCond1095) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond1096 Using cfiCommon0
          CFI (cfiCond1096) Function zclClosures_SendDoorLockGetYearDayScheduleResponse
          CFI (cfiCond1096) Conditional ??CrossCallReturnLabel_129
          CFI (cfiCond1096) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1096) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1096) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1096) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1096) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1096) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1096) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1096) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1096) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1096) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1096) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1096) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1096) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1096) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1096) CFA_SP SP+-2
          CFI (cfiCond1096) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond1097 Using cfiCommon0
          CFI (cfiCond1097) Function zclClosures_SendDoorLockGetHolidayScheduleResponse
          CFI (cfiCond1097) Conditional ??CrossCallReturnLabel_130
          CFI (cfiCond1097) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1097) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1097) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1097) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1097) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1097) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1097) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1097) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1097) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1097) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1097) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1097) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1097) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1097) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1097) CFA_SP SP+-2
          CFI (cfiCond1097) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond1098 Using cfiCommon0
          CFI (cfiCond1098) Function zclClosures_SendDoorLockGetHolidayScheduleResponse
          CFI (cfiCond1098) Conditional ??CrossCallReturnLabel_131
          CFI (cfiCond1098) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1098) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1098) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1098) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1098) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1098) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1098) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1098) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1098) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1098) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1098) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1098) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1098) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1098) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1098) CFA_SP SP+-2
          CFI (cfiCond1098) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond1099 Using cfiCommon0
          CFI (cfiCond1099) Function zclClosures_SendDoorLockGetHolidayScheduleResponse
          CFI (cfiCond1099) Conditional ??CrossCallReturnLabel_132
          CFI (cfiCond1099) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1099) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1099) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1099) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1099) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1099) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1099) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1099) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1099) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1099) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1099) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1099) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1099) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1099) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1099) CFA_SP SP+-2
          CFI (cfiCond1099) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond1100 Using cfiCommon0
          CFI (cfiCond1100) Function zclClosures_SendDoorLockGetHolidayScheduleResponse
          CFI (cfiCond1100) Conditional ??CrossCallReturnLabel_133
          CFI (cfiCond1100) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1100) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1100) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1100) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1100) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1100) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1100) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1100) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1100) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1100) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1100) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1100) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1100) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1100) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1100) CFA_SP SP+-2
          CFI (cfiCond1100) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond1101 Using cfiCommon0
          CFI (cfiCond1101) Function zclClosures_SendDoorLockGetHolidayScheduleResponse
          CFI (cfiCond1101) Conditional ??CrossCallReturnLabel_134
          CFI (cfiCond1101) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1101) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1101) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1101) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1101) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1101) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1101) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1101) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1101) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1101) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1101) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1101) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1101) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1101) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1101) CFA_SP SP+-2
          CFI (cfiCond1101) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond1102 Using cfiCommon0
          CFI (cfiCond1102) Function zclClosures_SendDoorLockGetHolidayScheduleResponse
          CFI (cfiCond1102) Conditional ??CrossCallReturnLabel_135
          CFI (cfiCond1102) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1102) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1102) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1102) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1102) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1102) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1102) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1102) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1102) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1102) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1102) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1102) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1102) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1102) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1102) CFA_SP SP+-2
          CFI (cfiCond1102) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiPicker1103 Using cfiCommon1
          CFI (cfiPicker1103) NoFunction
          CFI (cfiPicker1103) Picker
        MOV       A,?V0
        MOVX      @DPTR,A
        MOV       DPL,?V4
        MOV       DPH,?V5
        MOV       R0,#?V0
        RET
          CFI EndBlock cfiCond1094
          CFI EndBlock cfiCond1095
          CFI EndBlock cfiCond1096
          CFI EndBlock cfiCond1097
          CFI EndBlock cfiCond1098
          CFI EndBlock cfiCond1099
          CFI EndBlock cfiCond1100
          CFI EndBlock cfiCond1101
          CFI EndBlock cfiCond1102
          CFI EndBlock cfiPicker1103

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine33:
          CFI Block cfiCond1104 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockGetYearDayScheduleResponse
          CFI Conditional ??CrossCallReturnLabel_79
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond1105 Using cfiCommon0
          CFI (cfiCond1105) Function zclClosures_SendDoorLockGetHolidayScheduleResponse
          CFI (cfiCond1105) Conditional ??CrossCallReturnLabel_80
          CFI (cfiCond1105) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1105) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1105) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1105) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1105) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1105) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1105) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1105) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1105) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1105) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1105) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1105) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1105) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1105) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1105) CFA_SP SP+-2
          CFI (cfiCond1105) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiPicker1106 Using cfiCommon1
          CFI (cfiPicker1106) NoFunction
          CFI (cfiPicker1106) Picker
        LCALL     ?Subroutine91 & 0xFFFF
??CrossCallReturnLabel_216:
        MOV       ?V0,DPL
        MOV       ?V1,DPH
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond1104
          CFI EndBlock cfiCond1105
          CFI EndBlock cfiPicker1106

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine91:
          CFI Block cfiCond1107 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockGetWeekDayScheduleResponse
          CFI Conditional ??CrossCallReturnLabel_215
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond1108 Using cfiCommon0
          CFI (cfiCond1108) Function zclClosures_SendDoorLockGetYearDayScheduleResponse
          CFI (cfiCond1108) Conditional ??CrossCallReturnLabel_216, ??CrossCallReturnLabel_79
          CFI (cfiCond1108) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1108) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1108) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1108) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1108) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1108) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1108) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1108) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1108) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1108) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1108) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1108) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1108) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1108) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1108) CFA_SP SP+-4
          CFI (cfiCond1108) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond1109 Using cfiCommon0
          CFI (cfiCond1109) Function zclClosures_SendDoorLockGetHolidayScheduleResponse
          CFI (cfiCond1109) Conditional ??CrossCallReturnLabel_216, ??CrossCallReturnLabel_80
          CFI (cfiCond1109) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1109) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1109) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1109) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1109) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1109) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1109) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1109) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1109) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1109) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1109) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1109) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1109) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1109) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1109) CFA_SP SP+-4
          CFI (cfiCond1109) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiPicker1110 Using cfiCommon1
          CFI (cfiPicker1110) NoFunction
          CFI (cfiPicker1110) Picker
        MOV       DPL,R4
        MOV       DPH,R5
        LCALL     ?Subroutine121 & 0xFFFF
??CrossCallReturnLabel_262:
        MOV       DPL,R4
        MOV       DPH,R5
        INC       DPTR
        RET
          CFI EndBlock cfiCond1107
          CFI EndBlock cfiCond1108
          CFI EndBlock cfiCond1109
          CFI EndBlock cfiPicker1110

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine121:
          CFI Block cfiCond1111 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockSetYearDaySchedule
          CFI Conditional ??CrossCallReturnLabel_261, ??CrossCallReturnLabel_211, ??CrossCallReturnLabel_57
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-6
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond1112 Using cfiCommon0
          CFI (cfiCond1112) Function zclClosures_ProcessInDoorLockSetHolidaySchedule
          CFI (cfiCond1112) Conditional ??CrossCallReturnLabel_261, ??CrossCallReturnLabel_211, ??CrossCallReturnLabel_58
          CFI (cfiCond1112) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1112) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1112) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1112) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1112) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1112) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1112) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1112) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1112) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1112) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1112) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1112) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1112) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1112) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1112) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1112) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1112) CFA_SP SP+-6
          CFI (cfiCond1112) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond1113 Using cfiCommon0
          CFI (cfiCond1113) Function zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
          CFI (cfiCond1113) Conditional ??CrossCallReturnLabel_261, ??CrossCallReturnLabel_212, ??CrossCallReturnLabel_67
          CFI (cfiCond1113) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1113) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1113) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1113) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1113) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1113) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1113) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1113) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1113) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1113) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1113) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1113) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1113) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1113) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1113) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1113) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1113) CFA_SP SP+-6
          CFI (cfiCond1113) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond1114 Using cfiCommon0
          CFI (cfiCond1114) Function zclClosures_ProcessInDoorLockGetHolidayScheduleRsp
          CFI (cfiCond1114) Conditional ??CrossCallReturnLabel_261, ??CrossCallReturnLabel_212, ??CrossCallReturnLabel_68
          CFI (cfiCond1114) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1114) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1114) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1114) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1114) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1114) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1114) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1114) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1114) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1114) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1114) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1114) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1114) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1114) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1114) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1114) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1114) CFA_SP SP+-6
          CFI (cfiCond1114) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond1115 Using cfiCommon0
          CFI (cfiCond1115) Function zclClosures_SendDoorLockGetWeekDayScheduleResponse
          CFI (cfiCond1115) Conditional ??CrossCallReturnLabel_262, ??CrossCallReturnLabel_215
          CFI (cfiCond1115) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1115) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1115) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1115) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1115) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1115) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1115) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1115) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1115) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1115) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1115) CFA_SP SP+-4
          CFI (cfiCond1115) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond1116 Using cfiCommon0
          CFI (cfiCond1116) Function zclClosures_SendDoorLockGetYearDayScheduleResponse
          CFI (cfiCond1116) Conditional ??CrossCallReturnLabel_262, ??CrossCallReturnLabel_216, ??CrossCallReturnLabel_79
          CFI (cfiCond1116) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1116) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1116) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1116) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1116) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1116) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1116) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1116) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1116) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1116) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1116) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1116) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1116) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1116) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1116) CFA_SP SP+-6
          CFI (cfiCond1116) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond1117 Using cfiCommon0
          CFI (cfiCond1117) Function zclClosures_SendDoorLockGetHolidayScheduleResponse
          CFI (cfiCond1117) Conditional ??CrossCallReturnLabel_262, ??CrossCallReturnLabel_216, ??CrossCallReturnLabel_80
          CFI (cfiCond1117) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1117) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1117) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1117) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1117) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1117) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1117) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1117) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1117) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1117) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1117) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1117) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1117) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1117) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1117) CFA_SP SP+-6
          CFI (cfiCond1117) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiPicker1118 Using cfiCommon1
          CFI (cfiPicker1118) NoFunction
          CFI (cfiPicker1118) Picker
        MOVX      A,@DPTR
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOVX      @DPTR,A
        RET
          CFI EndBlock cfiCond1111
          CFI EndBlock cfiCond1112
          CFI EndBlock cfiCond1113
          CFI EndBlock cfiCond1114
          CFI EndBlock cfiCond1115
          CFI EndBlock cfiCond1116
          CFI EndBlock cfiCond1117
          CFI EndBlock cfiPicker1118
// 3059 
// 3060 /*********************************************************************
// 3061  * @fn      zclClosures_SendDoorLockGetUserTypeResponse
// 3062  *
// 3063  * @brief   Call to send out a Get User Type Response
// 3064  *
// 3065  * @param   srcEP - Sending application's endpoint
// 3066  * @param   dstAddr - where you want the message to go
// 3067  * @param   userID - User ID is between 0 - [# PINs User supported attribute]
// 3068  * @param   userType - Used to indicate what the type is for a specific User ID
// 3069  * @param   disableDefaultRsp - decides default response is necessary or not
// 3070  * @param   seqNum - sequence number of the command packet
// 3071  *
// 3072  * @return  ZStatus_t
// 3073  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 3074 ZStatus_t zclClosures_SendDoorLockGetUserTypeResponse( uint8 srcEP, afAddrType_t *dstAddr,
zclClosures_SendDoorLockGetUserTypeResponse:
          CFI Block cfiBlock1119 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockGetUserTypeResponse
        CODE
// 3075                                                        uint16 userID, uint8 userType,
// 3076                                                        uint8 disableDefaultRsp, uint8 seqNum )
// 3077 {
        FUNCALL zclClosures_SendDoorLockGetUserTypeResponse, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 24, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV       A,#-0xa
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 3
        MOV       A,#-0x3
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 13)
        MOV       A,R1
        MOV       R6,A
// 3078   uint8 payload[PAYLOAD_LEN_GET_USER_TYPE_RSP];
// 3079 
// 3080   payload[0] = LO_UINT16(userID);
        MOV       A,R4
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOVX      @DPTR,A
// 3081   payload[1] = HI_UINT16(userID);
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP0_8
        MOV       A,R5
        MOVX      @DPTR,A
// 3082   payload[2] = userType;
        MOV       A,#0xd
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        LCALL     ??Subroutine173_0 & 0xFFFF
// 3083 
// 3084   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_CLOSURES_DOOR_LOCK,
// 3085                           COMMAND_CLOSURES_GET_USER_TYPE_RSP, TRUE, ZCL_FRAME_SERVER_CLIENT_DIR,
// 3086                           disableDefaultRsp, 0, seqNum, PAYLOAD_LEN_GET_USER_TYPE_RSP, payload );
??CrossCallReturnLabel_455:
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 15)
        MOV       ?V0,#0x3
        MOV       ?V1,#0x0
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 17)
        MOV       A,#0x13
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine18 & 0xFFFF
??CrossCallReturnLabel_39:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 18)
        CLR       A
        MOV       ?V0,A
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 20)
        MOV       A,#0x15
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine18 & 0xFFFF
??CrossCallReturnLabel_40:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 21)
        MOV       ?V0,#0x1
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 22)
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 23)
        MOV       ?V0,#0x15
          CFI EndBlock cfiBlock1119
        REQUIRE ?Subroutine1
        ; // Fall through to label ?Subroutine1
// 3087 }

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine1:
          CFI Block cfiBlock1120 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 23)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 24)
        MOV       R4,#0x1
        MOV       R5,#0x1
        MOV       A,R6
        MOV       R1,A
        LCALL     `??zcl_SendCommand::?relay`; Banked call to: zcl_SendCommand
        MOV       A,#0xb
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 13)
        MOV       A,#0x3
          CFI EndBlock cfiBlock1120
        REQUIRE ??Subroutine174_0
        ; // Fall through to label ??Subroutine174_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine174_0:
          CFI Block cfiBlock1121 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI Invalid
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Valid
        MOV       R7,#0x2
        LJMP      ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock1121
// 3088 
// 3089 /*********************************************************************
// 3090  * @fn      zclClosures_SendDoorLockGetRFIDCodeResponse
// 3091  *
// 3092  * @brief   Call to send out a Get RFID Code Response
// 3093  *
// 3094  * @param   srcEP - Sending application's endpoint
// 3095  * @param   dstAddr - where you want the message to go
// 3096  * @param   pPayload:
// 3097  *           userID - User ID is between 0 - [# PINs User supported attribute]
// 3098  *           userStatus - Used to indicate what the status is for a specific User ID
// 3099  *           userType - Used to indicate what the type is for a specific User ID
// 3100  *           aRfidCode - A ZigBee string indicating the RFID code used to create the event
// 3101  * @param   disableDefaultRsp - decides default response is necessary or not
// 3102  * @param   seqNum - sequence number of the command packet
// 3103  *
// 3104  * @return  ZStatus_t
// 3105  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 3106 ZStatus_t zclClosures_SendDoorLockGetRFIDCodeResponse( uint8 srcEP, afAddrType_t *dstAddr,
zclClosures_SendDoorLockGetRFIDCodeResponse:
          CFI Block cfiBlock1122 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockGetRFIDCodeResponse
        CODE
// 3107                                                        zclDoorLockGetRFIDCodeRsp_t *pPayload,
// 3108                                                        uint8 disableDefaultRsp, uint8 seqNum )
// 3109 {
        FUNCALL zclClosures_SendDoorLockGetRFIDCodeResponse, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclClosures_SendDoorLockGetRFIDCodeResponse, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 32, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 32, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclClosures_SendDoorLockGetRFIDCodeResponse, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        REQUIRE ?V10
        REQUIRE ?V11
        MOV       A,#-0x14
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 20)
        ; Saved register size: 20
        ; Auto size: 1
        MOV       A,#-0x1
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 21)
        LCALL     ?Subroutine12 & 0xFFFF
// 3110   uint8 i;
// 3111   uint8 *pBuf;  // variable length payload
// 3112   uint8 offset;
// 3113   uint8 calculatedArrayLen;
// 3114   uint8 calculatedBufSize;
// 3115   ZStatus_t status;
// 3116 
// 3117   // first octet of PIN/RFID Code variable string identifies its length
// 3118   calculatedArrayLen = pPayload->pRfidCode[0] + 1;   // add first byte of string
// 3119 
// 3120   // determine total size of buffer
// 3121   calculatedBufSize = calculatedArrayLen + PAYLOAD_LEN_GET_RFID_CODE_RSP;
// 3122 
// 3123   pBuf = zcl_mem_alloc( calculatedBufSize );
??CrossCallReturnLabel_11:
        LCALL     `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV       ?V6,R2
        MOV       ?V7,R3
// 3124   if ( !pBuf )
        MOV       A,R2
        ORL       A,?V7
        JNZ       ??zclClosures_SendDoorLockGetRFIDCodeResponse_0
// 3125   {
// 3126     return ( ZMemError );  // no memory
        MOV       R1,#0x10
        SJMP      ??zclClosures_SendDoorLockGetRFIDCodeResponse_1
// 3127   }
// 3128 
// 3129   // over-the-air is always little endian. Break into a byte stream.
// 3130   pBuf[0] = LO_UINT16(pPayload->userID);
??zclClosures_SendDoorLockGetRFIDCodeResponse_0:
        LCALL     ?Subroutine9 & 0xFFFF
// 3131   pBuf[1] = HI_UINT16(pPayload->userID);
// 3132   pBuf[2] = pPayload->userStatus;
// 3133   pBuf[3] = pPayload->userType;
// 3134   offset = 4;
// 3135   for ( i = 0; i < calculatedArrayLen; i++ )
??CrossCallReturnLabel_3:
        SJMP      ??zclClosures_SendDoorLockGetRFIDCodeResponse_2
// 3136   {
// 3137     pBuf[offset++] = pPayload->pRfidCode[i];
??zclClosures_SendDoorLockGetRFIDCodeResponse_3:
        LCALL     ?Subroutine10 & 0xFFFF
// 3138   }
??CrossCallReturnLabel_432:
        PUSH      A
          CFI CFA_SP SP+-1
        LCALL     ?Subroutine86 & 0xFFFF
??CrossCallReturnLabel_207:
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
        INC       R1
        INC       R0
??zclClosures_SendDoorLockGetRFIDCodeResponse_2:
        MOV       A,R0
        CLR       C
        SUBB      A,?V3
        JC        ??zclClosures_SendDoorLockGetRFIDCodeResponse_3
// 3139 
// 3140   status = zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_CLOSURES_DOOR_LOCK,
// 3141                             COMMAND_CLOSURES_GET_RFID_CODE_RSP, TRUE, ZCL_FRAME_SERVER_CLIENT_DIR,
// 3142                             disableDefaultRsp, 0, seqNum, calculatedBufSize, pBuf );
        ; Setup parameters for call to function zcl_SendCommand
        MOV       R0,#?V6
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 23)
        MOV       R0,#?V8
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 25)
        MOV       A,#0x1a
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine18 & 0xFFFF
??CrossCallReturnLabel_41:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 26)
        CLR       A
        MOV       ?V0,A
        MOV       ?V1,A
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 28)
        MOV       A,#0x1c
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine18 & 0xFFFF
??CrossCallReturnLabel_42:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 29)
        MOV       ?V0,#0x1
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 30)
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 31)
        MOV       ?V0,#0x17
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 32)
        MOV       R4,#0x1
        MOV       R5,#0x1
        MOV       A,R6
        MOV       R2,A
        MOV       A,R7
        MOV       R3,A
        MOV       R1,?V2
        LCALL     `??zcl_SendCommand::?relay`; Banked call to: zcl_SendCommand
        MOV       A,#0xb
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 21)
        MOV       A,R1
        MOV       R6,A
// 3143   zcl_mem_free( pBuf );
        ; Setup parameters for call to function osal_mem_free
        MOV       R2,?V6
        MOV       R3,?V7
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
// 3144   return status;
        MOV       A,R6
        MOV       R1,A
??zclClosures_SendDoorLockGetRFIDCodeResponse_1:
          CFI EndBlock cfiBlock1122
        REQUIRE ?Subroutine4
        ; // Fall through to label ?Subroutine4
// 3145 }

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine4:
          CFI Block cfiBlock1123 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 21)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV       A,#0x1
        LCALL     ?DEALLOC_XSTACK8
          CFI EndBlock cfiBlock1123
        REQUIRE ??Subroutine175_0
        ; // Fall through to label ??Subroutine175_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine175_0:
          CFI Block cfiBlock1124 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 20)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV       R7,#0xc
        LJMP      ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock1124
// 3146 
// 3147 /*********************************************************************
// 3148  * @fn      zclClosures_SendDoorLockOperationEventNotification
// 3149  *
// 3150  * @brief   Call to send out a Operation Event Notification
// 3151  *
// 3152  * @param   srcEP - Sending application's endpoint
// 3153  * @param   dstAddr - where you want the message to go
// 3154  * @param   pPayload:
// 3155  *           operationEventSource - Indicates where the event was triggered from
// 3156  *           operationEventCode - (Optional) a notification whenever there is a significant operation event on the lock
// 3157  *           userID - User ID is between 0 - [# PINs User supported attribute]
// 3158  *           pin - The PIN that is associated with the User ID who performed the event
// 3159  *           zigBeeLocalTime - Indicates when the event is triggered
// 3160  *           aData - Used to pass data associated with a particular event
// 3161  * @param   disableDefaultRsp - decides default response is necessary or not
// 3162  * @param   seqNum - sequence number of the command packet
// 3163  *
// 3164  * @return  ZStatus_t
// 3165  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 3166 ZStatus_t zclClosures_SendDoorLockOperationEventNotification( uint8 srcEP, afAddrType_t *dstAddr,
zclClosures_SendDoorLockOperationEventNotification:
          CFI Block cfiBlock1125 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockOperationEventNotification
        CODE
// 3167                                                               zclDoorLockOperationEventNotification_t *pPayload,
// 3168                                                               uint8 disableDefaultRsp, uint8 seqNum )
// 3169 {
        FUNCALL zclClosures_SendDoorLockOperationEventNotification, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclClosures_SendDoorLockOperationEventNotification, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 33, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 33, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclClosures_SendDoorLockOperationEventNotification, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        REQUIRE ?V10
        REQUIRE ?V11
        REQUIRE ?V12
        REQUIRE ?V13
        MOV       A,#-0x16
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 22)
        ; Saved register size: 22
        ; Auto size: 0
        MOV       ?V7,R1
        MOV       ?V12,R2
        MOV       ?V13,R3
        MOV       A,R4
        MOV       R6,A
        MOV       A,R5
        MOV       R7,A
// 3170   uint8 i;
// 3171   uint8 *pBuf;  // variable length payload
// 3172   uint8 offset;
// 3173   uint8 calculatedArrayLen;
// 3174   uint16 calculatedBufSize;
// 3175   ZStatus_t status;
// 3176 
// 3177   // set variable length if data is available
// 3178   calculatedArrayLen = pPayload->pData[0] + 1; // add first byte of string
        MOV       A,R6
        ADD       A,#0x9
        LCALL     ?Subroutine46 & 0xFFFF
// 3179 
// 3180   // determine total size of buffer
// 3181   calculatedBufSize = calculatedArrayLen + PAYLOAD_LEN_OPERATION_EVENT_NOTIFICATION;
??CrossCallReturnLabel_112:
        ADD       A,#0x9
        MOV       ?V2,A
        CLR       A
        ADDC      A,#0x0
        MOV       ?V3,A
// 3182 
// 3183   pBuf = zcl_mem_alloc( calculatedBufSize );
        ; Setup parameters for call to function osal_mem_alloc
        MOV       R2,?V2
        MOV       R3,A
        LCALL     `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV       ?V0,R2
        MOV       ?V1,R3
// 3184   if ( !pBuf )
        MOV       A,R2
        ORL       A,?V1
        JNZ       ??zclClosures_SendDoorLockOperationEventNotific_1
// 3185   {
// 3186     return ( ZMemError );  // no memory
        MOV       R1,#0x10
        LJMP      ??zclClosures_SendDoorLockOperationEventNotific_2 & 0xFFFF
// 3187   }
// 3188 
// 3189   // over-the-air is always little endian. Break into a byte stream.
// 3190   pBuf[0] = pPayload->operationEventSource;
??zclClosures_SendDoorLockOperationEventNotific_1:
        LCALL     ?Subroutine16 & 0xFFFF
// 3191   pBuf[1] = pPayload->operationEventCode;
// 3192   pBuf[2] = LO_UINT16( pPayload->userID );
// 3193   pBuf[3] = HI_UINT16( pPayload->userID );
// 3194   pBuf[4] = pPayload->pin;
// 3195   pBuf[5] = BREAK_UINT32(pPayload->zigBeeLocalTime, 0);
??CrossCallReturnLabel_12:
        MOV       A,R6
        ADD       A,#0x5
        LCALL     ?Subroutine82 & 0xFFFF
??CrossCallReturnLabel_192:
        LCALL     ?L_MOV_X
        MOV       DPL,?V0
        MOV       DPH,?V1
        LCALL     ??Subroutine177_0 & 0xFFFF
// 3196   pBuf[6] = BREAK_UINT32(pPayload->zigBeeLocalTime, 1);
??CrossCallReturnLabel_459:
        LCALL     ?L_MOV_X
        MOV       A,?V9
        MOV       DPL,?V0
        MOV       DPH,?V1
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        LCALL     ??Subroutine178_0 & 0xFFFF
// 3197   pBuf[7] = BREAK_UINT32(pPayload->zigBeeLocalTime, 2);
??CrossCallReturnLabel_460:
        LCALL     ?L_MOV_X
        MOV       A,#0x10
        MOV       R0,#?V8
        LCALL     ?UL_SHR
        LCALL     ?Subroutine62 & 0xFFFF
// 3198   pBuf[8] = BREAK_UINT32(pPayload->zigBeeLocalTime, 3);
??CrossCallReturnLabel_456:
        LCALL     ?L_MOV_X
        MOV       A,#0x18
        MOV       R0,#?V8
        LCALL     ?UL_SHR
        MOV       DPL,?V0
        MOV       DPH,?V1
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOV       A,?V8
        MOVX      @DPTR,A
// 3199   offset = 9;
        MOV       R1,#0x9
// 3200   for ( i = 0; i < calculatedArrayLen; i++ )
        MOV       R0,#0x0
        SJMP      ??zclClosures_SendDoorLockOperationEventNotific_3
// 3201   {
// 3202     pBuf[offset++] = pPayload->pData[i];
??zclClosures_SendDoorLockOperationEventNotific_4:
        LCALL     ?Subroutine10 & 0xFFFF
// 3203   }
??CrossCallReturnLabel_433:
        PUSH      A
          CFI CFA_SP SP+-1
        LCALL     ?Subroutine87 & 0xFFFF
??CrossCallReturnLabel_209:
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
        INC       R1
        INC       R0
??zclClosures_SendDoorLockOperationEventNotific_3:
        MOV       A,R0
        CLR       C
        SUBB      A,?V6
        JC        ??zclClosures_SendDoorLockOperationEventNotific_4
// 3204 
// 3205   status = zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_CLOSURES_DOOR_LOCK,
// 3206                             COMMAND_CLOSURES_OPERATION_EVENT_NOTIFICATION, TRUE, ZCL_FRAME_SERVER_CLIENT_DIR,
// 3207                             disableDefaultRsp, 0, seqNum, calculatedBufSize, pBuf );
        ; Setup parameters for call to function zcl_SendCommand
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 24)
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 26)
        MOV       A,#0x1b
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine44 & 0xFFFF
??CrossCallReturnLabel_106:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 27)
        CLR       A
        MOV       ?V2,A
        MOV       ?V3,A
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 29)
        MOV       A,#0x1d
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine44 & 0xFFFF
??CrossCallReturnLabel_107:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 30)
        MOV       ?V2,#0x1
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 31)
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 32)
        MOV       ?V2,#0x20
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 33)
        MOV       R4,#0x1
        MOV       R5,#0x1
        MOV       R2,?V12
        MOV       R3,?V13
        MOV       R1,?V7
        LCALL     `??zcl_SendCommand::?relay`; Banked call to: zcl_SendCommand
        MOV       A,#0xb
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 22)
        MOV       A,R1
        MOV       R6,A
// 3208   zcl_mem_free( pBuf );
        ; Setup parameters for call to function osal_mem_free
        MOV       R2,?V0
        MOV       R3,?V1
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
// 3209   return status;
        MOV       A,R6
        MOV       R1,A
??zclClosures_SendDoorLockOperationEventNotific_2:
        LJMP      ??Subroutine170_0 & 0xFFFF
// 3210 }
          CFI EndBlock cfiBlock1125

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine87:
          CFI Block cfiCond1126 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockGetLogRecordResponse
          CFI Conditional ??CrossCallReturnLabel_208
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond1127 Using cfiCommon0
          CFI (cfiCond1127) Function zclClosures_SendDoorLockOperationEventNotification
          CFI (cfiCond1127) Conditional ??CrossCallReturnLabel_209
          CFI (cfiCond1127) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1127) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1127) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1127) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1127) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1127) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1127) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1127) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1127) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1127) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1127) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1127) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1127) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1127) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1127) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1127) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1127) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1127) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1127) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1127) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1127) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1127) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1127) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond1128 Using cfiCommon0
          CFI (cfiCond1128) Function zclClosures_SendDoorLockProgrammingEventNotification
          CFI (cfiCond1128) Conditional ??CrossCallReturnLabel_210
          CFI (cfiCond1128) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1128) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1128) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1128) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1128) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1128) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1128) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1128) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1128) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1128) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1128) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1128) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1128) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1128) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1128) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1128) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1128) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1128) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1128) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1128) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1128) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1128) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1128) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker1129 Using cfiCommon1
          CFI (cfiPicker1129) NoFunction
          CFI (cfiPicker1129) Picker
        MOV       A,R1
        MOV       R2,A
        MOV       A,?V0
        ADD       A,R2
        MOV       DPL,A
        CLR       A
        ADDC      A,?V1
        MOV       DPH,A
        RET
          CFI EndBlock cfiCond1126
          CFI EndBlock cfiCond1127
          CFI EndBlock cfiCond1128
          CFI EndBlock cfiPicker1129

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine44:
          CFI Block cfiCond1130 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockGetLogRecordResponse
          CFI Conditional ??CrossCallReturnLabel_104
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond1131 Using cfiCommon0
          CFI (cfiCond1131) Function zclClosures_SendDoorLockGetLogRecordResponse
          CFI (cfiCond1131) Conditional ??CrossCallReturnLabel_105
          CFI (cfiCond1131) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1131) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1131) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1131) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1131) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1131) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1131) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1131) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1131) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1131) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1131) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1131) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1131) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1131) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1131) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1131) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1131) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1131) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1131) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1131) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1131) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1131) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1131) CFA_SP SP+-2
          CFI (cfiCond1131) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond1132 Using cfiCommon0
          CFI (cfiCond1132) Function zclClosures_SendDoorLockOperationEventNotification
          CFI (cfiCond1132) Conditional ??CrossCallReturnLabel_106
          CFI (cfiCond1132) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1132) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1132) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1132) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1132) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1132) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1132) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1132) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1132) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1132) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1132) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1132) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1132) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1132) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1132) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1132) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1132) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1132) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1132) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1132) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1132) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1132) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1132) CFA_SP SP+-2
          CFI (cfiCond1132) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond1133 Using cfiCommon0
          CFI (cfiCond1133) Function zclClosures_SendDoorLockOperationEventNotification
          CFI (cfiCond1133) Conditional ??CrossCallReturnLabel_107
          CFI (cfiCond1133) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1133) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1133) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1133) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1133) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1133) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1133) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1133) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1133) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1133) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1133) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1133) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1133) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1133) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1133) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1133) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1133) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1133) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1133) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1133) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1133) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1133) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1133) CFA_SP SP+-2
          CFI (cfiCond1133) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond1134 Using cfiCommon0
          CFI (cfiCond1134) Function zclClosures_SendDoorLockProgrammingEventNotification
          CFI (cfiCond1134) Conditional ??CrossCallReturnLabel_108
          CFI (cfiCond1134) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1134) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1134) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1134) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1134) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1134) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1134) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1134) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1134) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1134) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1134) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1134) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1134) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1134) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1134) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1134) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1134) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1134) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1134) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1134) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1134) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1134) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1134) CFA_SP SP+-2
          CFI (cfiCond1134) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond1135 Using cfiCommon0
          CFI (cfiCond1135) Function zclClosures_SendDoorLockProgrammingEventNotification
          CFI (cfiCond1135) Conditional ??CrossCallReturnLabel_109
          CFI (cfiCond1135) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1135) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1135) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1135) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1135) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1135) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1135) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1135) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1135) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1135) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1135) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1135) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1135) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1135) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1135) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1135) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1135) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1135) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1135) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1135) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1135) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1135) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1135) CFA_SP SP+-2
          CFI (cfiCond1135) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiPicker1136 Using cfiCommon1
          CFI (cfiPicker1136) NoFunction
          CFI (cfiPicker1136) Picker
        MOVX      A,@DPTR
        MOV       ?V2,A
        MOV       R0,#?V2
        RET
          CFI EndBlock cfiCond1130
          CFI EndBlock cfiCond1131
          CFI EndBlock cfiCond1132
          CFI EndBlock cfiCond1133
          CFI EndBlock cfiCond1134
          CFI EndBlock cfiCond1135
          CFI EndBlock cfiPicker1136
// 3211 
// 3212 /*********************************************************************
// 3213  * @fn      zclClosures_SendDoorLockProgrammingEventNotification
// 3214  *
// 3215  * @brief   Call to send out a Programming Event Notification
// 3216  *
// 3217  * @param   srcEP - Sending application's endpoint
// 3218  * @param   dstAddr - where you want the message to go
// 3219  * @param   pPayload:
// 3220  *           programEventSource - Indicates where the event was triggered from
// 3221  *           programEventCode - (Optional) a notification whenever there is a significant programming event on the lock
// 3222  *           userID - User ID is between 0 - [# PINs User supported attribute]
// 3223  *           pin - The PIN that is associated with the User ID who performed the event
// 3224  *           userType - Used to indicate what the type is for a specific User ID
// 3225  *           userStatus - Used to indicate what the status is for a specific User ID
// 3226  *           zigBeeLocalTime - Indicates when the event is triggered
// 3227  *           dataLen - Manufacture specific, describes length of aData
// 3228  *           aData - Used to pass data associated with a particular event
// 3229  * @param   disableDefaultRsp - decides default response is necessary or not
// 3230  * @param   seqNum - sequence number of the command packet
// 3231  *
// 3232  * @return  ZStatus_t
// 3233  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 3234 ZStatus_t zclClosures_SendDoorLockProgrammingEventNotification( uint8 srcEP, afAddrType_t *dstAddr,
zclClosures_SendDoorLockProgrammingEventNotification:
          CFI Block cfiBlock1137 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockProgrammingEventNotification
        CODE
// 3235                                                                 zclDoorLockProgrammingEventNotification_t *pPayload,
// 3236                                                                 uint8 disableDefaultRsp, uint8 seqNum )
// 3237 {
        FUNCALL zclClosures_SendDoorLockProgrammingEventNotification, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclClosures_SendDoorLockProgrammingEventNotification, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 33, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 33, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclClosures_SendDoorLockProgrammingEventNotification, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        REQUIRE ?V10
        REQUIRE ?V11
        REQUIRE ?V12
        REQUIRE ?V13
        MOV       A,#-0x16
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 22)
        ; Saved register size: 22
        ; Auto size: 0
        MOV       ?V7,R1
        MOV       ?V12,R2
        MOV       ?V13,R3
        MOV       A,R4
        MOV       R6,A
        MOV       A,R5
        MOV       R7,A
// 3238   uint8 i;
// 3239   uint8 *pBuf;  // variable length payload
// 3240   uint8 offset;
// 3241   uint8 calculatedArrayLen;
// 3242   uint16 calculatedBufSize;
// 3243   ZStatus_t status;
// 3244 
// 3245   // set variable length if data is available
// 3246   calculatedArrayLen = pPayload->pData[0] + 1;  // add first byte of string
        MOV       A,R6
        ADD       A,#0xb
        LCALL     ?Subroutine46 & 0xFFFF
// 3247 
// 3248   // determine total size of buffer
// 3249   calculatedBufSize = calculatedArrayLen + PAYLOAD_LEN_PROGRAMMING_EVENT_NOTIFICATION;
??CrossCallReturnLabel_113:
        ADD       A,#0xb
        MOV       ?V2,A
        CLR       A
        ADDC      A,#0x0
        MOV       ?V3,A
// 3250 
// 3251   pBuf = zcl_mem_alloc( calculatedBufSize );
        ; Setup parameters for call to function osal_mem_alloc
        MOV       R2,?V2
        MOV       R3,A
        LCALL     `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV       ?V0,R2
        MOV       ?V1,R3
// 3252   if ( !pBuf )
        MOV       A,R2
        ORL       A,?V1
        JNZ       ??zclClosures_SendDoorLockProgrammingEventNotif_1
// 3253   {
// 3254     return ( ZMemError );  // no memory
        MOV       R1,#0x10
        LJMP      ??zclClosures_SendDoorLockProgrammingEventNotif_2 & 0xFFFF
// 3255   }
// 3256 
// 3257   // over-the-air is always little endian. Break into a byte stream.
// 3258   pBuf[0] = pPayload->programEventSource;
??zclClosures_SendDoorLockProgrammingEventNotif_1:
        LCALL     ?Subroutine16 & 0xFFFF
// 3259   pBuf[1] = pPayload->programEventCode;
// 3260   pBuf[2] = LO_UINT16( pPayload->userID );
// 3261   pBuf[3] = HI_UINT16( pPayload->userID );
// 3262   pBuf[4] = pPayload->pin;
// 3263   pBuf[5] = pPayload->userType;
??CrossCallReturnLabel_13:
        MOV       DPL,R6
        MOV       DPH,R7
        LCALL     ?Subroutine52 & 0xFFFF
??CrossCallReturnLabel_121:
        LCALL     ?Subroutine74 & 0xFFFF
// 3264   pBuf[6] = pPayload->userStatus;
??CrossCallReturnLabel_174:
        LCALL     ?Subroutine52 & 0xFFFF
??CrossCallReturnLabel_122:
        INC       DPTR
        MOVX      @DPTR,A
// 3265   pBuf[7] = BREAK_UINT32(pPayload->zigBeeLocalTime, 0);
        MOV       A,R6
        ADD       A,#0x7
        LCALL     ?Subroutine82 & 0xFFFF
??CrossCallReturnLabel_193:
        LCALL     ?L_MOV_X
        LCALL     ?Subroutine62 & 0xFFFF
// 3266   pBuf[8] = BREAK_UINT32(pPayload->zigBeeLocalTime, 1);
??CrossCallReturnLabel_457:
        LCALL     ?L_MOV_X
        MOV       A,?V9
        MOV       DPL,?V0
        MOV       DPH,?V1
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        LCALL     ??Subroutine178_0 & 0xFFFF
// 3267   pBuf[9] = BREAK_UINT32(pPayload->zigBeeLocalTime, 2);
??CrossCallReturnLabel_461:
        LCALL     ?L_MOV_X
        MOV       A,#0x10
        MOV       R0,#?V8
        LCALL     ?UL_SHR
        MOV       DPL,?V0
        MOV       DPH,?V1
        INC       DPTR
        INC       DPTR
        LCALL     ??Subroutine176_0 & 0xFFFF
// 3268   pBuf[10] = BREAK_UINT32(pPayload->zigBeeLocalTime, 3);
??CrossCallReturnLabel_458:
        LCALL     ?L_MOV_X
        MOV       A,#0x18
        MOV       R0,#?V8
        LCALL     ?UL_SHR
        MOV       DPL,?V0
        MOV       DPH,?V1
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOV       A,?V8
        MOVX      @DPTR,A
// 3269   offset = 11;
        MOV       R1,#0xb
// 3270   for ( i = 0; i < calculatedArrayLen; i++ )
        MOV       R0,#0x0
        SJMP      ??zclClosures_SendDoorLockProgrammingEventNotif_3
// 3271   {
// 3272     pBuf[offset++] = pPayload->pData[i];
??zclClosures_SendDoorLockProgrammingEventNotif_4:
        LCALL     ?Subroutine10 & 0xFFFF
// 3273   }
??CrossCallReturnLabel_434:
        PUSH      A
          CFI CFA_SP SP+-1
        LCALL     ?Subroutine87 & 0xFFFF
??CrossCallReturnLabel_210:
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
        INC       R1
        INC       R0
??zclClosures_SendDoorLockProgrammingEventNotif_3:
        MOV       A,R0
        CLR       C
        SUBB      A,?V6
        JC        ??zclClosures_SendDoorLockProgrammingEventNotif_4
// 3274 
// 3275   status = zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_CLOSURES_DOOR_LOCK,
// 3276                             COMMAND_CLOSURES_PROGRAMMING_EVENT_NOTIFICATION, TRUE, ZCL_FRAME_SERVER_CLIENT_DIR,
// 3277                             disableDefaultRsp, 0, seqNum, calculatedBufSize, pBuf );
        ; Setup parameters for call to function zcl_SendCommand
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 24)
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 26)
        MOV       A,#0x1b
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine44 & 0xFFFF
??CrossCallReturnLabel_108:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 27)
        CLR       A
        MOV       ?V2,A
        MOV       ?V3,A
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 29)
        MOV       A,#0x1d
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine44 & 0xFFFF
??CrossCallReturnLabel_109:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 30)
        MOV       ?V2,#0x1
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 31)
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 32)
        MOV       ?V2,#0x21
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 33)
        MOV       R4,#0x1
        MOV       R5,#0x1
        MOV       R2,?V12
        MOV       R3,?V13
        MOV       R1,?V7
        LCALL     `??zcl_SendCommand::?relay`; Banked call to: zcl_SendCommand
        MOV       A,#0xb
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 22)
        MOV       A,R1
        MOV       R6,A
// 3278   zcl_mem_free( pBuf );
        ; Setup parameters for call to function osal_mem_free
        MOV       R2,?V0
        MOV       R3,?V1
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
// 3279   return status;
        MOV       A,R6
        MOV       R1,A
??zclClosures_SendDoorLockProgrammingEventNotif_2:
        LJMP      ??Subroutine170_0 & 0xFFFF
// 3280 }
          CFI EndBlock cfiBlock1137

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine82:
          CFI Block cfiCond1138 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockOperationEventNotification
          CFI Conditional ??CrossCallReturnLabel_192
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond1139 Using cfiCommon0
          CFI (cfiCond1139) Function zclClosures_SendDoorLockProgrammingEventNotification
          CFI (cfiCond1139) Conditional ??CrossCallReturnLabel_193
          CFI (cfiCond1139) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1139) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1139) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1139) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1139) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1139) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1139) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1139) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1139) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1139) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1139) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1139) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1139) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1139) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1139) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1139) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1139) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1139) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1139) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1139) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1139) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1139) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1139) CFA_SP SP+-2
          CFI (cfiCond1139) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker1140 Using cfiCommon1
          CFI (cfiPicker1140) NoFunction
          CFI (cfiPicker1140) Picker
        MOV       R2,A
        CLR       A
        ADDC      A,R7
        MOV       R3,A
        MOV       DPL,R2
        MOV       DPH,R3
        MOV       R0,#?V8
        RET
          CFI EndBlock cfiCond1138
          CFI EndBlock cfiCond1139
          CFI EndBlock cfiPicker1140

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine74:
          CFI Block cfiCond1141 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockGetLogRecordResponse
          CFI Conditional ??CrossCallReturnLabel_172
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond1142 Using cfiCommon0
          CFI (cfiCond1142) Function zclClosures_SendDoorLockGetLogRecordResponse
          CFI (cfiCond1142) Conditional ??CrossCallReturnLabel_173
          CFI (cfiCond1142) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1142) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1142) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1142) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1142) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1142) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1142) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1142) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1142) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1142) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1142) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1142) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1142) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1142) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1142) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1142) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1142) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1142) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1142) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1142) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1142) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1142) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1142) CFA_SP SP+-2
          CFI (cfiCond1142) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond1143 Using cfiCommon0
          CFI (cfiCond1143) Function zclClosures_SendDoorLockProgrammingEventNotification
          CFI (cfiCond1143) Conditional ??CrossCallReturnLabel_174
          CFI (cfiCond1143) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1143) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1143) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1143) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1143) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1143) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1143) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1143) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1143) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1143) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1143) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1143) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1143) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1143) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1143) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1143) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1143) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1143) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1143) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1143) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1143) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1143) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1143) CFA_SP SP+-2
          CFI (cfiCond1143) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker1144 Using cfiCommon1
          CFI (cfiPicker1144) NoFunction
          CFI (cfiPicker1144) Picker
        LCALL     ?Subroutine109 & 0xFFFF
??CrossCallReturnLabel_243:
        INC       DPTR
        RET
          CFI EndBlock cfiCond1141
          CFI EndBlock cfiCond1142
          CFI EndBlock cfiCond1143
          CFI EndBlock cfiPicker1144

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine62:
          CFI Block cfiCond1145 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockOperationEventNotification
          CFI Conditional ??CrossCallReturnLabel_456
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond1146 Using cfiCommon0
          CFI (cfiCond1146) Function zclClosures_SendDoorLockProgrammingEventNotification
          CFI (cfiCond1146) Conditional ??CrossCallReturnLabel_457
          CFI (cfiCond1146) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1146) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1146) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1146) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1146) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1146) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1146) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1146) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1146) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1146) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1146) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1146) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1146) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1146) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1146) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1146) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1146) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1146) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1146) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1146) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1146) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1146) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1146) CFA_SP SP+-2
          CFI (cfiCond1146) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker1147 Using cfiCommon1
          CFI (cfiPicker1147) NoFunction
          CFI (cfiPicker1147) Picker
        MOV       DPL,?V0
        MOV       DPH,?V1
          CFI EndBlock cfiCond1145
          CFI EndBlock cfiCond1146
          CFI EndBlock cfiPicker1147
        REQUIRE ??Subroutine176_0
        ; // Fall through to label ??Subroutine176_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine176_0:
          CFI Block cfiCond1148 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockProgrammingEventNotification
          CFI Conditional ??CrossCallReturnLabel_458
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond1149 Using cfiCommon0
          CFI (cfiCond1149) Function zclClosures_SendDoorLockOperationEventNotification
          CFI (cfiCond1149) Conditional ??CrossCallReturnLabel_456
          CFI (cfiCond1149) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1149) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1149) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1149) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1149) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1149) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1149) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1149) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1149) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1149) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1149) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1149) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1149) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1149) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1149) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1149) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1149) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1149) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1149) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1149) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1149) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1149) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1149) CFA_SP SP+-2
          CFI (cfiCond1149) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond1150 Using cfiCommon0
          CFI (cfiCond1150) Function zclClosures_SendDoorLockProgrammingEventNotification
          CFI (cfiCond1150) Conditional ??CrossCallReturnLabel_457
          CFI (cfiCond1150) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1150) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1150) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1150) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1150) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1150) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1150) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1150) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1150) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1150) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1150) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1150) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1150) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1150) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1150) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1150) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1150) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1150) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1150) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1150) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1150) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1150) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1150) CFA_SP SP+-2
          CFI (cfiCond1150) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker1151 Using cfiCommon1
          CFI (cfiPicker1151) NoFunction
          CFI (cfiPicker1151) Picker
        INC       DPTR
        INC       DPTR
          CFI EndBlock cfiCond1148
          CFI EndBlock cfiCond1149
          CFI EndBlock cfiCond1150
          CFI EndBlock cfiPicker1151
        REQUIRE ??Subroutine177_0
        ; // Fall through to label ??Subroutine177_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine177_0:
          CFI Block cfiCond1152 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockOperationEventNotification
          CFI Conditional ??CrossCallReturnLabel_459
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond1153 Using cfiCommon0
          CFI (cfiCond1153) Function zclClosures_SendDoorLockProgrammingEventNotification
          CFI (cfiCond1153) Conditional ??CrossCallReturnLabel_458
          CFI (cfiCond1153) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1153) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1153) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1153) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1153) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1153) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1153) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1153) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1153) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1153) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1153) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1153) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1153) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1153) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1153) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1153) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1153) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1153) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1153) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1153) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1153) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1153) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1153) CFA_SP SP+-2
          CFI (cfiCond1153) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond1154 Using cfiCommon0
          CFI (cfiCond1154) Function zclClosures_SendDoorLockOperationEventNotification
          CFI (cfiCond1154) Conditional ??CrossCallReturnLabel_456
          CFI (cfiCond1154) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1154) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1154) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1154) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1154) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1154) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1154) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1154) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1154) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1154) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1154) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1154) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1154) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1154) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1154) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1154) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1154) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1154) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1154) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1154) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1154) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1154) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1154) CFA_SP SP+-2
          CFI (cfiCond1154) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond1155 Using cfiCommon0
          CFI (cfiCond1155) Function zclClosures_SendDoorLockProgrammingEventNotification
          CFI (cfiCond1155) Conditional ??CrossCallReturnLabel_457
          CFI (cfiCond1155) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1155) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1155) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1155) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1155) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1155) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1155) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1155) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1155) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1155) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1155) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1155) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1155) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1155) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1155) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1155) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1155) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1155) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1155) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1155) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1155) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1155) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1155) CFA_SP SP+-2
          CFI (cfiCond1155) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker1156 Using cfiCommon1
          CFI (cfiPicker1156) NoFunction
          CFI (cfiPicker1156) Picker
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOV       A,?V8
          CFI EndBlock cfiCond1152
          CFI EndBlock cfiCond1153
          CFI EndBlock cfiCond1154
          CFI EndBlock cfiCond1155
          CFI EndBlock cfiPicker1156
        REQUIRE ??Subroutine178_0
        ; // Fall through to label ??Subroutine178_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine178_0:
          CFI Block cfiCond1157 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockOperationEventNotification
          CFI Conditional ??CrossCallReturnLabel_460
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond1158 Using cfiCommon0
          CFI (cfiCond1158) Function zclClosures_SendDoorLockProgrammingEventNotification
          CFI (cfiCond1158) Conditional ??CrossCallReturnLabel_461
          CFI (cfiCond1158) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1158) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1158) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1158) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1158) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1158) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1158) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1158) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1158) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1158) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1158) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1158) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1158) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1158) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1158) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1158) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1158) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1158) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1158) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1158) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1158) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1158) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1158) CFA_SP SP+-2
          CFI (cfiCond1158) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond1159 Using cfiCommon0
          CFI (cfiCond1159) Function zclClosures_SendDoorLockOperationEventNotification
          CFI (cfiCond1159) Conditional ??CrossCallReturnLabel_459
          CFI (cfiCond1159) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1159) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1159) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1159) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1159) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1159) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1159) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1159) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1159) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1159) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1159) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1159) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1159) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1159) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1159) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1159) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1159) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1159) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1159) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1159) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1159) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1159) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1159) CFA_SP SP+-2
          CFI (cfiCond1159) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond1160 Using cfiCommon0
          CFI (cfiCond1160) Function zclClosures_SendDoorLockProgrammingEventNotification
          CFI (cfiCond1160) Conditional ??CrossCallReturnLabel_458
          CFI (cfiCond1160) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1160) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1160) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1160) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1160) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1160) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1160) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1160) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1160) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1160) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1160) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1160) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1160) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1160) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1160) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1160) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1160) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1160) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1160) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1160) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1160) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1160) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1160) CFA_SP SP+-2
          CFI (cfiCond1160) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond1161 Using cfiCommon0
          CFI (cfiCond1161) Function zclClosures_SendDoorLockOperationEventNotification
          CFI (cfiCond1161) Conditional ??CrossCallReturnLabel_456
          CFI (cfiCond1161) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1161) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1161) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1161) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1161) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1161) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1161) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1161) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1161) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1161) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1161) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1161) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1161) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1161) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1161) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1161) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1161) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1161) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1161) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1161) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1161) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1161) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1161) CFA_SP SP+-2
          CFI (cfiCond1161) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond1162 Using cfiCommon0
          CFI (cfiCond1162) Function zclClosures_SendDoorLockProgrammingEventNotification
          CFI (cfiCond1162) Conditional ??CrossCallReturnLabel_457
          CFI (cfiCond1162) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1162) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1162) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1162) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1162) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1162) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1162) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1162) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1162) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1162) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1162) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1162) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1162) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1162) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1162) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1162) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1162) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1162) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1162) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1162) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1162) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1162) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1162) CFA_SP SP+-2
          CFI (cfiCond1162) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker1163 Using cfiCommon1
          CFI (cfiPicker1163) NoFunction
          CFI (cfiPicker1163) Picker
        MOVX      @DPTR,A
        MOV       DPL,R2
        MOV       DPH,R3
        MOV       R0,#?V8
        RET
          CFI EndBlock cfiCond1157
          CFI EndBlock cfiCond1158
          CFI EndBlock cfiCond1159
          CFI EndBlock cfiCond1160
          CFI EndBlock cfiCond1161
          CFI EndBlock cfiCond1162
          CFI EndBlock cfiPicker1163

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine52:
          CFI Block cfiCond1164 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockProgrammingEventNotification
          CFI Conditional ??CrossCallReturnLabel_121
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond1165 Using cfiCommon0
          CFI (cfiCond1165) Function zclClosures_SendDoorLockProgrammingEventNotification
          CFI (cfiCond1165) Conditional ??CrossCallReturnLabel_122
          CFI (cfiCond1165) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1165) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1165) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1165) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1165) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1165) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1165) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1165) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1165) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1165) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1165) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1165) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1165) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1165) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1165) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1165) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1165) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1165) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1165) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1165) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1165) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1165) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1165) CFA_SP SP+-2
          CFI (cfiCond1165) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker1166 Using cfiCommon1
          CFI (cfiPicker1166) NoFunction
          CFI (cfiPicker1166) Picker
        INC       DPTR
        LCALL     ?Subroutine104 & 0xFFFF
??CrossCallReturnLabel_232:
        INC       DPTR
        RET
          CFI EndBlock cfiCond1164
          CFI EndBlock cfiCond1165
          CFI EndBlock cfiPicker1166

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine46:
          CFI Block cfiCond1167 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockOperationEventNotification
          CFI Conditional ??CrossCallReturnLabel_112
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond1168 Using cfiCommon0
          CFI (cfiCond1168) Function zclClosures_SendDoorLockProgrammingEventNotification
          CFI (cfiCond1168) Conditional ??CrossCallReturnLabel_113
          CFI (cfiCond1168) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1168) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1168) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1168) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1168) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1168) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1168) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1168) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1168) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1168) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1168) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1168) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1168) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1168) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1168) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1168) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1168) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1168) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1168) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1168) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1168) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1168) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1168) CFA_SP SP+-2
          CFI (cfiCond1168) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker1169 Using cfiCommon1
          CFI (cfiPicker1169) NoFunction
          CFI (cfiPicker1169) Picker
        MOV       ?V4,A
        CLR       A
        ADDC      A,R7
        MOV       ?V5,A
        MOV       DPL,?V4
        LCALL     ?Subroutine89 & 0xFFFF
??CrossCallReturnLabel_438:
        MOV       ?V6,A
        RET
          CFI EndBlock cfiCond1167
          CFI EndBlock cfiCond1168
          CFI EndBlock cfiPicker1169

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine16:
          CFI Block cfiCond1170 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockOperationEventNotification
          CFI Conditional ??CrossCallReturnLabel_12
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond1171 Using cfiCommon0
          CFI (cfiCond1171) Function zclClosures_SendDoorLockProgrammingEventNotification
          CFI (cfiCond1171) Conditional ??CrossCallReturnLabel_13
          CFI (cfiCond1171) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1171) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1171) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1171) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1171) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1171) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1171) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1171) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1171) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1171) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1171) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1171) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1171) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1171) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1171) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1171) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1171) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1171) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1171) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1171) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1171) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1171) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1171) CFA_SP SP+-2
          CFI (cfiCond1171) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker1172 Using cfiCommon1
          CFI (cfiPicker1172) NoFunction
          CFI (cfiPicker1172) Picker
        MOV       DPL,R6
        MOV       DPH,R7
        LCALL     ??Subroutine172_0 & 0xFFFF
??CrossCallReturnLabel_445:
        LCALL     ?Subroutine109 & 0xFFFF
??CrossCallReturnLabel_244:
        LCALL     ?Subroutine107 & 0xFFFF
??CrossCallReturnLabel_447:
        INC       DPTR
        MOVX      @DPTR,A
        MOV       A,R6
        ADD       A,#0x2
        MOV       R0,A
        CLR       A
        ADDC      A,R7
        MOV       R1,A
        MOV       DPL,R0
        MOV       DPH,R1
        LCALL     ?Subroutine106 & 0xFFFF
??CrossCallReturnLabel_234:
        MOV       DPL,R0
        MOV       DPH,R1
        LCALL     ?Subroutine103 & 0xFFFF
??CrossCallReturnLabel_230:
        MOV       DPL,R6
        MOV       DPH,R7
        LCALL     ?Subroutine104 & 0xFFFF
??CrossCallReturnLabel_231:
        MOVX      @DPTR,A
        RET
          CFI EndBlock cfiCond1170
          CFI EndBlock cfiCond1171
          CFI EndBlock cfiPicker1172

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine106:
          CFI Block cfiCond1173 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockSetPINCodeRequest
          CFI Conditional ??CrossCallReturnLabel_233, ??CrossCallReturnLabel_0
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond1174 Using cfiCommon0
          CFI (cfiCond1174) Function zclClosures_SendDoorLockSetRFIDCodeRequest
          CFI (cfiCond1174) Conditional ??CrossCallReturnLabel_233, ??CrossCallReturnLabel_1
          CFI (cfiCond1174) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1174) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1174) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1174) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1174) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1174) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1174) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1174) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1174) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1174) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1174) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1174) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1174) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1174) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1174) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1174) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1174) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1174) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1174) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1174) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1174) CFA_SP SP+-4
          CFI (cfiCond1174) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond1175 Using cfiCommon0
          CFI (cfiCond1175) Function zclClosures_SendDoorLockGetPINCodeResponse
          CFI (cfiCond1175) Conditional ??CrossCallReturnLabel_233, ??CrossCallReturnLabel_2
          CFI (cfiCond1175) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1175) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1175) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1175) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1175) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1175) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1175) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1175) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1175) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1175) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1175) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1175) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1175) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1175) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1175) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1175) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1175) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1175) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1175) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1175) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1175) CFA_SP SP+-4
          CFI (cfiCond1175) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond1176 Using cfiCommon0
          CFI (cfiCond1176) Function zclClosures_SendDoorLockGetRFIDCodeResponse
          CFI (cfiCond1176) Conditional ??CrossCallReturnLabel_233, ??CrossCallReturnLabel_3
          CFI (cfiCond1176) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1176) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1176) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1176) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1176) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1176) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1176) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1176) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1176) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1176) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1176) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1176) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1176) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1176) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1176) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1176) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1176) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1176) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1176) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1176) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1176) CFA_SP SP+-4
          CFI (cfiCond1176) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond1177 Using cfiCommon0
          CFI (cfiCond1177) Function zclClosures_SendDoorLockOperationEventNotification
          CFI (cfiCond1177) Conditional ??CrossCallReturnLabel_234, ??CrossCallReturnLabel_12
          CFI (cfiCond1177) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1177) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1177) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1177) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1177) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1177) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1177) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1177) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1177) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1177) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1177) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1177) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1177) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1177) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1177) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1177) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1177) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1177) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1177) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1177) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1177) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1177) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1177) CFA_SP SP+-4
          CFI (cfiCond1177) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond1178 Using cfiCommon0
          CFI (cfiCond1178) Function zclClosures_SendDoorLockProgrammingEventNotification
          CFI (cfiCond1178) Conditional ??CrossCallReturnLabel_234, ??CrossCallReturnLabel_13
          CFI (cfiCond1178) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1178) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1178) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1178) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1178) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1178) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1178) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1178) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1178) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1178) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1178) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1178) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1178) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1178) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1178) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1178) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1178) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1178) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1178) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1178) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1178) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1178) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1178) CFA_SP SP+-4
          CFI (cfiCond1178) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker1179 Using cfiCommon1
          CFI (cfiPicker1179) NoFunction
          CFI (cfiPicker1179) Picker
        MOVX      A,@DPTR
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        INC       DPTR
        MOVX      @DPTR,A
        RET
          CFI EndBlock cfiCond1173
          CFI EndBlock cfiCond1174
          CFI EndBlock cfiCond1175
          CFI EndBlock cfiCond1176
          CFI EndBlock cfiCond1177
          CFI EndBlock cfiCond1178
          CFI EndBlock cfiPicker1179

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine104:
          CFI Block cfiCond1180 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockProgrammingEventNotification
          CFI Conditional ??CrossCallReturnLabel_232, ??CrossCallReturnLabel_121
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond1181 Using cfiCommon0
          CFI (cfiCond1181) Function zclClosures_SendDoorLockProgrammingEventNotification
          CFI (cfiCond1181) Conditional ??CrossCallReturnLabel_232, ??CrossCallReturnLabel_122
          CFI (cfiCond1181) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1181) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1181) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1181) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1181) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1181) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1181) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1181) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1181) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1181) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1181) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1181) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1181) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1181) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1181) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1181) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1181) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1181) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1181) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1181) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1181) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1181) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1181) CFA_SP SP+-4
          CFI (cfiCond1181) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond1182 Using cfiCommon0
          CFI (cfiCond1182) Function zclClosures_SendDoorLockOperationEventNotification
          CFI (cfiCond1182) Conditional ??CrossCallReturnLabel_231, ??CrossCallReturnLabel_12
          CFI (cfiCond1182) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1182) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1182) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1182) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1182) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1182) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1182) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1182) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1182) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1182) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1182) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1182) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1182) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1182) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1182) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1182) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1182) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1182) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1182) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1182) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1182) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1182) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1182) CFA_SP SP+-4
          CFI (cfiCond1182) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond1183 Using cfiCommon0
          CFI (cfiCond1183) Function zclClosures_SendDoorLockProgrammingEventNotification
          CFI (cfiCond1183) Conditional ??CrossCallReturnLabel_231, ??CrossCallReturnLabel_13
          CFI (cfiCond1183) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1183) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1183) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1183) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1183) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1183) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1183) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1183) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1183) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1183) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1183) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1183) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1183) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1183) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1183) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1183) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1183) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1183) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1183) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1183) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1183) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1183) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1183) CFA_SP SP+-4
          CFI (cfiCond1183) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker1184 Using cfiCommon1
          CFI (cfiPicker1184) NoFunction
          CFI (cfiPicker1184) Picker
        INC       DPTR
        INC       DPTR
        INC       DPTR
        LCALL     ?Subroutine122 & 0xFFFF
??CrossCallReturnLabel_264:
        INC       DPTR
        RET
          CFI EndBlock cfiCond1180
          CFI EndBlock cfiCond1181
          CFI EndBlock cfiCond1182
          CFI EndBlock cfiCond1183
          CFI EndBlock cfiPicker1184

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine103:
          CFI Block cfiCond1185 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockSetPINCodeRequest
          CFI Conditional ??CrossCallReturnLabel_229, ??CrossCallReturnLabel_0
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond1186 Using cfiCommon0
          CFI (cfiCond1186) Function zclClosures_SendDoorLockSetRFIDCodeRequest
          CFI (cfiCond1186) Conditional ??CrossCallReturnLabel_229, ??CrossCallReturnLabel_1
          CFI (cfiCond1186) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1186) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1186) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1186) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1186) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1186) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1186) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1186) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1186) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1186) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1186) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1186) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1186) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1186) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1186) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1186) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1186) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1186) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1186) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1186) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1186) CFA_SP SP+-4
          CFI (cfiCond1186) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond1187 Using cfiCommon0
          CFI (cfiCond1187) Function zclClosures_SendDoorLockGetPINCodeResponse
          CFI (cfiCond1187) Conditional ??CrossCallReturnLabel_229, ??CrossCallReturnLabel_2
          CFI (cfiCond1187) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1187) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1187) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1187) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1187) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1187) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1187) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1187) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1187) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1187) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1187) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1187) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1187) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1187) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1187) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1187) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1187) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1187) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1187) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1187) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1187) CFA_SP SP+-4
          CFI (cfiCond1187) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond1188 Using cfiCommon0
          CFI (cfiCond1188) Function zclClosures_SendDoorLockGetRFIDCodeResponse
          CFI (cfiCond1188) Conditional ??CrossCallReturnLabel_229, ??CrossCallReturnLabel_3
          CFI (cfiCond1188) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1188) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1188) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1188) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1188) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1188) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1188) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1188) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1188) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1188) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1188) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1188) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1188) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1188) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1188) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1188) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1188) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1188) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1188) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1188) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1188) CFA_SP SP+-4
          CFI (cfiCond1188) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond1189 Using cfiCommon0
          CFI (cfiCond1189) Function zclClosures_SendDoorLockOperationEventNotification
          CFI (cfiCond1189) Conditional ??CrossCallReturnLabel_230, ??CrossCallReturnLabel_12
          CFI (cfiCond1189) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1189) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1189) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1189) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1189) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1189) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1189) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1189) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1189) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1189) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1189) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1189) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1189) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1189) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1189) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1189) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1189) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1189) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1189) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1189) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1189) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1189) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1189) CFA_SP SP+-4
          CFI (cfiCond1189) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond1190 Using cfiCommon0
          CFI (cfiCond1190) Function zclClosures_SendDoorLockProgrammingEventNotification
          CFI (cfiCond1190) Conditional ??CrossCallReturnLabel_230, ??CrossCallReturnLabel_13
          CFI (cfiCond1190) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1190) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1190) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1190) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1190) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1190) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1190) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1190) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1190) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1190) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1190) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1190) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1190) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1190) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1190) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1190) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1190) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1190) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1190) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1190) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1190) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1190) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1190) CFA_SP SP+-4
          CFI (cfiCond1190) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker1191 Using cfiCommon1
          CFI (cfiPicker1191) NoFunction
          CFI (cfiPicker1191) Picker
        LCALL     ?Subroutine122 & 0xFFFF
??CrossCallReturnLabel_263:
        MOVX      @DPTR,A
        RET
          CFI EndBlock cfiCond1185
          CFI EndBlock cfiCond1186
          CFI EndBlock cfiCond1187
          CFI EndBlock cfiCond1188
          CFI EndBlock cfiCond1189
          CFI EndBlock cfiCond1190
          CFI EndBlock cfiPicker1191

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine122:
          CFI Block cfiCond1192 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockProgrammingEventNotification
          CFI Conditional ??CrossCallReturnLabel_264, ??CrossCallReturnLabel_232, ??CrossCallReturnLabel_121
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-6
          CFI CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond1193 Using cfiCommon0
          CFI (cfiCond1193) Function zclClosures_SendDoorLockProgrammingEventNotification
          CFI (cfiCond1193) Conditional ??CrossCallReturnLabel_264, ??CrossCallReturnLabel_232, ??CrossCallReturnLabel_122
          CFI (cfiCond1193) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1193) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1193) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1193) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1193) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1193) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1193) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1193) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1193) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1193) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1193) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1193) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1193) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1193) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1193) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1193) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1193) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1193) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1193) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1193) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1193) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1193) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1193) CFA_SP SP+-6
          CFI (cfiCond1193) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond1194 Using cfiCommon0
          CFI (cfiCond1194) Function zclClosures_SendDoorLockOperationEventNotification
          CFI (cfiCond1194) Conditional ??CrossCallReturnLabel_264, ??CrossCallReturnLabel_231, ??CrossCallReturnLabel_12
          CFI (cfiCond1194) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1194) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1194) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1194) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1194) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1194) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1194) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1194) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1194) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1194) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1194) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1194) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1194) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1194) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1194) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1194) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1194) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1194) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1194) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1194) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1194) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1194) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1194) CFA_SP SP+-6
          CFI (cfiCond1194) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond1195 Using cfiCommon0
          CFI (cfiCond1195) Function zclClosures_SendDoorLockProgrammingEventNotification
          CFI (cfiCond1195) Conditional ??CrossCallReturnLabel_264, ??CrossCallReturnLabel_231, ??CrossCallReturnLabel_13
          CFI (cfiCond1195) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1195) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1195) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1195) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1195) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1195) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1195) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1195) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1195) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1195) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1195) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1195) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1195) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1195) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1195) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1195) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1195) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1195) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1195) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1195) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1195) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1195) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1195) CFA_SP SP+-6
          CFI (cfiCond1195) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond1196 Using cfiCommon0
          CFI (cfiCond1196) Function zclClosures_SendDoorLockSetPINCodeRequest
          CFI (cfiCond1196) Conditional ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_229, ??CrossCallReturnLabel_0
          CFI (cfiCond1196) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1196) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1196) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1196) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1196) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1196) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1196) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1196) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1196) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1196) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1196) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1196) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1196) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1196) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1196) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1196) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1196) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1196) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1196) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1196) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1196) CFA_SP SP+-6
          CFI (cfiCond1196) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond1197 Using cfiCommon0
          CFI (cfiCond1197) Function zclClosures_SendDoorLockSetRFIDCodeRequest
          CFI (cfiCond1197) Conditional ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_229, ??CrossCallReturnLabel_1
          CFI (cfiCond1197) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1197) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1197) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1197) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1197) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1197) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1197) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1197) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1197) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1197) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1197) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1197) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1197) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1197) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1197) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1197) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1197) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1197) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1197) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1197) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1197) CFA_SP SP+-6
          CFI (cfiCond1197) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond1198 Using cfiCommon0
          CFI (cfiCond1198) Function zclClosures_SendDoorLockGetPINCodeResponse
          CFI (cfiCond1198) Conditional ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_229, ??CrossCallReturnLabel_2
          CFI (cfiCond1198) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1198) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1198) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1198) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1198) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1198) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1198) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1198) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1198) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1198) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1198) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1198) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1198) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1198) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1198) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1198) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1198) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1198) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1198) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1198) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1198) CFA_SP SP+-6
          CFI (cfiCond1198) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond1199 Using cfiCommon0
          CFI (cfiCond1199) Function zclClosures_SendDoorLockGetRFIDCodeResponse
          CFI (cfiCond1199) Conditional ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_229, ??CrossCallReturnLabel_3
          CFI (cfiCond1199) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1199) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1199) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1199) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1199) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1199) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1199) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1199) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1199) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1199) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1199) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1199) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1199) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1199) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1199) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1199) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1199) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1199) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1199) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1199) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1199) CFA_SP SP+-6
          CFI (cfiCond1199) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond1200 Using cfiCommon0
          CFI (cfiCond1200) Function zclClosures_SendDoorLockOperationEventNotification
          CFI (cfiCond1200) Conditional ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_230, ??CrossCallReturnLabel_12
          CFI (cfiCond1200) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1200) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1200) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1200) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1200) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1200) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1200) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1200) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1200) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1200) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1200) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1200) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1200) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1200) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1200) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1200) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1200) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1200) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1200) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1200) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1200) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1200) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1200) CFA_SP SP+-6
          CFI (cfiCond1200) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond1201 Using cfiCommon0
          CFI (cfiCond1201) Function zclClosures_SendDoorLockProgrammingEventNotification
          CFI (cfiCond1201) Conditional ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_230, ??CrossCallReturnLabel_13
          CFI (cfiCond1201) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1201) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1201) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1201) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1201) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1201) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1201) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1201) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1201) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1201) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1201) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1201) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1201) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1201) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1201) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1201) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1201) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1201) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1201) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1201) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1201) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1201) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1201) CFA_SP SP+-6
          CFI (cfiCond1201) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker1202 Using cfiCommon1
          CFI (cfiPicker1202) NoFunction
          CFI (cfiPicker1202) Picker
        INC       DPTR
        MOVX      A,@DPTR
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        INC       DPTR
        INC       DPTR
        RET
          CFI EndBlock cfiCond1192
          CFI EndBlock cfiCond1193
          CFI EndBlock cfiCond1194
          CFI EndBlock cfiCond1195
          CFI EndBlock cfiCond1196
          CFI EndBlock cfiCond1197
          CFI EndBlock cfiCond1198
          CFI EndBlock cfiCond1199
          CFI EndBlock cfiCond1200
          CFI EndBlock cfiCond1201
          CFI EndBlock cfiPicker1202

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclClosures_RegisterDoorLockCmdCallbacks::?re`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclClosures_RegisterDoorLockCmdCallbacks

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclClosures_HdlIncoming::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclClosures_HdlIncoming

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclClosures_ProcessInDoorLockCmds::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclClosures_ProcessInDoorLockCmds

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclClosures_ProcessInDoorLock::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclClosures_ProcessInDoorLock

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclClosures_ProcessInDoorLockUnlockWithTimeou:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclClosures_ProcessInDoorLockUnlockWithTimeout

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclClosures_ProcessInDoorLockSetPINCode::?rel`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclClosures_ProcessInDoorLockSetPINCode

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclClosures_ProcessInDoorLockSetWeekDaySchedu:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclClosures_ProcessInDoorLockSetWeekDaySchedule

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclClosures_ProcessInDoorLockSetYearDaySchedu:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclClosures_ProcessInDoorLockSetYearDaySchedule

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclClosures_ProcessInDoorLockSetHolidaySchedu:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclClosures_ProcessInDoorLockSetHolidaySchedule

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclClosures_ProcessInDoorLockSetRFIDCode::?re`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclClosures_ProcessInDoorLockSetRFIDCode

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclClosures_ProcessInDoorLockGetLogRecordRsp:`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclClosures_ProcessInDoorLockGetLogRecordRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclClosures_ProcessInDoorLockGetPINCodeRsp::?`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclClosures_ProcessInDoorLockGetPINCodeRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclClosures_ProcessInDoorLockGetWeekDaySchedu:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclClosures_ProcessInDoorLockGetWeekDayScheduleRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclClosures_ProcessInDoorLockGetYearDaySchedu:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclClosures_ProcessInDoorLockGetYearDayScheduleRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclClosures_ProcessInDoorLockGetHolidaySchedu:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclClosures_ProcessInDoorLockGetHolidayScheduleRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclClosures_ProcessInDoorLockGetRFIDCodeRsp::`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclClosures_ProcessInDoorLockGetRFIDCodeRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclClosures_ProcessInDoorLockOperationEventNo:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclClosures_ProcessInDoorLockOperationEventNotification

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclClosures_ProcessInDoorLockProgrammingEvent:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclClosures_ProcessInDoorLockProgrammingEventNotification

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclClosures_SendDoorLockRequest::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclClosures_SendDoorLockRequest

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclClosures_SendDoorLockUnlockTimeoutRequest:`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclClosures_SendDoorLockUnlockTimeoutRequest

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclClosures_SendDoorLockGetLogRecordRequest::`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclClosures_SendDoorLockGetLogRecordRequest

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclClosures_SendDoorLockSetPINCodeRequest::?r`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclClosures_SendDoorLockSetPINCodeRequest

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclClosures_SendDoorLockUserIDRequest::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclClosures_SendDoorLockUserIDRequest

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclClosures_SendDoorLockClearAllCodesRequest:`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclClosures_SendDoorLockClearAllCodesRequest

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclClosures_SendDoorLockSetUserStatusRequest:`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclClosures_SendDoorLockSetUserStatusRequest

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclClosures_SendDoorLockSetWeekDayScheduleReq:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclClosures_SendDoorLockSetWeekDayScheduleRequest

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclClosures_SendDoorLockScheduleRequest::?rel`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclClosures_SendDoorLockScheduleRequest

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclClosures_SendDoorLockSetYearDayScheduleReq:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclClosures_SendDoorLockSetYearDayScheduleRequest

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclClosures_SendDoorLockSetHolidayScheduleReq:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclClosures_SendDoorLockSetHolidayScheduleRequest

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclClosures_SendDoorLockHolidayScheduleReques:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclClosures_SendDoorLockHolidayScheduleRequest

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclClosures_SendDoorLockSetUserTypeRequest::?`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclClosures_SendDoorLockSetUserTypeRequest

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclClosures_SendDoorLockSetRFIDCodeRequest::?`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclClosures_SendDoorLockSetRFIDCodeRequest

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclClosures_SendDoorLockStatusResponse::?rela`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclClosures_SendDoorLockStatusResponse

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclClosures_SendDoorLockGetLogRecordResponse:`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclClosures_SendDoorLockGetLogRecordResponse

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclClosures_SendDoorLockGetPINCodeResponse::?`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclClosures_SendDoorLockGetPINCodeResponse

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclClosures_SendDoorLockGetUserStatusResponse:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclClosures_SendDoorLockGetUserStatusResponse

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclClosures_SendDoorLockGetWeekDayScheduleRes:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclClosures_SendDoorLockGetWeekDayScheduleResponse

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclClosures_SendDoorLockGetYearDayScheduleRes:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclClosures_SendDoorLockGetYearDayScheduleResponse

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclClosures_SendDoorLockGetHolidayScheduleRes:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclClosures_SendDoorLockGetHolidayScheduleResponse

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclClosures_SendDoorLockGetUserTypeResponse::`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclClosures_SendDoorLockGetUserTypeResponse

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclClosures_SendDoorLockGetRFIDCodeResponse::`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclClosures_SendDoorLockGetRFIDCodeResponse

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclClosures_SendDoorLockOperationEventNotific:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclClosures_SendDoorLockOperationEventNotification

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclClosures_SendDoorLockProgrammingEventNotif:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclClosures_SendDoorLockProgrammingEventNotification

        END
// 3281 
// 3282 #endif //ZCL_DOORLOCK
// 3283 
// 3284 #ifdef ZCL_WINDOWCOVERING
// 3285 /*********************************************************************
// 3286  * @fn      zclClosures_ProcessInWindowCovering
// 3287  *
// 3288  * @brief   Process in the received Window Covering cluster Command.
// 3289  *
// 3290  * @param   pInMsg - pointer to the incoming message
// 3291  *
// 3292  * @return  ZStatus_t
// 3293  */
// 3294 static ZStatus_t zclClosures_ProcessInWindowCovering( zclIncoming_t *pInMsg,
// 3295                                                       zclClosures_WindowCoveringAppCallbacks_t *pCBs )
// 3296 {
// 3297   ZStatus_t status = ZCL_STATUS_SUCCESS;
// 3298   uint8 *pData = pInMsg->pData;
// 3299 
// 3300   if ( zcl_ServerCmd( pInMsg->hdr.fc.direction ) )
// 3301   {
// 3302     switch ( pInMsg->hdr.commandID )
// 3303     {
// 3304     case COMMAND_CLOSURES_UP_OPEN:
// 3305       if ( pCBs->pfnWindowCoveringUpOpen )
// 3306       {
// 3307         pCBs->pfnWindowCoveringUpOpen();
// 3308       }
// 3309       break;
// 3310 
// 3311     case COMMAND_CLOSURES_DOWN_CLOSE:
// 3312       if ( pCBs->pfnWindowCoveringDownClose )
// 3313       {
// 3314         pCBs->pfnWindowCoveringDownClose();
// 3315       }
// 3316       break;
// 3317 
// 3318     case COMMAND_CLOSURES_STOP:
// 3319       if ( pCBs->pfnWindowCoveringStop )
// 3320       {
// 3321         pCBs->pfnWindowCoveringStop();
// 3322       }
// 3323       break;
// 3324 
// 3325     case COMMAND_CLOSURES_GO_TO_LIFT_VALUE:
// 3326       if ( pCBs->pfnWindowCoveringGotoLiftValue )
// 3327       {
// 3328         if ( pCBs->pfnWindowCoveringGotoLiftValue( BUILD_UINT16( pData[0], pData[1] ) ) == FALSE )
// 3329         {
// 3330           status = ZCL_STATUS_INVALID_VALUE;
// 3331         }
// 3332       }
// 3333       break;
// 3334 
// 3335     case COMMAND_CLOSURES_GO_TO_LIFT_PERCENTAGE:
// 3336       if ( pCBs->pfnWindowCoveringGotoLiftPercentage )
// 3337       {
// 3338         if ( pCBs->pfnWindowCoveringGotoLiftPercentage( pData[0] ) == FALSE )
// 3339         {
// 3340           status = ZCL_STATUS_INVALID_VALUE;
// 3341         }
// 3342       }
// 3343       break;
// 3344 
// 3345     case COMMAND_CLOSURES_GO_TO_TILT_VALUE:
// 3346       if ( pCBs->pfnWindowCoveringGotoTiltValue )
// 3347       {
// 3348         if ( pCBs->pfnWindowCoveringGotoTiltValue( BUILD_UINT16( pData[0], pData[1] ) ) == FALSE )
// 3349         {
// 3350           status = ZCL_STATUS_INVALID_VALUE;
// 3351         }
// 3352       }
// 3353       break;
// 3354 
// 3355     case COMMAND_CLOSURES_GO_TO_TILT_PERCENTAGE:
// 3356       if ( pCBs->pfnWindowCoveringGotoTiltPercentage )
// 3357       {
// 3358         if ( pCBs->pfnWindowCoveringGotoTiltPercentage( pData[0] ) == FALSE )
// 3359         {
// 3360           status = ZCL_STATUS_INVALID_VALUE;
// 3361         }
// 3362       }
// 3363       break;
// 3364 
// 3365     default:
// 3366       return( ZFailure );
// 3367     }
// 3368   }
// 3369   // no Client command
// 3370 
// 3371   return ( status );
// 3372 }
// 3373 
// 3374 /*********************************************************************
// 3375  * @fn      zclClosures_WindowCoveringSimpleReq
// 3376  *
// 3377  * @brief   Call to send out a Window Covering command with no payload
// 3378  *          as Up/Open, Down/Close or Stop
// 3379  *
// 3380  * @param   srcEP - Sending application's endpoint
// 3381  * @param   dstAddr - where you want the message to go
// 3382  * @param   cmd - Command ID
// 3383  * @param   disableDefaultRsp - decides default response is necessary or not
// 3384  * @param   seqNum - sequence number of the command packet
// 3385  *
// 3386  * @return  ZStatus_t
// 3387  */
// 3388 ZStatus_t zclClosures_WindowCoveringSimpleReq( uint8 srcEP, afAddrType_t *dstAddr,
// 3389                                                uint8 cmd, uint8 disableDefaultRsp, uint8 seqNum )
// 3390 {
// 3391   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_CLOSURES_WINDOW_COVERING,
// 3392                           cmd, TRUE, ZCL_FRAME_CLIENT_SERVER_DIR,
// 3393                           disableDefaultRsp, 0, seqNum, 0, NULL );
// 3394 }
// 3395 
// 3396 /*********************************************************************
// 3397  * @fn      zclClosures_WindowCoveringSendGoToValueReq
// 3398  *
// 3399  * @brief   Call to send out a Go to Value Request Command
// 3400  *
// 3401  * @param   srcEP - Sending application's endpoint
// 3402  * @param   dstAddr - where you want the message to go
// 3403  * @param   cmd - Command ID for COMMAND_CLOSURES_GO_TO_LIFT_VALUE
// 3404  * @param   liftValue - payload
// 3405  * @param   disableDefaultRsp - decides default response is necessary or not
// 3406  * @param   seqNum - sequence number of the command packet
// 3407  *
// 3408  * @return  ZStatus_t
// 3409  */
// 3410 ZStatus_t zclClosures_WindowCoveringSendGoToValueReq( uint8 srcEP, afAddrType_t *dstAddr,
// 3411                                                       uint8 cmd, uint16 Value,
// 3412                                                       uint8 disableDefaultRsp, uint8 seqNum )
// 3413 {
// 3414   uint8 buf[ZCL_WC_GOTOVALUEREQ_PAYLOADLEN];
// 3415 
// 3416   buf[0] = LO_UINT16( Value );
// 3417   buf[1] = HI_UINT16( Value );
// 3418 
// 3419   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_CLOSURES_WINDOW_COVERING,
// 3420                           cmd, TRUE, ZCL_FRAME_CLIENT_SERVER_DIR,
// 3421                           disableDefaultRsp, 0, seqNum,
// 3422                           ZCL_WC_GOTOVALUEREQ_PAYLOADLEN, buf );
// 3423 }
// 3424 
// 3425 /*********************************************************************
// 3426  * @fn      zclClosures_WindowCoveringSendGoToPercentageReq
// 3427  *
// 3428  * @brief   Call to send out a Go to Percentage Request Command
// 3429  *
// 3430  * @param   srcEP - Sending application's endpoint
// 3431  * @param   dstAddr - where you want the message to go
// 3432  * @param   cmd - Command ID e.g. COMMAND_CLOSURES_GO_TO_LIFT_PERCENTAGE
// 3433  * @param   percentageLiftValue - payload
// 3434  * @param   disableDefaultRsp - decides default response is necessary or not
// 3435  * @param   seqNum - sequence number of the command packet
// 3436  *
// 3437  * @return  ZStatus_t
// 3438  */
// 3439 ZStatus_t zclClosures_WindowCoveringSendGoToPercentageReq( uint8 srcEP, afAddrType_t *dstAddr,
// 3440                                                            uint8 cmd, uint8 percentageValue,
// 3441                                                            uint8 disableDefaultRsp, uint8 seqNum )
// 3442 {
// 3443   uint8 buf[ZCL_WC_GOTOPERCENTAGEREQ_PAYLOADLEN];
// 3444 
// 3445   buf[0] = percentageValue;
// 3446 
// 3447   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_CLOSURES_WINDOW_COVERING,
// 3448                           cmd, TRUE, ZCL_FRAME_CLIENT_SERVER_DIR,
// 3449                           disableDefaultRsp, 0, seqNum,
// 3450                           ZCL_WC_GOTOPERCENTAGEREQ_PAYLOADLEN, buf );
// 3451 }
// 3452 #endif //ZCL_WINDOWCOVERING
// 3453 
// 3454 /********************************************************************************************
// 3455 *********************************************************************************************/
// 
// 9 694 bytes in segment BANKED_CODE
//   258 bytes in segment BANK_RELAYS
//     3 bytes in segment XDATA_Z
// 
//   258 bytes of CODE     memory
// 9 694 bytes of HUGECODE memory
//     3 bytes of XDATA    memory
//
//Errors: none
//Warnings: none
