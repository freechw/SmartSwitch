///////////////////////////////////////////////////////////////////////////////
//
// IAR C/C++ Compiler V10.10.1.4655 for 8051              20/Nov/2021  20:16:28
// Copyright 2004-2017 IAR Systems AB.
// Standalone license - IAR Embedded Workbench for 8051
//
//    Core               =  plain
//    Code model         =  banked
//    Data model         =  large
//    Calling convention =  xdata reentrant
//    Constant location  =  data_rom
//    Dptr setup         =  1,16
//                          
//    Source file        =  
//        D:\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\ZigUP\Source\adc.c
//    Command line       =  
//        -f C:\Users\tatbo\AppData\Local\Temp\EW8AEA.tmp ("D:\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\ZigUP\Source\adc.c" -D
//        SECURE=1 -D HAL_KEY=FALSE -D HAL_LED=FALSE -D HAL_LCD=FALSE -D
//        HAL_UART=FALSE -D TC_LINKKEY_JOIN -D NV_INIT -D NV_RESTORE -D
//        xHOLD_AUTO_START -D ZTOOL_P1 -D MT_TASK -D MT_APP_FUNC -D MT_SYS_FUNC
//        -D MT_ZDO_FUNC -D LCD_SUPPORTED=FALSE -D MULTICAST_ENABLED=FALSE -D
//        ZCL_READ -D ZCL_WRITE -D ZCL_REPORT -D xZCL_EZMODE -D ZCL_BASIC -D
//        ZCL_IDENTIFY -D ZCL_ON_OFF -D ZCL_SCENES -D ZCL_GROUPS -D
//        xZCL_LEVEL_CTRL -D ZCL_DIAGNOSTIC -D FEATURE_SYSTEM_STATS -D
//        ZCL_DOORLOCK -lC "D:\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\ZigUP\CC2530DB\EndDeviceEB\List"
//        -lA "D:\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\ZigUP\CC2530DB\EndDeviceEB\List"
//        --diag_suppress Pe001,Pa010 -o "D:\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\ZigUP\CC2530DB\EndDeviceEB\Obj"
//        -e --debug --core=plain --dptr=16,1 --data_model=large
//        --code_model=banked --calling_convention=xdata_reentrant
//        --place_constants=data_rom --nr_virtual_regs 16 -f "D:\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\ZigUP\CC2530DB\..\..\..\Tools\CC2530DB\f8wEndev.cfg"
//        (-DCPU32MHZ -DROOT=__near_func -DMAC_CFG_TX_DATA_MAX=3
//        -DMAC_CFG_TX_MAX=6 -DMAC_CFG_RX_MAX=3) -f "D:\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\ZigUP\CC2530DB\..\..\..\Tools\CC2530DB\f8wConfig.cfg"
//        (-DZIGBEEPRO -DSECURE=1 -DZG_SECURE_DYNAMIC=0 -DREFLECTOR
//        -DDEFAULT_CHANLIST=0x00000800 -DZDAPP_CONFIG_PAN_ID=0xFFFF
//        -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MASK=0x007F
//        -DBEACON_REQUEST_DELAY=100 -DBEACON_REQ_DELAY_MASK=0x00FF
//        -DLINK_STATUS_JITTER_MASK=0x007F -DROUTE_EXPIRY_TIME=30
//        -DAPSC_ACK_WAIT_DURATION_POLLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7
//        -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3
//        -DNWK_MAX_DATA_RETRIES=2 -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9
//        -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40 -DNWK_MAX_BINDING_ENTRIES=4
//        -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01, 0x03, 0x05, 0x07,
//        0x09, 0x0B, 0x0D, 0x0F, 0x00, 0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C,
//        0x0D}" -DMAC_MAX_FRAME_SIZE=116 -DZDNWKMGR_MIN_TRANSMISSIONS=20
//        "-DCONST=const __code" -DGENERIC=__generic -DRFD_RCVC_ALWAYS_ON=FALSE
//        -DPOLL_RATE=1000 -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100
//        -DREJOIN_POLL_RATE=440 -DREJOIN_BACKOFF=900000 -DREJOIN_SCAN=900000)
//        -f "D:\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\ZigUP\CC2530DB\..\..\..\Tools\CC2530DB\f8wZCL.cfg"
//        -I "D:\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\ZigUP\CC2530DB\" -I
//        "D:\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\ZigUP\CC2530DB\..\Source\"
//        -I "D:\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\ZigUP\CC2530DB\..\..\Source\"
//        -I "D:\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\ZigUP\CC2530DB\..\..\..\ZMain\TI2530DB\"
//        -I "D:\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\ZigUP\CC2530DB\..\..\..\..\..\Components\hal\include\"
//        -I "D:\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\ZigUP\CC2530DB\..\..\..\..\..\Components\hal\target\CC2530EB\"
//        -I "D:\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\ZigUP\CC2530DB\..\..\..\..\..\Components\mac\include\"
//        -I "D:\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\ZigUP\CC2530DB\..\..\..\..\..\Components\mac\high_level\"
//        -I "D:\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\ZigUP\CC2530DB\..\..\..\..\..\Components\mac\low_level\srf04\"
//        -I "D:\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\ZigUP\CC2530DB\..\..\..\..\..\Components\mac\low_level\srf04\single_chip\"
//        -I "D:\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\ZigUP\CC2530DB\..\..\..\..\..\Components\mt\"
//        -I "D:\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\ZigUP\CC2530DB\..\..\..\..\..\Components\osal\include\"
//        -I "D:\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\ZigUP\CC2530DB\..\..\..\..\..\Components\services\saddr\"
//        -I "D:\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\ZigUP\CC2530DB\..\..\..\..\..\Components\services\sdata\"
//        -I "D:\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\ZigUP\CC2530DB\..\..\..\..\..\Components\stack\af\"
//        -I "D:\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\ZigUP\CC2530DB\..\..\..\..\..\Components\stack\nwk\"
//        -I "D:\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\ZigUP\CC2530DB\..\..\..\..\..\Components\stack\sapi\"
//        -I "D:\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\ZigUP\CC2530DB\..\..\..\..\..\Components\stack\sec\"
//        -I "D:\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\ZigUP\CC2530DB\..\..\..\..\..\Components\stack\sys\"
//        -I "D:\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\ZigUP\CC2530DB\..\..\..\..\..\Components\stack\zcl\"
//        -I "D:\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\ZigUP\CC2530DB\..\..\..\..\..\Components\stack\zdo\"
//        -I "D:\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\ZigUP\CC2530DB\..\..\..\..\..\Components\zmac\"
//        -I "D:\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\ZigUP\CC2530DB\..\..\..\..\..\Components\zmac\f8w\"
//        -Ohz --require_prototypes)
//    Locale             =  Chinese (Simplified)_China.936
//    List file          =  
//        D:\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\ZigUP\CC2530DB\EndDeviceEB\List\adc.s51
//
///////////////////////////////////////////////////////////////////////////////

        NAME adc

        RTMODEL "__SystemLibrary", "CLib"
        RTMODEL "__calling_convention", "xdata_reentrant"
        RTMODEL "__code_model", "banked"
        RTMODEL "__core", "plain"
        RTMODEL "__data_model", "large"
        RTMODEL "__dptr_size", "16"
        RTMODEL "__extended_stack", "disabled"
        RTMODEL "__location_for_constants", "data"
        RTMODEL "__number_of_dptrs", "1"
        RTMODEL "__register_banks", "*"
        RTMODEL "__rt_version", "1"

        RSEG DOVERLAY:DATA:NOROOT(0)
        RSEG IOVERLAY:IDATA:NOROOT(0)
        RSEG ISTACK:IDATA:NOROOT(0)
        RSEG PSTACK:XDATA:NOROOT(0)
        RSEG XSTACK:XDATA:NOROOT(0)

        EXTERN ?V0
        EXTERN ?V1
        EXTERN ?V2
        EXTERN ?V3
        EXTERN ?V4
        EXTERN ?V5
        EXTERN ?V6
        EXTERN ?V7
        EXTERN ?BANKED_ENTER_XDATA
        EXTERN ?BANKED_LEAVE_XDATA
        EXTERN ?BDISPATCH
        EXTERN ?BRET
        EXTERN ?FLT_ADD
        EXTERN ?FLT_MUL
        EXTERN ?L_ADD
        EXTERN ?L_MOV_X
        EXTERN ?SS_SHR
        EXTERN ?UL_SHR
        EXTERN ?UL_TO_FLT

        PUBLIC `??ADC_GetTemperature::?relay`
        FUNCTION `??ADC_GetTemperature::?relay`,0203H
        PUBLIC `??ADC_GetVoltage::?relay`
        FUNCTION `??ADC_GetVoltage::?relay`,0203H
        PUBLIC `??ADC_Read::?relay`
        FUNCTION `??ADC_Read::?relay`,0203H
        PUBLIC `??ADC_Read_Avg::?relay`
        FUNCTION `??ADC_Read_Avg::?relay`,0203H
        PUBLIC `??ADC_Temperature::?relay`
        FUNCTION `??ADC_Temperature::?relay`,0203H
        PUBLIC `??ADC_Temperature_Avg::?relay`
        FUNCTION `??ADC_Temperature_Avg::?relay`,0203H
        PUBWEAK ADCCON1
        PUBWEAK ADCCON3
        PUBWEAK ADCH
        PUBWEAK ADCL
        PUBLIC ADC_GetTemperature
        FUNCTION ADC_GetTemperature,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        PUBLIC ADC_GetVoltage
        FUNCTION ADC_GetVoltage,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        PUBLIC ADC_Read
        FUNCTION ADC_Read,080203H
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 2, STACK
        PUBLIC ADC_Read_Avg
        FUNCTION ADC_Read_Avg,0a1203H
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 16, STACK
        PUBLIC ADC_Temperature
        FUNCTION ADC_Temperature,080203H
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 2, STACK
        PUBLIC ADC_Temperature_Avg
        FUNCTION ADC_Temperature_Avg,0a1203H
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 16, STACK
        PUBWEAK __Constant_3b816e34
        PUBWEAK __Constant_3d63bcd3
        PUBWEAK __Constant_c397f1ec
        
          CFI Names cfiNames0
          CFI StackFrame CFA_SP SP IDATA
          CFI StackFrame CFA_PSP16 PSP16 XDATA
          CFI StackFrame CFA_XSP16 XSP16 XDATA
          CFI StaticOverlayFrame CFA_IOVERLAY IOVERLAY
          CFI StaticOverlayFrame CFA_DOVERLAY DOVERLAY
          CFI Resource `PSW.CY`:1, `B.BR0`:1, `B.BR1`:1, `B.BR2`:1, `B.BR3`:1
          CFI Resource `B.BR4`:1, `B.BR5`:1, `B.BR6`:1, `B.BR7`:1, `VB.BR8`:1
          CFI Resource `VB.BR9`:1, `VB.BR10`:1, `VB.BR11`:1, `VB.BR12`:1
          CFI Resource `VB.BR13`:1, `VB.BR14`:1, `VB.BR15`:1, VB:8, B:8, A:8
          CFI Resource PSW:8, DPL0:8, DPH0:8, R0:8, R1:8, R2:8, R3:8, R4:8, R5:8
          CFI Resource R6:8, R7:8, V0:8, V1:8, V2:8, V3:8, V4:8, V5:8, V6:8, V7:8
          CFI Resource V8:8, V9:8, V10:8, V11:8, V12:8, V13:8, V14:8, V15:8, SP:8
          CFI Resource PSPH:8, PSPL:8, PSP16:16, XSPH:8, XSPL:8, XSP16:16
          CFI VirtualResource ?RET:24
          CFI Resource ?BRET_EXT:8
          CFI VirtualResource ?RET_HIGH:8, ?RET_LOW:8
          CFI ResourceParts PSP16 PSPH, PSPL
          CFI ResourceParts XSP16 XSPH, XSPL
          CFI ResourceParts ?RET ?BRET_EXT, ?RET_HIGH, ?RET_LOW
          CFI EndNames cfiNames0
        
          CFI Common cfiCommon0 Using cfiNames0
          CFI CodeAlign 1
          CFI DataAlign -1
          CFI ReturnAddress ?RET CODE
          CFI CFA_DOVERLAY Used
          CFI CFA_IOVERLAY Used
          CFI CFA_SP SP+-3
          CFI CFA_PSP16 PSP16+0
          CFI CFA_XSP16 XSP16+0
          CFI `PSW.CY` SameValue
          CFI `B.BR0` SameValue
          CFI `B.BR1` SameValue
          CFI `B.BR2` SameValue
          CFI `B.BR3` SameValue
          CFI `B.BR4` SameValue
          CFI `B.BR5` SameValue
          CFI `B.BR6` SameValue
          CFI `B.BR7` SameValue
          CFI `VB.BR8` SameValue
          CFI `VB.BR9` SameValue
          CFI `VB.BR10` SameValue
          CFI `VB.BR11` SameValue
          CFI `VB.BR12` SameValue
          CFI `VB.BR13` SameValue
          CFI `VB.BR14` SameValue
          CFI `VB.BR15` SameValue
          CFI VB SameValue
          CFI B Undefined
          CFI A Undefined
          CFI PSW SameValue
          CFI DPL0 SameValue
          CFI DPH0 SameValue
          CFI R0 Undefined
          CFI R1 Undefined
          CFI R2 Undefined
          CFI R3 Undefined
          CFI R4 Undefined
          CFI R5 Undefined
          CFI R6 SameValue
          CFI R7 SameValue
          CFI V0 SameValue
          CFI V1 SameValue
          CFI V2 SameValue
          CFI V3 SameValue
          CFI V4 SameValue
          CFI V5 SameValue
          CFI V6 SameValue
          CFI V7 SameValue
          CFI V8 SameValue
          CFI V9 SameValue
          CFI V10 SameValue
          CFI V11 SameValue
          CFI V12 SameValue
          CFI V13 SameValue
          CFI V14 SameValue
          CFI V15 SameValue
          CFI PSPH Undefined
          CFI PSPL Undefined
          CFI XSPH Undefined
          CFI XSPL Undefined
          CFI ?RET Concat
          CFI ?BRET_EXT Frame(CFA_SP, 3)
          CFI ?RET_HIGH Frame(CFA_SP, 2)
          CFI ?RET_LOW Frame(CFA_SP, 1)
          CFI EndCommon cfiCommon0
        
ADC_GetTemperature  SYMBOL "ADC_GetTemperature"
`??ADC_GetTemperature::?relay` SYMBOL "?relay", ADC_GetTemperature
ADC_GetVoltage      SYMBOL "ADC_GetVoltage"
`??ADC_GetVoltage::?relay` SYMBOL "?relay", ADC_GetVoltage
ADC_Read            SYMBOL "ADC_Read"
`??ADC_Read::?relay` SYMBOL "?relay", ADC_Read
ADC_Read_Avg        SYMBOL "ADC_Read_Avg"
`??ADC_Read_Avg::?relay` SYMBOL "?relay", ADC_Read_Avg
ADC_Temperature     SYMBOL "ADC_Temperature"
`??ADC_Temperature::?relay` SYMBOL "?relay", ADC_Temperature
ADC_Temperature_Avg SYMBOL "ADC_Temperature_Avg"
`??ADC_Temperature_Avg::?relay` SYMBOL "?relay", ADC_Temperature_Avg

// D:\Z-Stack Home 1.2.2a.44539\Projects\zstack\HomeAutomation\ZigUP\Source\adc.c
//    1 #include "ZComDef.h"
//    2 #include "onboard.h"

        ASEGN SFR_AN:DATA:NOROOT,0b4H
// unsigned char volatile __sfr ADCCON1
ADCCON1:
        DATA8
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0b6H
// unsigned char volatile __sfr ADCCON3
ADCCON3:
        DATA8
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0baH
// unsigned char volatile __sfr ADCL
ADCL:
        DATA8
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0bbH
// unsigned char volatile __sfr ADCH
ADCH:
        DATA8
        DS 1
//    3 #include "bitmasks.h"
//    4 #include "adc.h"
//    5 

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//    6 uint16 ADC_Read(void)
ADC_Read:
          CFI Block cfiBlock0 Using cfiCommon0
          CFI Function ADC_Read
        CODE
//    7 {
        REQUIRE ?V0
        REQUIRE ?V1
        PUSH      ?V0
          CFI V0 Frame(CFA_SP, 4)
          CFI CFA_SP SP+-4
        PUSH      ?V1
          CFI V1 Frame(CFA_SP, 5)
          CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
//    8   int16 result = 0;
//    9   ADCCON3 = b01000000; // internal reference, decimation 512, channel 0, start conversation
        MOV       0xb6,#0x40
//   10   while (!(ADCCON1 & (1<<7)));	// wait for conversation to finish
??ADC_Read_0:
        MOV       A,0xb4
        MOV       C,0xE0 /* A   */.7
        JNC       ??ADC_Read_0
//   11   result = (uint16)ADCL;
        MOV       A,0xba+0x0
//   12   result |= (uint16)(ADCH << 8);
        MOV       R1,0xbb
        MOV       ?V0,A
        MOV       A,R1
        MOV       ?V1,A
//   13   if (result < 0) result = 0;
        CLR       C
        SUBB      A,#0x0
        MOV       C,0xD0 /* PSW */.2
        XRL       A,PSW
        RLC       A
        JNC       ??ADC_Read_1
        MOV       ?V0,#0x0
        MOV       ?V1,#0x0
//   14   result >>= 2;
//   15   return result;
??ADC_Read_1:
          CFI EndBlock cfiBlock0
        REQUIRE ?Subroutine0
        REQUIRE ADCCON3
        REQUIRE ADCCON1
        REQUIRE ADCL
        REQUIRE ADCH
        ; // Fall through to label ?Subroutine0
//   16 }

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine0:
          CFI Block cfiBlock1 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+-5
          CFI V0 Frame(CFA_SP, 4)
          CFI V1 Frame(CFA_SP, 5)
        MOV       A,#0x2
        MOV       R0,#?V0
        LCALL     ?SS_SHR
        MOV       R2,?V0
        MOV       R3,?V1
        POP       ?V1
          CFI CFA_SP SP+-4
          CFI V1 SameValue
        POP       ?V0
          CFI CFA_SP SP+-3
          CFI V0 SameValue
        LJMP      ?BRET
          CFI EndBlock cfiBlock1
//   17 

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//   18 uint16 ADC_Read_Avg(void)
ADC_Read_Avg:
          CFI Block cfiBlock2 Using cfiCommon0
          CFI Function ADC_Read_Avg
        CODE
//   19 {
        FUNCALL ADC_Read_Avg, ADC_Read
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        MOV       A,#-0x10
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 0
//   20   uint32 result = 0;
        MOV       ?V4,#0x0
        MOV       ?V5,#0x0
        MOV       ?V6,#0x0
        MOV       ?V7,#0x0
//   21   for (uint8 i=0; i<32; i++) result += ADC_Read();
        MOV       R6,#0x20
??ADC_Read_Avg_0:
        ; Setup parameters for call to function ADC_Read
        LCALL     `??ADC_Read::?relay`; Banked call to: ADC_Read
        MOV       ?V0,R2
        MOV       ?V1,R3
        CLR       A
        MOV       ?V2,A
        MOV       ?V3,A
        MOV       R0,#?V4
        MOV       R1,#?V0
        LCALL     ?L_ADD
        DJNZ      R6,??ADC_Read_Avg_0
//   22   return (uint16)(result / 32);
        SJMP      ?Subroutine1
//   23 }
          CFI EndBlock cfiBlock2
//   24 

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//   25 float ADC_GetVoltage(void)
ADC_GetVoltage:
          CFI Block cfiBlock3 Using cfiCommon0
          CFI Function ADC_GetVoltage
        CODE
//   26 {
        FUNCALL ADC_GetVoltage, ADC_Read_Avg
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        MOV       A,#-0x10
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 0
//   27   return ADC_Read_Avg() * 0.003949905;
        ; Setup parameters for call to function ADC_Read_Avg
        LCALL     `??ADC_Read_Avg::?relay`; Banked call to: ADC_Read_Avg
        MOV       ?V0,R2
        MOV       ?V1,R3
        CLR       A
        MOV       ?V2,A
        MOV       ?V3,A
        MOV       R0,#?V0
        LCALL     ?UL_TO_FLT
        MOV       DPTR,#__Constant_3b816e34
        MOV       R0,#?V4
        LCALL     ?L_MOV_X
        MOV       R0,#?V0
        MOV       R1,#?V4
        LCALL     ?FLT_MUL
          CFI EndBlock cfiBlock3
        REQUIRE ?Subroutine2
        ; // Fall through to label ?Subroutine2
//   28 }

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine2:
          CFI Block cfiBlock4 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV       R2,?V0
        MOV       R3,?V1
        MOV       R4,?V2
        MOV       R5,?V3
        SJMP      ??Subroutine3_0
          CFI EndBlock cfiBlock4

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine1:
          CFI Block cfiBlock5 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV       A,#0x5
        MOV       R0,#?V4
        LCALL     ?UL_SHR
        MOV       R2,?V4
        MOV       R3,?V5
          CFI EndBlock cfiBlock5
        REQUIRE ??Subroutine3_0
        ; // Fall through to label ??Subroutine3_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine3_0:
          CFI Block cfiBlock6 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV       R7,#0x8
        LJMP      ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock6
//   29 

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//   30 uint16 ADC_Temperature(void)
ADC_Temperature:
          CFI Block cfiBlock7 Using cfiCommon0
          CFI Function ADC_Temperature
        CODE
//   31 {
        REQUIRE ?V0
        REQUIRE ?V1
        PUSH      ?V0
          CFI V0 Frame(CFA_SP, 4)
          CFI CFA_SP SP+-4
        PUSH      ?V1
          CFI V1 Frame(CFA_SP, 5)
          CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
//   32   int16 result = 0;
//   33   ADCCON3 = b00111110; // internal reference, decimation 512, temperature, start conversation
        MOV       0xb6,#0x3e
//   34   while (!(ADCCON1 & (1<<7)));	// wait for conversation to finish
??ADC_Temperature_0:
        MOV       A,0xb4
        MOV       C,0xE0 /* A   */.7
        JNC       ??ADC_Temperature_0
//   35   result = (uint16)ADCL;
        MOV       A,0xba+0x0
//   36   result |= (uint16)(ADCH << 8);
        MOV       R1,0xbb
        MOV       ?V0,A
        MOV       A,R1
        MOV       ?V1,A
//   37   if (result < 0) result = 0;
        CLR       C
        SUBB      A,#0x0
        MOV       C,0xD0 /* PSW */.2
        XRL       A,PSW
        RLC       A
        JNC       ??ADC_Temperature_1
        MOV       ?V0,#0x0
        MOV       ?V1,#0x0
//   38   result >>= 2;
//   39   return result;
??ADC_Temperature_1:
        LJMP      ?Subroutine0 & 0xFFFF
          CFI EndBlock cfiBlock7
        REQUIRE ADCCON3
        REQUIRE ADCCON1
        REQUIRE ADCL
        REQUIRE ADCH
//   40 }
//   41 

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//   42 uint16 ADC_Temperature_Avg(void)
ADC_Temperature_Avg:
          CFI Block cfiBlock8 Using cfiCommon0
          CFI Function ADC_Temperature_Avg
        CODE
//   43 {
        FUNCALL ADC_Temperature_Avg, ADC_Temperature
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        MOV       A,#-0x10
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 0
//   44   TR0 = 1;        // connect the temperature sensor to the SOC_ADC
        MOV       DPTR,#0x624b
        MOV       A,#0x1
        MOVX      @DPTR,A
//   45   ATEST = 1;      // Enables the temperature sensor
        MOV       DPTR,#0x61bd
        MOVX      @DPTR,A
//   46   
//   47   uint32 result = 0;
        MOV       ?V4,#0x0
        MOV       ?V5,#0x0
        MOV       ?V6,#0x0
        MOV       ?V7,#0x0
//   48   for (uint8 i=0; i<32; i++) result += ADC_Temperature();
        MOV       R6,#0x20
??ADC_Temperature_Avg_0:
        ; Setup parameters for call to function ADC_Temperature
        LCALL     `??ADC_Temperature::?relay`; Banked call to: ADC_Temperature
        MOV       ?V0,R2
        MOV       ?V1,R3
        CLR       A
        MOV       ?V2,A
        MOV       ?V3,A
        MOV       R0,#?V4
        MOV       R1,#?V0
        LCALL     ?L_ADD
        DJNZ      R6,??ADC_Temperature_Avg_0
//   49   
//   50   ATEST = 0;      // Disables the temperature sensor
        MOV       DPTR,#0x61bd
        CLR       A
        MOVX      @DPTR,A
//   51   TR0 = 0;        // disconnect the temperature sensor from the SOC_ADC
        MOV       DPTR,#0x624b
        MOVX      @DPTR,A
//   52   
//   53   return (uint16)(result / 32);
        SJMP      ?Subroutine1
//   54 }
          CFI EndBlock cfiBlock8
//   55 

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//   56 float ADC_GetTemperature(void)
ADC_GetTemperature:
          CFI Block cfiBlock9 Using cfiCommon0
          CFI Function ADC_GetTemperature
        CODE
//   57 {
        FUNCALL ADC_GetTemperature, ADC_Temperature_Avg
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        MOV       A,#-0x10
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 0
//   58   return ADC_Temperature_Avg() * 0.0556 - 303.89;
        ; Setup parameters for call to function ADC_Temperature_Avg
        LCALL     `??ADC_Temperature_Avg::?relay`; Banked call to: ADC_Temperature_Avg
        MOV       ?V0,R2
        MOV       ?V1,R3
        CLR       A
        MOV       ?V2,A
        MOV       ?V3,A
        MOV       R0,#?V0
        LCALL     ?UL_TO_FLT
        MOV       DPTR,#__Constant_3d63bcd3
        MOV       R0,#?V4
        LCALL     ?L_MOV_X
        MOV       R0,#?V0
        MOV       R1,#?V4
        LCALL     ?FLT_MUL
        MOV       DPTR,#__Constant_c397f1ec
        MOV       R0,#?V4
        LCALL     ?L_MOV_X
        MOV       R0,#?V0
        MOV       R1,#?V4
        LCALL     ?FLT_ADD
        LJMP      ?Subroutine2 & 0xFFFF
//   59 }
          CFI EndBlock cfiBlock9

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_3b816e34:
        DD 3B816E34H

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_3d63bcd3:
        DD 3D63BCD3H

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_c397f1ec:
        DD 0C397F1ECH

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ADC_Read::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ADC_Read

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ADC_Read_Avg::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ADC_Read_Avg

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ADC_GetVoltage::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ADC_GetVoltage

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ADC_Temperature::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ADC_Temperature

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ADC_Temperature_Avg::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ADC_Temperature_Avg

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ADC_GetTemperature::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ADC_GetTemperature

        END
// 
// 318 bytes in segment BANKED_CODE
//  36 bytes in segment BANK_RELAYS
//   4 bytes in segment SFR_AN
//  12 bytes in segment XDATA_ROM_C
// 
//  36 bytes of CODE     memory
//   0 bytes of CONST    memory (+ 12 bytes shared)
//   0 bytes of DATA     memory (+  4 bytes shared)
// 318 bytes of HUGECODE memory
//
//Errors: none
//Warnings: none
